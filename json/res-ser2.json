[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      22,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      23,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      24,
      2
    ]
  },
  {
    "type": "comment",
    "value": "# #####   ######   ####    #####     #     #####  ",
    "linecol": [
      25,
      2
    ]
  },
  {
    "type": "comment",
    "value": "# #    #  #       #          #       #       #   ",
    "linecol": [
      26,
      2
    ]
  },
  {
    "type": "comment",
    "value": "# #    #  #####    ####      #       #       #  ",
    "linecol": [
      27,
      2
    ]
  },
  {
    "type": "comment",
    "value": "# #####   #            #     #       #       # ",
    "linecol": [
      28,
      2
    ]
  },
  {
    "type": "comment",
    "value": "# #   #   #       #    #     #       #       # ",
    "linecol": [
      29,
      2
    ]
  },
  {
    "type": "comment",
    "value": "# #    #  ######   ####      #       #       # ",
    "linecol": [
      30,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      31,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#      #####   #####   #####   #",
    "linecol": [
      32,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#          #   #   #   #   #   #",
    "linecol": [
      33,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#      #####   #   #   #   #   #",
    "linecol": [
      34,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#      #       #   #   #   #   #",
    "linecol": [
      35,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#      #####   #####   #####   #",
    "linecol": [
      36,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      37,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      38,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      39,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      40,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#                     RES-SER2.m",
    "linecol": [
      41,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#                    =============",
    "linecol": [
      42,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      43,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      44,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#                      zones restituees par l'application",
    "linecol": [
      45,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      46,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      47,
      2
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                49,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                49,
                23
              ]
            }
          ],
          "linecol": [
            49,
            15
          ]
        }
      ],
      "linecol": [
        49,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "INDTXMIN*IMI + INDTXMOY*IMO + (1-INDTXMIN) * (1-INDTXMOY) * max(0,IPHQ2 - ADO1)",
          "linecol": [
            50,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDRS",
          "linecol": [
            50,
            1
          ]
        },
        "linecol": [
          50,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9071",
      "linecol": [
        48,
        7
      ]
    },
    "linecol": [
      48,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                54,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                54,
                23
              ]
            },
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                54,
                30
              ]
            }
          ],
          "linecol": [
            54,
            15
          ]
        }
      ],
      "linecol": [
        54,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 ,( IPHQANT2 - IPHQ2 )*(1-INDTXMIN) * (1-INDTXMOY)) * (1 - positif(IPMOND+INDTEFF))",
          "linecol": [
            55,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RECOMP",
          "linecol": [
            55,
            1
          ]
        },
        "linecol": [
          55,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907100",
      "linecol": [
        53,
        7
      ]
    },
    "linecol": [
      53,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                58,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                58,
                23
              ]
            }
          ],
          "linecol": [
            58,
            15
          ]
        }
      ],
      "linecol": [
        58,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "INDTXMIN*IMI + INDTXMOY*IMO + (1-INDTXMIN) * (1-INDTXMOY) * max(0,IPHQANT2 - ADO1)",
          "linecol": [
            59,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDRSANT",
          "linecol": [
            59,
            1
          ]
        },
        "linecol": [
          59,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(IPMOND+INDTEFF))  * ( IDRSANT + ( positif(ABADO)*ABADO + positif(ABAGU)*ABAGU ) * positif(IDRSANT) + IPHQANT2 * (1 - positif(IDRSANT)) + positif(RE168+TAX1649) * IAMD2 ) + positif(IPMOND+INDTEFF) * ( IDRS*(1-positif(IPHQ2)) + IPHQ2 * positif(IPHQ2) )",
          "linecol": [
            61,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDRS2",
          "linecol": [
            61,
            1
          ]
        },
        "linecol": [
          61,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IDRT",
          "linecol": [
            71,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDRS3",
          "linecol": [
            71,
            1
          ]
        },
        "linecol": [
          71,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907101",
      "linecol": [
        57,
        7
      ]
    },
    "linecol": [
      57,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                73,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                73,
                23
              ]
            }
          ],
          "linecol": [
            73,
            15
          ]
        }
      ],
      "linecol": [
        73,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IS521 - PLANT - IS511) * ( positif(abs(TEFF)) * positif(IDRS) + (1 - positif(abs(TEFF))) )",
          "linecol": [
            74,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAFQF",
          "linecol": [
            74,
            1
          ]
        },
        "linecol": [
          74,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90710",
      "linecol": [
        72,
        7
      ]
    },
    "linecol": [
      72,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                76,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                76,
                23
              ]
            }
          ],
          "linecol": [
            76,
            15
          ]
        }
      ],
      "linecol": [
        76,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RG - PRODOM - PROGUY)",
          "linecol": [
            77,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REVMETRO",
          "linecol": [
            77,
            1
          ]
        },
        "linecol": [
          77,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907105",
      "linecol": [
        75,
        7
      ]
    },
    "linecol": [
      75,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                79,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                79,
                23
              ]
            }
          ],
          "linecol": [
            79,
            15
          ]
        }
      ],
      "linecol": [
        79,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(positif(PRODOM)+positif(CODDAJ)+positif(CODDBJ)) * 1 +  positif(positif(PROGUY)+positif(CODEAJ)+positif(CODEBJ)) * 2 +  positif(positif(PROGUY)+positif(CODEAJ)+positif(CODEBJ))*positif(positif(PRODOM)+positif(CODDAJ)+positif(CODDBJ)) ",
          "linecol": [
            81,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RGPAR",
          "linecol": [
            81,
            1
          ]
        },
        "linecol": [
          81,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90711",
      "linecol": [
        78,
        7
      ]
    },
    "linecol": [
      78,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                87,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                87,
                23
              ]
            }
          ],
          "linecol": [
            87,
            15
          ]
        }
      ],
      "linecol": [
        87,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(IPQT2) * (1 - INDTXMIN) * (1 - INDTXMOY)",
          "linecol": [
            88,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IBAEX",
          "linecol": [
            88,
            1
          ]
        },
        "linecol": [
          88,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9074",
      "linecol": [
        86,
        7
      ]
    },
    "linecol": [
      86,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                90,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                90,
                23
              ]
            }
          ],
          "linecol": [
            90,
            15
          ]
        }
      ],
      "linecol": [
        90,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPLIB + RCMLIB",
          "linecol": [
            92,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRELIB",
          "linecol": [
            92,
            1
          ]
        },
        "linecol": [
          92,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9080",
      "linecol": [
        89,
        7
      ]
    },
    "linecol": [
      89,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                95,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                95,
                23
              ]
            }
          ],
          "linecol": [
            95,
            15
          ]
        }
      ],
      "linecol": [
        95,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "DEC11 * (1 - positif(V_CR2 + V_CNR + IPVLOC))",
          "linecol": [
            96,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDEC",
          "linecol": [
            96,
            1
          ]
        },
        "linecol": [
          96,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9091",
      "linecol": [
        94,
        7
      ]
    },
    "linecol": [
      94,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                98,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                98,
                23
              ]
            }
          ],
          "linecol": [
            98,
            15
          ]
        }
      ],
      "linecol": [
        98,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "ITP",
          "linecol": [
            99,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IPROP",
          "linecol": [
            99,
            1
          ]
        },
        "linecol": [
          99,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9092",
      "linecol": [
        97,
        7
      ]
    },
    "linecol": [
      97,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                101,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                101,
                23
              ]
            }
          ],
          "linecol": [
            101,
            15
          ]
        }
      ],
      "linecol": [
        101,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "REI",
          "linecol": [
            103,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IREP",
          "linecol": [
            103,
            1
          ]
        },
        "linecol": [
          103,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9093",
      "linecol": [
        100,
        7
      ]
    },
    "linecol": [
      100,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                106,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                106,
                22
              ]
            }
          ],
          "linecol": [
            106,
            15
          ]
        }
      ],
      "linecol": [
        106,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETIR2 + arr(BTOINR * TXINT/100)",
          "linecol": [
            107,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETIR",
          "linecol": [
            107,
            1
          ]
        },
        "linecol": [
          107,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETTAXA2 + arr(max(0,TAXASSUR-TAXA9YI- min(TAXASSUR+0,max(0,INE-IRB+AVFISCOPTER))+min(0,IRN - IRANT)) * TXINT/100)",
          "linecol": [
            109,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETTAXA",
          "linecol": [
            109,
            1
          ]
        },
        "linecol": [
          109,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETPCAP2+arr(max(0,IPCAPTAXT-CAP9YI- min(IPCAPTAXT+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR))+min(0,IRN - IRANT+TAXASSUR)) * TXINT/100)",
          "linecol": [
            110,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETPCAP",
          "linecol": [
            110,
            1
          ]
        },
        "linecol": [
          110,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETLOY2+arr(max(0,TAXLOY-LOY9YI- min(TAXLOY+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR-IPCAPTAXT)) +min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT)) * TXINT/100)",
          "linecol": [
            111,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETLOY",
          "linecol": [
            111,
            1
          ]
        },
        "linecol": [
          111,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETCHR2 + arr(max(0,IHAUTREVT-CHR9YI+min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT+TAXLOY)) * TXINT/100)",
          "linecol": [
            113,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETHAUTREV",
          "linecol": [
            113,
            1
          ]
        },
        "linecol": [
          113,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETCS2 + arr(max(0, CSG-CS9YP-CSGIM) * TXINT/100)* positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            115,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETCS",
          "linecol": [
            115,
            1
          ]
        },
        "linecol": [
          115,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETRD2 + arr(max(0, RDSN-RD9YP-CRDSIM) * TXINT/100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            117,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETRD",
          "linecol": [
            117,
            1
          ]
        },
        "linecol": [
          117,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETPS2 + arr(max(0, PRS-PS9YP-PRSPROV) * TXINT/100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            119,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETPS",
          "linecol": [
            119,
            1
          ]
        },
        "linecol": [
          119,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETCVN2 + arr(max(0, CVNSALC-CVN9YP - COD8YT) * TXINT/100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            121,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETCVN",
          "linecol": [
            121,
            1
          ]
        },
        "linecol": [
          121,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETREGV2 + arr(max(0, BREGV-REGV9YP) * TXINT/100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            122,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETREGV",
          "linecol": [
            122,
            1
          ]
        },
        "linecol": [
          122,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETCDIS2 + arr(max(0, CDIS-CDIS9YP - CDISPROV) * TXINT/100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            124,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETCDIS",
          "linecol": [
            124,
            1
          ]
        },
        "linecol": [
          124,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETGLOA2 + arr(max(0, CGLOA-GLO9YP-COD8YL) * TXINT/100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            126,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETGLOA",
          "linecol": [
            126,
            1
          ]
        },
        "linecol": [
          126,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETRSE12 + arr(max(0, RSE1N-RSE19YP-CSPROVYD) * TXINT/100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            128,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETRSE1",
          "linecol": [
            128,
            1
          ]
        },
        "linecol": [
          128,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETRSE22 + arr((max(0, max(0, RSE8TV - CIRSE8TV - CSPROVYF) + max(0, RSE8SA -CIRSE8SA - CSPROVYN) - RSE29YP)) * TXINT/100 ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            130,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETRSE2",
          "linecol": [
            130,
            1
          ]
        },
        "linecol": [
          130,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETRSE32 + arr(max(0, RSE3N-RSE39YP-CSPROVYG) * TXINT/100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            133,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETRSE3",
          "linecol": [
            133,
            1
          ]
        },
        "linecol": [
          133,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETRSE42 + arr((max(0, max(0, RSE8TX - CIRSE8TX - CSPROVYH) + max(0, RSE8SB -CIRSE8SB - CSPROVYP) - RSE49YP)) * TXINT/100 ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            135,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETRSE4",
          "linecol": [
            135,
            1
          ]
        },
        "linecol": [
          135,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETRSE52 + arr(max(0, RSE5N-RSE59YP-CSPROVYE) * TXINT/100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            138,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETRSE5",
          "linecol": [
            138,
            1
          ]
        },
        "linecol": [
          138,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90981",
      "linecol": [
        105,
        7
      ]
    },
    "linecol": [
      105,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                141,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                141,
                22
              ]
            }
          ],
          "linecol": [
            141,
            15
          ]
        }
      ],
      "linecol": [
        141,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOIRTARDIF_A - MAJOIR17_2TARDIF_A",
          "linecol": [
            142,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOIRTARDIF_A1",
          "linecol": [
            142,
            1
          ]
        },
        "linecol": [
          142,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOTAXATARDIF_A - MAJOTA17_2TARDIF_A",
          "linecol": [
            143,
            21
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOTAXATARDIF_A1",
          "linecol": [
            143,
            1
          ]
        },
        "linecol": [
          143,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOCAPTARDIF_A - MAJOCP17_2TARDIF_A",
          "linecol": [
            144,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOCAPTARDIF_A1",
          "linecol": [
            144,
            1
          ]
        },
        "linecol": [
          144,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOLOYTARDIF_A - MAJOLO17_2TARDIF_A",
          "linecol": [
            145,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOLOYTARDIF_A1",
          "linecol": [
            145,
            1
          ]
        },
        "linecol": [
          145,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOHRTARDIF_A - MAJOHR17_2TARDIF_A",
          "linecol": [
            146,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOHRTARDIF_A1",
          "linecol": [
            146,
            1
          ]
        },
        "linecol": [
          146,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOIRTARDIF_D - MAJOIR17_2TARDIF_D",
          "linecol": [
            147,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOIRTARDIF_D1",
          "linecol": [
            147,
            1
          ]
        },
        "linecol": [
          147,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOTAXATARDIF_D - MAJOTA17_2TARDIF_D",
          "linecol": [
            148,
            21
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOTAXATARDIF_D1",
          "linecol": [
            148,
            1
          ]
        },
        "linecol": [
          148,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOCAPTARDIF_D - MAJOCP17_2TARDIF_D",
          "linecol": [
            149,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOCAPTARDIF_D1",
          "linecol": [
            149,
            1
          ]
        },
        "linecol": [
          149,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOLOYTARDIF_D - MAJOLO17_2TARDIF_D",
          "linecol": [
            150,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOLOYTARDIF_D1",
          "linecol": [
            150,
            1
          ]
        },
        "linecol": [
          150,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOHRTARDIF_D - MAJOHR17_2TARDIF_D",
          "linecol": [
            151,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOHRTARDIF_D1",
          "linecol": [
            151,
            1
          ]
        },
        "linecol": [
          151,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOIRTARDIF_P - MAJOIR17_2TARDIF_P",
          "linecol": [
            152,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOIRTARDIF_P1",
          "linecol": [
            152,
            1
          ]
        },
        "linecol": [
          152,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOLOYTARDIF_P - MAJOLO17_2TARDIF_P",
          "linecol": [
            153,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOLOYTARDIF_P1",
          "linecol": [
            153,
            1
          ]
        },
        "linecol": [
          153,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOHRTARDIF_P - MAJOHR17_2TARDIF_P",
          "linecol": [
            154,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOHRTARDIF_P1",
          "linecol": [
            154,
            1
          ]
        },
        "linecol": [
          154,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOIRTARDIF_R - MAJOIR17_2TARDIF_R",
          "linecol": [
            155,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOIRTARDIF_R1",
          "linecol": [
            155,
            1
          ]
        },
        "linecol": [
          155,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOTAXATARDIF_R - MAJOTA17_2TARDIF_R",
          "linecol": [
            156,
            21
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOTAXATARDIF_R1",
          "linecol": [
            156,
            1
          ]
        },
        "linecol": [
          156,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOCAPTARDIF_R - MAJOCP17_2TARDIF_R",
          "linecol": [
            157,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOCAPTARDIF_R1",
          "linecol": [
            157,
            1
          ]
        },
        "linecol": [
          157,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOLOYTARDIF_R - MAJOLO17_2TARDIF_R",
          "linecol": [
            158,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOLOYTARDIF_R1",
          "linecol": [
            158,
            1
          ]
        },
        "linecol": [
          158,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOHRTARDIF_R - MAJOHR17_2TARDIF_R",
          "linecol": [
            159,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOHRTARDIF_R1",
          "linecol": [
            159,
            1
          ]
        },
        "linecol": [
          159,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728IR + arr(BTO * COPETO/100) + FLAG_TRTARDIF * MAJOIRTARDIF_D1 + FLAG_TRTARDIF_F * (positif(PROPIR_A) * MAJOIRTARDIF_P1 + (1 - positif(PROPIR_A) ) * MAJOIRTARDIF_D1) - FLAG_TRTARDIF_F * (1 - positif(PROPIR_A)) * ( positif(FLAG_RECTIF) * MAJOIRTARDIF_R1 + (1 - positif(FLAG_RECTIF)) * MAJOIRTARDIF_A1) )",
          "linecol": [
            160,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJ1",
          "linecol": [
            160,
            1
          ]
        },
        "linecol": [
          160,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728TAXA + arr(max(0,TAXASSUR- min(TAXASSUR+0,max(0,INE-IRB+AVFISCOPTER))+min(0,IRN-IRANT)) * COPETO/100) + FLAG_TRTARDIF * MAJOTAXATARDIF_D1 + FLAG_TRTARDIF_F * MAJOTAXATARDIF_D1 - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJOTAXATARDIF_R1 + (1 - positif(FLAG_RECTIF)) * MAJOTAXATARDIF_A1) )",
          "linecol": [
            169,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJTAXA1",
          "linecol": [
            169,
            1
          ]
        },
        "linecol": [
          169,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728PCAP + arr(max(0,IPCAPTAXT- min(IPCAPTAXT+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR))+min(0,IRN-IRANT+TAXASSUR)) * COPETO/100) + FLAG_TRTARDIF * MAJOCAPTARDIF_D1 + FLAG_TRTARDIF_F * MAJOCAPTARDIF_D1 - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJOCAPTARDIF_R1 + (1 - positif(FLAG_RECTIF)) * MAJOCAPTARDIF_A1) )",
          "linecol": [
            175,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJPCAP1",
          "linecol": [
            175,
            1
          ]
        },
        "linecol": [
          175,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728LOY + arr(max(0,TAXLOY- min(TAXLOY+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR-IPCAPTAXT))+min(0,IRN-IRANT+TAXASSUR+IPCAPTAXT)) * COPETO/100) + FLAG_TRTARDIF * MAJOLOYTARDIF_D1 + FLAG_TRTARDIF_F * (positif(PROPLOY_A) * MAJOLOYTARDIF_P1 + (1 - positif(PROPLOY_A) ) * MAJOLOYTARDIF_D1) - FLAG_TRTARDIF_F * (1 - positif(PROPLOY_A)) * ( positif(FLAG_RECTIF) * MAJOLOYTARDIF_R1 + (1 - positif(FLAG_RECTIF)) * MAJOLOYTARDIF_A1)  )",
          "linecol": [
            181,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJLOY1",
          "linecol": [
            181,
            1
          ]
        },
        "linecol": [
          181,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728CHR + arr(max(0,IHAUTREVT+min(0,IRN-IRANT+TAXASSUR+IPCAPTAXT+TAXLOY)) * COPETO/100) + FLAG_TRTARDIF * MAJOHRTARDIF_D1 + FLAG_TRTARDIF_F * (positif(PROPIR_A) * MAJOHRTARDIF_P1 + (1 - positif(PROPIR_A) ) * MAJOHRTARDIF_D1) - FLAG_TRTARDIF_F * (1 - positif(PROPIR_A)) * ( positif(FLAG_RECTIF) * MAJOHRTARDIF_R1 + (1 - positif(FLAG_RECTIF)) * MAJOHRTARDIF_A1) )",
          "linecol": [
            191,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJCHR1",
          "linecol": [
            191,
            1
          ]
        },
        "linecol": [
          191,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728CS + arr((CSG - CSGIM) * COPETO/100) + FLAG_TRTARDIF * MAJOCSTARDIF_D + FLAG_TRTARDIF_F * (positif(PROPCS_A) * MAJOCSTARDIF_P + (1 - positif(PROPCS_A) ) * MAJOCSTARDIF_D) - FLAG_TRTARDIF_F * (1 - positif(PROPCS_A)) * ( positif(FLAG_RECTIF) * MAJOCSTARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJOCSTARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            200,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJC1",
          "linecol": [
            200,
            1
          ]
        },
        "linecol": [
          200,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728RD + arr((RDSN - CRDSIM) * COPETO/100) + FLAG_TRTARDIF * MAJORDTARDIF_D + FLAG_TRTARDIF_F * (positif(PROPRD_A) * MAJORDTARDIF_P + (1 - positif(PROPRD_A) ) * MAJORDTARDIF_D) - FLAG_TRTARDIF_F * (1 - positif(PROPCS_A)) * ( positif(FLAG_RECTIF) * MAJORDTARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJORDTARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            209,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJR1",
          "linecol": [
            209,
            1
          ]
        },
        "linecol": [
          209,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728PS + arr((PRS - PRSPROV) * COPETO/100) + FLAG_TRTARDIF * MAJOPSTARDIF_D + FLAG_TRTARDIF_F * (positif(PROPPS_A) * MAJOPSTARDIF_P + (1 - positif(PROPPS_A) ) * MAJOPSTARDIF_D) - FLAG_TRTARDIF_F * (1 - positif(PROPPS_A)) * ( positif(FLAG_RECTIF) * MAJOPSTARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJOPSTARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            218,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJP1",
          "linecol": [
            218,
            1
          ]
        },
        "linecol": [
          218,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728CVN + arr((CVNSALC - COD8YT) * COPETO/100) + FLAG_TRTARDIF * MAJOCVNTARDIF_D + FLAG_TRTARDIF_F  * MAJOCVNTARDIF_D - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJOCVNTARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJOCVNTARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            228,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJCVN1",
          "linecol": [
            228,
            1
          ]
        },
        "linecol": [
          228,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728REGV + arr(BREGV * COPETO/100)) * (1 - V_CNR)",
          "linecol": [
            235,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJREGV1",
          "linecol": [
            235,
            1
          ]
        },
        "linecol": [
          235,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728CDIS + arr((CDIS - CDISPROV) * COPETO/100)  * (1 - V_CNR) + FLAG_TRTARDIF * MAJOCDISTARDIF_D + FLAG_TRTARDIF_F  * MAJOCDISTARDIF_D - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJOCDISTARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJOCDISTARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            238,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJCDIS1",
          "linecol": [
            238,
            1
          ]
        },
        "linecol": [
          238,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728GLO + arr((CGLOA-COD8YL) * COPETO/100) + FLAG_TRTARDIF * MAJOGLOTARDIF_D + FLAG_TRTARDIF_F  * MAJOGLOTARDIF_D - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJOGLOTARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJOGLOTARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            245,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJGLO1",
          "linecol": [
            245,
            1
          ]
        },
        "linecol": [
          245,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728RSE1 + arr((RSE1N - CSPROVYD) * COPETO/100) + FLAG_TRTARDIF * MAJORSE1TARDIF_D + FLAG_TRTARDIF_F  * MAJORSE1TARDIF_D - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJORSE1TARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJORSE1TARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            252,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE11",
          "linecol": [
            252,
            1
          ]
        },
        "linecol": [
          252,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728RSE2 + arr(( max(0, RSE8TV - CIRSE8TV - CSPROVYF) + max(0, RSE8SA -CIRSE8SA - CSPROVYN )) * COPETO/100) * (1 - V_CNR) + FLAG_TRTARDIF * MAJORSE2TARDIF_D + FLAG_TRTARDIF_F  * MAJORSE2TARDIF_D - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJORSE2TARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJORSE2TARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            259,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE21",
          "linecol": [
            259,
            1
          ]
        },
        "linecol": [
          259,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728RSE3 + arr((RSE3N - CSPROVYG)* COPETO/100) + FLAG_TRTARDIF * MAJORSE3TARDIF_D + FLAG_TRTARDIF_F  * MAJORSE3TARDIF_D - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJORSE3TARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJORSE3TARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            266,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE31",
          "linecol": [
            266,
            1
          ]
        },
        "linecol": [
          266,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728RSE4 + arr((max(0, RSE8TX - CIRSE8TX - CSPROVYH) + max(0, RSE8SB -CIRSE8SB - CSPROVYP)) * COPETO/100) + FLAG_TRTARDIF * MAJORSE4TARDIF_D + FLAG_TRTARDIF_F  * MAJORSE4TARDIF_D - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJORSE4TARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJORSE4TARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            273,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE41",
          "linecol": [
            273,
            1
          ]
        },
        "linecol": [
          273,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728RSE5 + arr((RSE5N - CSPROVYE) * COPETO/100) + FLAG_TRTARDIF * MAJORSE5TARDIF_D + FLAG_TRTARDIF_F  * MAJORSE5TARDIF_D - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJORSE5TARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJORSE5TARDIF_A) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            280,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE51",
          "linecol": [
            280,
            1
          ]
        },
        "linecol": [
          280,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1758AIR + arr(BTO * COPETO/100) * positif(null(CMAJ-10)+null(CMAJ-17)) + FLAG_TRTARDIF * MAJOIR17_2TARDIF_D + FLAG_TRTARDIF_F * (positif(PROPIR_A) * MAJOIR17_2TARDIF_P + (1 - positif(PROPIR_A) ) * MAJOIR17_2TARDIF_D) - FLAG_TRTARDIF_F * (1 - positif(PROPIR_A)) * ( positif(FLAG_RECTIF) * MAJOIR17_2TARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJOIR17_2TARDIF_A) )",
          "linecol": [
            288,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJ3",
          "linecol": [
            288,
            1
          ]
        },
        "linecol": [
          288,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1758ATAXA + arr(max(0,TAXASSUR+min(0,IRN-IRANT)) * COPETO/100) * positif(null(CMAJ-10)+null(CMAJ-17)) + FLAG_TRTARDIF * MAJOTA17_2TARDIF_D )",
          "linecol": [
            297,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJTAXA3",
          "linecol": [
            297,
            1
          ]
        },
        "linecol": [
          297,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1758APCAP + arr(max(0,IPCAPTAXT+min(0,IRN-IRANT+TAXASSUR)) * COPETO/100) * positif(null(CMAJ-10)+null(CMAJ-17)) + FLAG_TRTARDIF * MAJOCP17_2TARDIF_D )",
          "linecol": [
            301,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJPCAP3",
          "linecol": [
            301,
            1
          ]
        },
        "linecol": [
          301,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1758ALOY + arr(max(0,TAXLOY+min(0,IRN-IRANT+TAXASSUR+IPCAPTAXT)) * COPETO/100) * positif(null(CMAJ-10)+null(CMAJ-17)) + FLAG_TRTARDIF * MAJOLO17_2TARDIF_D + FLAG_TRTARDIF_F * (positif(PROPLOY_A) * MAJOLO17_2TARDIF_P + (1 - positif(PROPLOY_A) ) * MAJOLO17_2TARDIF_D) - FLAG_TRTARDIF_F * (1 - positif(PROPLOY_A)) * ( positif(FLAG_RECTIF) * MAJOLO17_2TARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJOLO17_2TARDIF_A) )",
          "linecol": [
            305,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJLOY3",
          "linecol": [
            305,
            1
          ]
        },
        "linecol": [
          305,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1758ACHR + arr(max(0,IHAUTREVT+min(0,IRN-IRANT+TAXASSUR+IPCAPTAXT+TAXLOY)) * COPETO/100) * positif(null(CMAJ-10)+null(CMAJ-17)) + FLAG_TRTARDIF * MAJOHR17_2TARDIF_D + FLAG_TRTARDIF_F * (positif(PROPHR_A) * MAJOHR17_2TARDIF_P + (1 - positif(PROPHR_A) ) * MAJOHR17_2TARDIF_D) - FLAG_TRTARDIF_F * (1 - positif(PROPHR_A)) * ( positif(FLAG_RECTIF) * MAJOHR17_2TARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJOHR17_2TARDIF_A) )",
          "linecol": [
            315,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJCHR3",
          "linecol": [
            315,
            1
          ]
        },
        "linecol": [
          315,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=03..06,30,32,55: MAJOIRi)",
          "linecol": [
            325,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJ4",
          "linecol": [
            325,
            1
          ]
        },
        "linecol": [
          325,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=03..06,55: MAJOTAXAi)",
          "linecol": [
            326,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJTAXA4",
          "linecol": [
            326,
            1
          ]
        },
        "linecol": [
          326,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJOCAPi)",
          "linecol": [
            327,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJPCAP4",
          "linecol": [
            327,
            1
          ]
        },
        "linecol": [
          327,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJOLOYi)",
          "linecol": [
            328,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJLOY4",
          "linecol": [
            328,
            1
          ]
        },
        "linecol": [
          328,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,30,32,55:MAJOHRi)",
          "linecol": [
            329,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJCHR4",
          "linecol": [
            329,
            1
          ]
        },
        "linecol": [
          329,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,30,32,55:MAJOCSi) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            331,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJC4",
          "linecol": [
            331,
            1
          ]
        },
        "linecol": [
          331,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,30,32,55:MAJORDi) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            332,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJR4",
          "linecol": [
            332,
            1
          ]
        },
        "linecol": [
          332,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,30,32,55:MAJOPSi) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            333,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJP4",
          "linecol": [
            333,
            1
          ]
        },
        "linecol": [
          333,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJOCVNi) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            334,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJCVN4",
          "linecol": [
            334,
            1
          ]
        },
        "linecol": [
          334,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJOCDISi) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            335,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJCDIS4",
          "linecol": [
            335,
            1
          ]
        },
        "linecol": [
          335,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJOGLOi) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            336,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJGLO4",
          "linecol": [
            336,
            1
          ]
        },
        "linecol": [
          336,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJORSE1i) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            337,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE14",
          "linecol": [
            337,
            1
          ]
        },
        "linecol": [
          337,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJORSE2i) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            338,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE24",
          "linecol": [
            338,
            1
          ]
        },
        "linecol": [
          338,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJORSE3i) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            339,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE34",
          "linecol": [
            339,
            1
          ]
        },
        "linecol": [
          339,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJORSE4i) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            340,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE44",
          "linecol": [
            340,
            1
          ]
        },
        "linecol": [
          340,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=03..06,55:MAJORSE5i) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            341,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE54",
          "linecol": [
            341,
            1
          ]
        },
        "linecol": [
          341,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90984",
      "linecol": [
        140,
        7
      ]
    },
    "linecol": [
      140,
      1
    ]
  },
  {
    "name": {
      "type": "symbol",
      "name": "9094",
      "linecol": [
        342,
        11
      ]
    },
    "linecol": [
      342,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOISFTARDIF_A - MAJOISF17TARDIF_A",
          "linecol": [
            344,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOISFTARDIF_A1",
          "linecol": [
            344,
            1
          ]
        },
        "linecol": [
          344,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOISFTARDIF_D - MAJOISF17TARDIF_D",
          "linecol": [
            345,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOISFTARDIF_D1",
          "linecol": [
            345,
            1
          ]
        },
        "linecol": [
          345,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJOISFTARDIF_R - MAJOISF17TARDIF_R",
          "linecol": [
            346,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJOISFTARDIF_R1",
          "linecol": [
            346,
            1
          ]
        },
        "linecol": [
          346,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,MAJO1728ISF + arr(ISF4BASE * COPETO/100) + FLAG_TRTARDIF * MAJOISFTARDIF_D + FLAG_TRTARDIF_F * MAJOISFTARDIF_D - FLAG_TRTARDIF_F * ( positif(FLAG_RECTIF) * MAJOISFTARDIF_R + (1 - positif(FLAG_RECTIF)) * MAJOISFTARDIF_A) )",
          "linecol": [
            347,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJISF1BIS",
          "linecol": [
            347,
            1
          ]
        },
        "linecol": [
          347,
          1
        ]
      }
    ],
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                343,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                343,
                22
              ]
            }
          ],
          "linecol": [
            343,
            15
          ]
        }
      ],
      "linecol": [
        343,
        1
      ]
    },
    "type": "regle_declaration",
    "qualifiers": [
      {
        "type": "symbol",
        "name": "isf",
        "linecol": [
          342,
          7
        ]
      }
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                354,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                354,
                23
              ]
            }
          ],
          "linecol": [
            354,
            15
          ]
        }
      ],
      "linecol": [
        354,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRB + PTOT + TAXASSUR + PTAXA + IPCAPTAXTOT + PPCAP + TAXLOY + PTAXLOY + CHRAPRES + PHAUTREV",
          "linecol": [
            356,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAVIM",
          "linecol": [
            356,
            1
          ]
        },
        "linecol": [
          356,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRB + PTOT",
          "linecol": [
            358,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAVIM2",
          "linecol": [
            358,
            1
          ]
        },
        "linecol": [
          358,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90101",
      "linecol": [
        353,
        7
      ]
    },
    "linecol": [
      353,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                361,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                361,
                23
              ]
            }
          ],
          "linecol": [
            361,
            15
          ]
        }
      ],
      "linecol": [
        361,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(SEUIL_IMPDEFBA-SHBA-(REVTP-BA1) -REVQTOTQHT)",
          "linecol": [
            362,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CDBA",
          "linecol": [
            362,
            1
          ]
        },
        "linecol": [
          362,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "SHBA + (REVTP-BA1) + REVQTOTQHT",
          "linecol": [
            364,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AGRBG",
          "linecol": [
            364,
            1
          ]
        },
        "linecol": [
          364,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90113",
      "linecol": [
        360,
        7
      ]
    },
    "linecol": [
      360,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                367,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                367,
                23
              ]
            }
          ],
          "linecol": [
            367,
            15
          ]
        }
      ],
      "linecol": [
        367,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TOTDAGRI",
          "linecol": [
            368,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DBAIP",
          "linecol": [
            368,
            1
          ]
        },
        "linecol": [
          368,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901130",
      "linecol": [
        366,
        7
      ]
    },
    "linecol": [
      366,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                371,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                371,
                23
              ]
            }
          ],
          "linecol": [
            371,
            15
          ]
        }
      ],
      "linecol": [
        371,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max (0 , BANOR)",
          "linecol": [
            373,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RBAT",
          "linecol": [
            373,
            1
          ]
        },
        "linecol": [
          373,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901131",
      "linecol": [
        370,
        7
      ]
    },
    "linecol": [
      370,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                376,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                376,
                23
              ]
            }
          ],
          "linecol": [
            376,
            15
          ]
        }
      ],
      "linecol": [
        376,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(min(max(1+SEUIL_IMPDEFBA-SHBA-(REVTP-BA1) -REVQTOTQHT,0),1)) * min( 0 , BANOR )",
          "linecol": [
            377,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEFIBA",
          "linecol": [
            377,
            1
          ]
        },
        "linecol": [
          377,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901132",
      "linecol": [
        375,
        7
      ]
    },
    "linecol": [
      375,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                380,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                380,
                23
              ]
            }
          ],
          "linecol": [
            380,
            16
          ]
        }
      ],
      "linecol": [
        380,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "abs(NAPT)",
          "linecol": [
            381,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPALEG",
          "linecol": [
            381,
            1
          ]
        },
        "linecol": [
          381,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1 - positif_ou_nul(NAPT)",
          "linecol": [
            383,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDNAP",
          "linecol": [
            383,
            1
          ]
        },
        "linecol": [
          383,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , V_ANC_NAP - NAPT) * positif(null(MESGOUV - 1) + null(MESGOUV - 2) + null(MESGOUV2 - 4) + null(MESGOUV2 - 5))",
          "linecol": [
            385,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GAINDBLELIQ",
          "linecol": [
            385,
            1
          ]
        },
        "linecol": [
          385,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - null(V_ANC_NAP*(1-2*V_IND_NAP))) * (V_ANC_NAP*(1-2*V_IND_NAP) - NAPT)/ V_ANC_NAP*(1-2*V_IND_NAP)  * (1 - V_CNR2)",
          "linecol": [
            388,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GAINPOURCLIQ",
          "linecol": [
            388,
            1
          ]
        },
        "linecol": [
          388,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_ANC_NAP * (1-2*V_IND_NAP)",
          "linecol": [
            390,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ANCNAP",
          "linecol": [
            390,
            1
          ]
        },
        "linecol": [
          390,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif( ( positif(IRESTIT - 180) + positif((-1)*ANCNAP - 180) + positif(IRESTIT - IRNET - 180) * null(V_IND_TRAIT-5) ) * positif(PPETOTX - PPERSA - 180) ) * (1 - V_CNR)",
          "linecol": [
            393,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDPPEMENS",
          "linecol": [
            393,
            1
          ]
        },
        "linecol": [
          393,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "INDPPEMENS * min(max(IREST,(-1)*ANCNAP*positif((-1)*ANCNAP)),PPETOTX-PPERSA) * null(V_IND_TRAIT-4) + INDPPEMENS * max(0,min(IRESTIT-IRNET,PPETOTX-PPERSA)) * null(V_IND_TRAIT-5)",
          "linecol": [
            399,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASPPEMENS",
          "linecol": [
            399,
            1
          ]
        },
        "linecol": [
          399,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901133",
      "linecol": [
        379,
        7
      ]
    },
    "linecol": [
      379,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                403,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                403,
                23
              ]
            }
          ],
          "linecol": [
            403,
            15
          ]
        }
      ],
      "linecol": [
        403,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0, NAPTEMPCX- TOTIRPSANT)",
          "linecol": [
            404,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IINET",
          "linecol": [
            404,
            1
          ]
        },
        "linecol": [
          404,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , NAPTIR)",
          "linecol": [
            405,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IINETIR",
          "linecol": [
            405,
            1
          ]
        },
        "linecol": [
          405,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90114",
      "linecol": [
        402,
        7
      ]
    },
    "linecol": [
      402,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                408,
                15
              ]
            }
          ],
          "linecol": [
            408,
            15
          ]
        }
      ],
      "linecol": [
        408,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRNET * positif ( IRNET - SEUIL_61 )",
          "linecol": [
            410,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IINET",
          "linecol": [
            410,
            1
          ]
        },
        "linecol": [
          410,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901140",
      "linecol": [
        407,
        7
      ]
    },
    "linecol": [
      407,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                413,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                413,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                413,
                32
              ]
            }
          ],
          "linecol": [
            413,
            15
          ]
        }
      ],
      "linecol": [
        413,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(IAR + PIR - IRANT) * (1 - INDTXMIN)  * (1 - INDTXMOY) + min(0, IAR + PIR - IRANT) * (INDTXMIN + INDTXMOY) + max(0, IAR + PIR - IRANT) * (INDTXMIN * positif(IAVIMBIS - SEUIL_TXMIN) + INDTXMOY * positif(IAVIMO - SEUIL_TXMIN)) ",
          "linecol": [
            414,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRNET2",
          "linecol": [
            414,
            1
          ]
        },
        "linecol": [
          414,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9011410",
      "linecol": [
        412,
        7
      ]
    },
    "linecol": [
      412,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                421,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                421,
                23
              ]
            }
          ],
          "linecol": [
            421,
            15
          ]
        }
      ],
      "linecol": [
        421,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max ( 0 ,   IRNET2 + (TAXASSUR + PTAXA - min(TAXASSUR+PTAXA+0,max(0,INE-IRB+AVFISCOPTER)) - max(0,TAXASSUR + PTAXA  - min(TAXASSUR + PTAXA + 0,max(0,INE-IRB+AVFISCOPTER))+ min(0,IRNET2))) + (IPCAPTAXT + PPCAP - min(IPCAPTAXT + PPCAP,max(0,INE-IRB+AVFISCOPTER -TAXASSUR-PTAXA)) - max(0,IPCAPTAXT+PPCAP -min(IPCAPTAXT+PPCAP,max(0,INE-IRB+AVFISCOPTER- TAXASSUR - PTAXA ))+ min(0,TAXANEG))) + (TAXLOY + PTAXLOY - min(TAXLOY + PTAXLOY,max(0,INE-IRB+AVFISCOPTER -TAXASSUR-PTAXA-IPCAPTAXT-PPCAP)) - max(0,TAXLOY+PTAXLOY -min(TAXLOY+PTAXLOY,max(0,INE-IRB+AVFISCOPTER- TAXASSUR - PTAXA-IPCAPTAXT-PPCAP ))+ min(0,PCAPNEG))) + (IHAUTREVT + PHAUTREV - max(0,IHAUTREVT+PHAUTREV + min(0,LOYELEVNEG))) ) ",
          "linecol": [
            423,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRNETTER",
          "linecol": [
            423,
            1
          ]
        },
        "linecol": [
          423,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , IRNETTER - PIR * positif(SEUIL_12 - IRNETTER + PIR) * positif(SEUIL_12 - PIR) * positif_ou_nul(IRNETTER - SEUIL_12))",
          "linecol": [
            433,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRNETBIS",
          "linecol": [
            433,
            1
          ]
        },
        "linecol": [
          433,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901141",
      "linecol": [
        420,
        7
      ]
    },
    "linecol": [
      420,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                438,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                438,
                23
              ]
            }
          ],
          "linecol": [
            438,
            15
          ]
        }
      ],
      "linecol": [
        438,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(NRINET + IMPRET + (RASAR * V_CR2) + 0) * IRNETBIS * positif_ou_nul(IRB - min(max(0,IRB-AVFISCOPTER),INE)) + positif(NRINET + IMPRET + (RASAR * V_CR2) + 0) * ( ((positif(IRE) + positif_ou_nul(IAVIM - SEUIL_61) * (1 - positif(IRE))) * max(0, CHRNEG + NRINET + IMPRET + (RASAR * V_CR2) + (IRNETBIS * positif(positif_ou_nul(IAVIM - SEUIL_61)) * positif_ou_nul(IRB - min(max(0,IRB-AVFISCOPTER),INE))) ) * (1 - positif(IRESTIT))) + ((1 - positif_ou_nul(IAVIM - SEUIL_61)) * (1 - positif(IRE)) * max(0, CHRNEG + NRINET + IMPRET + (RASAR * V_CR2))) )",
          "linecol": [
            439,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRNET",
          "linecol": [
            439,
            1
          ]
        },
        "linecol": [
          439,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901143",
      "linecol": [
        437,
        7
      ]
    },
    "linecol": [
      437,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                451,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                451,
                23
              ]
            }
          ],
          "linecol": [
            451,
            15
          ]
        }
      ],
      "linecol": [
        451,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max (0,NAPTIR)",
          "linecol": [
            452,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTNET",
          "linecol": [
            452,
            1
          ]
        },
        "linecol": [
          452,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901144",
      "linecol": [
        450,
        7
      ]
    },
    "linecol": [
      450,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                454,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                454,
                23
              ]
            }
          ],
          "linecol": [
            454,
            15
          ]
        }
      ],
      "linecol": [
        454,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(0 , TAXASSUR + PTAXA - min(TAXASSUR + PTAXA + 0 , max(0,INE-IRB+AVFISCOPTER)) + min(0 , IRNET2))",
          "linecol": [
            455,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXANEG",
          "linecol": [
            455,
            1
          ]
        },
        "linecol": [
          455,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(TAXASSUR) * max(0 , TAXASSUR + PTAXA  - min(TAXASSUR + PTAXA + 0,max(0,INE-IRB+AVFISCOPTER)) + min(0 , IRNET2))",
          "linecol": [
            456,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXNET",
          "linecol": [
            456,
            1
          ]
        },
        "linecol": [
          456,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(NRINET + IMPRET + (RASAR * V_CR2) + 0) * TAXNET + positif(NRINET + IMPRET + (RASAR * V_CR2) + 0) * (positif_ou_nul(IAMD1 - SEUIL_61) * TAXNET + (1 - positif_ou_nul(IAMD1  - SEUIL_61)) * 0)",
          "linecol": [
            458,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXANET",
          "linecol": [
            458,
            1
          ]
        },
        "linecol": [
          458,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9011411",
      "linecol": [
        453,
        7
      ]
    },
    "linecol": [
      453,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                463,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                463,
                23
              ]
            }
          ],
          "linecol": [
            463,
            15
          ]
        }
      ],
      "linecol": [
        463,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(0,IPCAPTAXT+PPCAP -min(IPCAPTAXT+PPCAP,max(0,INE-IRB+AVFISCOPTER- TAXASSUR - PTAXA ))+ min(0,TAXANEG))",
          "linecol": [
            464,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PCAPNEG",
          "linecol": [
            464,
            1
          ]
        },
        "linecol": [
          464,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IPCAPTAXT) * max(0,IPCAPTAXT+PPCAP -min(IPCAPTAXT+PPCAP,max(0,INE-IRB+AVFISCOPTER- TAXASSUR - PTAXA ))+ min(0,TAXANEG))",
          "linecol": [
            465,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PCAPTAXNET",
          "linecol": [
            465,
            1
          ]
        },
        "linecol": [
          465,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(NRINET + IMPRET + (RASAR * V_CR2) + 0) * PCAPTAXNET + positif(NRINET + IMPRET + (RASAR * V_CR2) + 0) * ( positif_ou_nul(IAMD1  - SEUIL_61) * PCAPTAXNET + (1 - positif_ou_nul(IAMD1 - SEUIL_61)) * 0 )",
          "linecol": [
            467,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PCAPNET",
          "linecol": [
            467,
            1
          ]
        },
        "linecol": [
          467,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90114111",
      "linecol": [
        462,
        7
      ]
    },
    "linecol": [
      462,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                472,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                472,
                23
              ]
            }
          ],
          "linecol": [
            472,
            15
          ]
        }
      ],
      "linecol": [
        472,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(0,TAXLOY + PTAXLOY -min(TAXLOY + PTAXLOY,max(0,INE-IRB+AVFISCOPTER- TAXASSUR - PTAXA-IPCAPTAXT-PPCAP ))+ min(0,PCAPNEG))",
          "linecol": [
            473,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LOYELEVNEG",
          "linecol": [
            473,
            1
          ]
        },
        "linecol": [
          473,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(LOYELEV) * max(0,TAXLOY+PTAXLOY -min(TAXLOY+PTAXLOY,max(0,INE-IRB+AVFISCOPTER- TAXASSUR - PTAXA-IPCAPTAXT-PPCAP ))+ min(0,PCAPNEG))",
          "linecol": [
            474,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LOYELEVNET",
          "linecol": [
            474,
            1
          ]
        },
        "linecol": [
          474,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(NRINET + IMPRET + (RASAR * V_CR2) + 0) * LOYELEVNET + positif(NRINET + IMPRET + (RASAR * V_CR2) + 0) * ( positif_ou_nul(IAMD1 - SEUIL_61) * LOYELEVNET + (1 - positif_ou_nul(IAMD1 - SEUIL_61)) * 0 )",
          "linecol": [
            476,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXLOYNET",
          "linecol": [
            476,
            1
          ]
        },
        "linecol": [
          476,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90114112",
      "linecol": [
        471,
        7
      ]
    },
    "linecol": [
      471,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                482,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                482,
                23
              ]
            }
          ],
          "linecol": [
            482,
            15
          ]
        }
      ],
      "linecol": [
        482,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(0 , IHAUTREVT + PHAUTREV + min(0 , LOYELEVNEG))",
          "linecol": [
            483,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRNEG",
          "linecol": [
            483,
            1
          ]
        },
        "linecol": [
          483,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IHAUTREVT) * max(0,IHAUTREVT+PHAUTREV + min(0,LOYELEVNEG)) ",
          "linecol": [
            484,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRNET",
          "linecol": [
            484,
            1
          ]
        },
        "linecol": [
          484,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(null(NRINET + IMPRET + (RASAR * V_CR2) + 0) * CHRNET + positif(NRINET + IMPRET + (RASAR * V_CR2) + 0) * ( positif_ou_nul(IAMD1 - SEUIL_61) * CHRNET + (1 - positif_ou_nul(IAMD1 - SEUIL_61)) * 0 ) ) ",
          "linecol": [
            487,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HAUTREVNET",
          "linecol": [
            487,
            1
          ]
        },
        "linecol": [
          487,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901141111",
      "linecol": [
        481,
        7
      ]
    },
    "linecol": [
      481,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                495,
                15
              ]
            }
          ],
          "linecol": [
            495,
            15
          ]
        }
      ],
      "linecol": [
        495,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , IRNET2 + RECOMP)",
          "linecol": [
            497,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRNET",
          "linecol": [
            497,
            1
          ]
        },
        "linecol": [
          497,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9011412",
      "linecol": [
        494,
        7
      ]
    },
    "linecol": [
      494,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                500,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                500,
                23
              ]
            }
          ],
          "linecol": [
            500,
            15
          ]
        }
      ],
      "linecol": [
        500,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min (IRANT , IAR + PIR) * positif(IRANT)",
          "linecol": [
            502,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRPROV",
          "linecol": [
            502,
            1
          ]
        },
        "linecol": [
          502,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9011413",
      "linecol": [
        499,
        7
      ]
    },
    "linecol": [
      499,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                505,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                505,
                23
              ]
            }
          ],
          "linecol": [
            505,
            15
          ]
        }
      ],
      "linecol": [
        505,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(PRS + PPRS )",
          "linecol": [
            506,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPPSAVIM",
          "linecol": [
            506,
            1
          ]
        },
        "linecol": [
          506,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(CSG + PCSG )",
          "linecol": [
            507,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCSAVIM",
          "linecol": [
            507,
            1
          ]
        },
        "linecol": [
          507,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(RDSN + PRDS)",
          "linecol": [
            508,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRDAVIM",
          "linecol": [
            508,
            1
          ]
        },
        "linecol": [
          508,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(CVNSALC + PCVN)",
          "linecol": [
            509,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCVNAVIM",
          "linecol": [
            509,
            1
          ]
        },
        "linecol": [
          509,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BREGV + PREGV)",
          "linecol": [
            510,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPREGVAVIM",
          "linecol": [
            510,
            1
          ]
        },
        "linecol": [
          510,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(CDIS + PCDIS)",
          "linecol": [
            511,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCDISAVIM",
          "linecol": [
            511,
            1
          ]
        },
        "linecol": [
          511,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(CGLOA + PGLOA-COD8YL)",
          "linecol": [
            512,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPGLOAVIM",
          "linecol": [
            512,
            1
          ]
        },
        "linecol": [
          512,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(RSE1N + PRSE1)",
          "linecol": [
            513,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE1AVIM",
          "linecol": [
            513,
            1
          ]
        },
        "linecol": [
          513,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(RSE2N + PRSE2)",
          "linecol": [
            514,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE2AVIM",
          "linecol": [
            514,
            1
          ]
        },
        "linecol": [
          514,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(RSE3N + PRSE3)",
          "linecol": [
            515,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE3AVIM",
          "linecol": [
            515,
            1
          ]
        },
        "linecol": [
          515,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(RSE4N + PRSE4)",
          "linecol": [
            516,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE4AVIM",
          "linecol": [
            516,
            1
          ]
        },
        "linecol": [
          516,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(RSE5N + PRSE5)",
          "linecol": [
            517,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE5AVIM",
          "linecol": [
            517,
            1
          ]
        },
        "linecol": [
          517,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , NAPPSAVIM + NAPCSAVIM + NAPRDAVIM + NAPCVNAVIM  + NAPREGVAVIM + NAPCDISAVIM + NAPGLOAVIM + NAPRSE1AVIM + NAPRSE2AVIM + NAPRSE3AVIM + NAPRSE4AVIM + NAPRSE5AVIM)",
          "linecol": [
            518,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCRPAVIM",
          "linecol": [
            518,
            1
          ]
        },
        "linecol": [
          518,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PRSAC+CSGAC+RDSNAC + CDIS + RSE1N + RSE2N + RSE3N + RSE4N + RSE5N",
          "linecol": [
            520,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCRAC",
          "linecol": [
            520,
            1
          ]
        },
        "linecol": [
          520,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9012401",
      "linecol": [
        504,
        7
      ]
    },
    "linecol": [
      504,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                522,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                522,
                23
              ]
            }
          ],
          "linecol": [
            522,
            15
          ]
        }
      ],
      "linecol": [
        522,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PRS+CSG+RDSN +CVNSALC + CDIS + CGLOA + RSE1N + RSE2N + RSE3N + RSE4N + RSE5N",
          "linecol": [
            523,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCRPIAMD1",
          "linecol": [
            523,
            1
          ]
        },
        "linecol": [
          523,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90114010",
      "linecol": [
        521,
        7
      ]
    },
    "linecol": [
      521,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                525,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                525,
                23
              ]
            }
          ],
          "linecol": [
            525,
            15
          ]
        }
      ],
      "linecol": [
        525,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  CSNET",
          "linecol": [
            526,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCS",
          "linecol": [
            526,
            1
          ]
        },
        "linecol": [
          526,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  RDNET",
          "linecol": [
            527,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRD",
          "linecol": [
            527,
            1
          ]
        },
        "linecol": [
          527,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  PRSNET",
          "linecol": [
            528,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPPS",
          "linecol": [
            528,
            1
          ]
        },
        "linecol": [
          528,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  CVNNET",
          "linecol": [
            529,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCVN",
          "linecol": [
            529,
            1
          ]
        },
        "linecol": [
          529,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) * REGVNET",
          "linecol": [
            530,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPREGV",
          "linecol": [
            530,
            1
          ]
        },
        "linecol": [
          530,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  CDISNET",
          "linecol": [
            531,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCDIS",
          "linecol": [
            531,
            1
          ]
        },
        "linecol": [
          531,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  CGLOANET",
          "linecol": [
            532,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPGLOA",
          "linecol": [
            532,
            1
          ]
        },
        "linecol": [
          532,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  RSE1NET",
          "linecol": [
            533,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE1",
          "linecol": [
            533,
            1
          ]
        },
        "linecol": [
          533,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  RSE2NET",
          "linecol": [
            534,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE2",
          "linecol": [
            534,
            1
          ]
        },
        "linecol": [
          534,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  RSE3NET",
          "linecol": [
            535,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE3",
          "linecol": [
            535,
            1
          ]
        },
        "linecol": [
          535,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  RSE4NET",
          "linecol": [
            536,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE4",
          "linecol": [
            536,
            1
          ]
        },
        "linecol": [
          536,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_61 - VARPS61) * 0 +  (1- positif(SEUIL_61 - VARPS61)) *  RSE5NET",
          "linecol": [
            537,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPRSE5",
          "linecol": [
            537,
            1
          ]
        },
        "linecol": [
          537,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , NAPPS + NAPCS + NAPRD + NAPCVN + NAPCDIS + NAPGLOA + NAPRSE1 + NAPRSE2 + NAPRSE3 + NAPRSE4 + NAPRSE5)",
          "linecol": [
            538,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCRP2",
          "linecol": [
            538,
            1
          ]
        },
        "linecol": [
          538,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9011402",
      "linecol": [
        524,
        7
      ]
    },
    "linecol": [
      524,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                540,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                540,
                23
              ]
            }
          ],
          "linecol": [
            540,
            15
          ]
        }
      ],
      "linecol": [
        540,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "KIR",
          "linecol": [
            541,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IKIRN",
          "linecol": [
            541,
            1
          ]
        },
        "linecol": [
          541,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , (IRB * positif_ou_nul(IRB-SEUIL_61)-INE-IRE) * positif_ou_nul((IRB*positif_ou_nul(IRB-SEUIL_61)-INE-IRE)-SEUIL_12)) * (1 - V_CNR)",
          "linecol": [
            543,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPTHNET",
          "linecol": [
            543,
            1
          ]
        },
        "linecol": [
          543,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9011407",
      "linecol": [
        539,
        7
      ]
    },
    "linecol": [
      539,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                548,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                548,
                23
              ]
            }
          ],
          "linecol": [
            548,
            15
          ]
        }
      ],
      "linecol": [
        548,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "abs(min(0 , IRN + PIR + NRINET + IMPRET + RASAR + (TAXASSUR + PTAXA - min(TAXASSUR+PTAXA+0,max(0,INE-IRB+AVFISCOPTER))) + (IPCAPTAXT + PPCAP - min(IPCAPTAXT + PPCAP,max(0,INE-IRB+AVFISCOPTER -TAXASSUR-PTAXA))) + (TAXLOY + PTAXLOY - min(TAXLOY + PTAXLOY,max(0,INE-IRB+AVFISCOPTER -TAXASSUR-PTAXA-IPCAPTAXT-PPCAP))) + ((IHAUTREVT + PHAUTREV) -min((IHAUTREVT + PHAUTREV),max(0,INE-IRB+AVFISCOPTER-TAXASSUR-PTAXA-IPCAPTAXT-PPCAP-TAXLOY - PTAXLOY))) + null(4-V_IND_TRAIT)* max(0 ,  TOTCR - CSGIM - CRDSIM - PRSPROV - COD8YT - CDISPROV -COD8YL-CSPROVYD -CSPROVYE - CSPROVYF - CSPROVYN - CSPROVYG - CSPROVYH - CSPROVYP ) * positif_ou_nul((TOTCR - CSGIM - CRDSIM - PRSPROV - COD8YT - CDISPROV -COD8YL-CSPROVYD - CSPROVYE-CSPROVYF- CSPROVYN-CSPROVYG-CSPROVYH - CSPROVYP) - SEUIL_61) + null(5-V_IND_TRAIT) * max(0 , (TOTCR - CSGIM - CRDSIM - PRSPROV - COD8YT - CDISPROV -COD8YL-CSPROVYD - CSPROVYE-CSPROVYF- CSPROVYN -CSPROVYG-CSPROVYH- CSPROVYP)) * positif_ou_nul((TOTCR - CSGIM - CRDSIM - PRSPROV - COD8YT - CDISPROV -COD8YL-CSPROVYD -CSPROVYE-CSPROVYF- CSPROVYN-CSPROVYG-CSPROVYH- CSPROVYP) - SEUIL_61) ) )",
          "linecol": [
            549,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRESTIT",
          "linecol": [
            549,
            1
          ]
        },
        "linecol": [
          549,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90115",
      "linecol": [
        547,
        7
      ]
    },
    "linecol": [
      547,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                566,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                566,
                23
              ]
            }
          ],
          "linecol": [
            566,
            15
          ]
        }
      ],
      "linecol": [
        566,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "abs(min(0 , IRN + PIR + NRINET + IMPRET + RASAR + (TAXASSUR + PTAXA - min(TAXASSUR+PTAXA+0,max(0,INE-IRB+AVFISCOPTER))) + (IPCAPTAXT + PPCAP - min(IPCAPTAXT + PPCAP,max(0,INE-IRB+AVFISCOPTER -TAXASSUR-PTAXA))) + (TAXLOY + PTAXLOY - min(TAXLOY + PTAXLOY,max(0,INE-IRB+AVFISCOPTER -TAXASSUR-PTAXA-IPCAPTAXT-PPCAP))) + ((IHAUTREVT + PHAUTREV) -min((IHAUTREVT + PHAUTREV),max(0,INE-IRB+AVFISCOPTER-TAXASSUR-PTAXA-IPCAPTAXT-PPCAP-TAXLOY - PTAXLOY))) ) )",
          "linecol": [
            567,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRESTITIR",
          "linecol": [
            567,
            1
          ]
        },
        "linecol": [
          567,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90115001",
      "linecol": [
        565,
        7
      ]
    },
    "linecol": [
      565,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                575,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                575,
                23
              ]
            }
          ],
          "linecol": [
            575,
            15
          ]
        }
      ],
      "linecol": [
        575,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,max(0,-(NAPTEMPCX)) - max(0,-(TOTIRPSANT)))",
          "linecol": [
            576,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IREST",
          "linecol": [
            576,
            1
          ]
        },
        "linecol": [
          576,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901151",
      "linecol": [
        574,
        7
      ]
    },
    "linecol": [
      574,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                578,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                578,
                23
              ]
            }
          ],
          "linecol": [
            578,
            15
          ]
        }
      ],
      "linecol": [
        578,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , IRESTITIR - RECUMBISIR)",
          "linecol": [
            579,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRESTIR",
          "linecol": [
            579,
            1
          ]
        },
        "linecol": [
          579,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,NAPTEMP - TOTIRPSANT)",
          "linecol": [
            580,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IINETCALC",
          "linecol": [
            580,
            1
          ]
        },
        "linecol": [
          580,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRPSCUM -RECUM - TOTIRPSANT",
          "linecol": [
            581,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VARNON",
          "linecol": [
            581,
            1
          ]
        },
        "linecol": [
          581,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(20 - V_NOTRAIT) * ( positif(SEUIL_8 - RECUM) * positif(SEUIL_12 - IRPSCUM) * IRPSCUM + (1-positif(SEUIL_8 - RECUM) * positif(SEUIL_12 - IRPSCUM)) * 0 ) + (1-positif(20-V_NOTRAIT)) * ( positif(SEUIL_8 - RECUM) * positif(SEUIL_12 - IRPSCUM) * ( positif(SEUIL_12 - abs(TOTIRPSANT))* max(0,IRPSCUM-RECUM-TOTIRPSANT) + (1-positif(SEUIL_12 - abs(TOTIRPSANT))) * IRPSCUM ) + (1-positif(SEUIL_8 - RECUM) * positif(SEUIL_12 - IRPSCUM)) * ( positif(positif(SEUIL_12-VARNON) * positif(VARNON) + positif(SEUIL_8-abs(VARNON)) * (1-positif(VARNON))) * max(0,IRPSCUM-RECUM-TOTIRPSANT) +(1-positif(positif(SEUIL_12-VARNON) * positif(VARNON) + positif(SEUIL_8-abs(VARNON)) * (1-positif(VARNON)))) * 0 ) )",
          "linecol": [
            582,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NONMER",
          "linecol": [
            582,
            1
          ]
        },
        "linecol": [
          582,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(20 - V_NOTRAIT) * ( positif(SEUIL_8 - RECUM) * positif(SEUIL_12 - IRPSCUM) * RECUM + (1-positif(SEUIL_8 - RECUM) * positif(SEUIL_12 - IRPSCUM)) * 0 ) + (1-positif(20-V_NOTRAIT)) * ( positif(SEUIL_8 - RECUM) * positif(SEUIL_12 - IRPSCUM) * ( positif(SEUIL_12 - abs(TOTIRPSANT))* max(0,TOTIRPSANT - (IRPSCUM-RECUM)) + (1-positif(SEUIL_12 - abs(TOTIRPSANT))) * RECUM ) + (1-positif(SEUIL_8 - RECUM) * positif(SEUIL_12 - IRPSCUM)) * ( positif(positif(SEUIL_12-VARNON) * positif(VARNON) + positif(SEUIL_8-abs(VARNON)) * (1-positif(VARNON))) * max(0,TOTIRPSANT - (IRPSCUM-RECUM)) +(1-positif(positif(SEUIL_12-VARNON) * positif(VARNON) + positif(SEUIL_8-abs(VARNON)) * (1-positif(VARNON)))) * 0 ) )",
          "linecol": [
            602,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NONREST",
          "linecol": [
            602,
            1
          ]
        },
        "linecol": [
          602,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9011511",
      "linecol": [
        577,
        7
      ]
    },
    "linecol": [
      577,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                623,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                623,
                23
              ]
            }
          ],
          "linecol": [
            623,
            15
          ]
        }
      ],
      "linecol": [
        623,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(IRN + TAXANET + PIR + PCAPNET + TAXLOYNET + HAUTREVNET - SEUIL_12)",
          "linecol": [
            624,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTREC",
          "linecol": [
            624,
            1
          ]
        },
        "linecol": [
          624,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "901160",
      "linecol": [
        622,
        7
      ]
    },
    "linecol": [
      622,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                626,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                626,
                24
              ]
            }
          ],
          "linecol": [
            626,
            16
          ]
        }
      ],
      "linecol": [
        626,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPCRP) * positif_ou_nul(NAPCRPAVIM - SEUIL_61)",
          "linecol": [
            628,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSREC",
          "linecol": [
            628,
            1
          ]
        },
        "linecol": [
          628,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPCRINR)",
          "linecol": [
            630,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSRECINR",
          "linecol": [
            630,
            1
          ]
        },
        "linecol": [
          630,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90116011",
      "linecol": [
        625,
        7
      ]
    },
    "linecol": [
      625,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                633,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                633,
                23
              ]
            }
          ],
          "linecol": [
            633,
            15
          ]
        }
      ],
      "linecol": [
        633,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(max(0 , NAPRSE1 + NAPRSE2 + NAPRSE3 + NAPRSE4 + NAPRSE5) * positif_ou_nul(NAPCRP- SEUIL_12))",
          "linecol": [
            635,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSEREC",
          "linecol": [
            635,
            1
          ]
        },
        "linecol": [
          635,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90116",
      "linecol": [
        632,
        7
      ]
    },
    "linecol": [
      632,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                639,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                639,
                24
              ]
            }
          ],
          "linecol": [
            639,
            16
          ]
        }
      ],
      "linecol": [
        639,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(PRS_A + PPRS_A + CSG_A + RDS_A + PCSG_A + PRDS_A + CVN_A+PCVN_A+ CDIS_A +PCDIS_A+ CGLOA_A +PGLOA_A+ REGV_A + PREGV_A + RSE1BASE_A + PRSE1_A + RSE2BASE_A + PRSE2_A + RSE3BASE_A + PRSE3_A + RSE4BASE_A + PRSE4_A + RSE5BASE_A+ PRSE5_A + IRNIN_A + PIR_A + TAXABASE_A + PTAXA_A + CHRBASE_A + PCHR_A + PCAPBASE_A + PPCAP_A + LOYBASE_A + PLOY_A - SEUIL_12)",
          "linecol": [
            641,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSRECA",
          "linecol": [
            641,
            1
          ]
        },
        "linecol": [
          641,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9011603",
      "linecol": [
        638,
        7
      ]
    },
    "linecol": [
      638,
      1
    ]
  },
  {
    "name": {
      "type": "symbol",
      "name": "90110",
      "linecol": [
        647,
        11
      ]
    },
    "linecol": [
      647,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(ANTISFAFF  - ISF4BIS * positif_ou_nul (ISF4BIS - SEUIL_12)) * (1-positif_ou_nul (ISF4BIS - SEUIL_12)) + (ANTISFAFF  - ISFNET * positif_ou_nul (ISFNET - SEUIL_12)) * positif_ou_nul(ISF4BIS - SEUIL_12))",
          "linecol": [
            649,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ISFDEGR",
          "linecol": [
            649,
            1
          ]
        },
        "linecol": [
          649,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "ISFDEGR * positif_ou_nul(ISFDEGR - SEUIL_8)",
          "linecol": [
            655,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ISFDEG",
          "linecol": [
            655,
            1
          ]
        },
        "linecol": [
          655,
          1
        ]
      }
    ],
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                648,
                15
              ]
            }
          ],
          "linecol": [
            648,
            15
          ]
        }
      ],
      "linecol": [
        648,
        1
      ]
    },
    "type": "regle_declaration",
    "qualifiers": [
      {
        "type": "symbol",
        "name": "isf",
        "linecol": [
          647,
          7
        ]
      }
    ]
  },
  {
    "name": {
      "type": "symbol",
      "name": "9011602",
      "linecol": [
        657,
        18
      ]
    },
    "linecol": [
      657,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,max(0,TOTIRPSANT) - max(0,NAPTEMPCX))",
          "linecol": [
            659,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDEGR",
          "linecol": [
            659,
            1
          ]
        },
        "linecol": [
          659,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPTOTAIR - IRNET) * positif(NAPTOTAIR) * max(0 , V_ANTIR - max(0,IRNET)) * positif_ou_nul(IDEGR - SEUIL_8)",
          "linecol": [
            661,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRDEG",
          "linecol": [
            661,
            1
          ]
        },
        "linecol": [
          661,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPTOTAIR - TAXANET) * positif(NAPTOTAIR) * max(0 , V_TAXANT - max(0,TAXANET))",
          "linecol": [
            664,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXDEG",
          "linecol": [
            664,
            1
          ]
        },
        "linecol": [
          664,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(TAXDEG) * positif(V_TAXANT) * max(0 , V_TAXANT - max(0,TOTAXAGA)) * positif_ou_nul(IDEGR - SEUIL_8)",
          "linecol": [
            666,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXADEG",
          "linecol": [
            666,
            1
          ]
        },
        "linecol": [
          666,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPTOTAIR - PCAPNET) * positif(NAPTOTAIR) * max(0 , V_PCAPANT- max(0,PCAPNET))",
          "linecol": [
            669,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PCAPTAXDEG",
          "linecol": [
            669,
            1
          ]
        },
        "linecol": [
          669,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(PCAPTAXDEG) * positif (V_PCAPANT) * max(0 , V_PCAPANT - max(0,PCAPTOT)) * positif_ou_nul(IDEGR - SEUIL_8)",
          "linecol": [
            671,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PCAPDEG",
          "linecol": [
            671,
            1
          ]
        },
        "linecol": [
          671,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPTOTAIR - TAXLOYNET) * positif(NAPTOTAIR) * max(0 , V_TAXLOYANT- max(0,TAXLOYNET))",
          "linecol": [
            674,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXLOYERDEG",
          "linecol": [
            674,
            1
          ]
        },
        "linecol": [
          674,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(TAXLOYERDEG) * positif (V_TAXLOYANT) * max(0 , V_TAXLOYANT - max(0,TAXLOYTOT)) * positif_ou_nul(IDEGR - SEUIL_8)",
          "linecol": [
            676,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXLOYDEG",
          "linecol": [
            676,
            1
          ]
        },
        "linecol": [
          676,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPTOTAIR - HAUTREVNET) * positif(NAPTOTAIR) * max(0 , V_CHRANT - max(0,HAUTREVNET))",
          "linecol": [
            679,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HAUTREVTAXDEG",
          "linecol": [
            679,
            1
          ]
        },
        "linecol": [
          679,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(HAUTREVTAXDEG) * positif(V_CHRANT) * max(0 , V_CHRANT - max(0,HAUTREVTOT)) * positif_ou_nul(IDEGR - SEUIL_8)",
          "linecol": [
            681,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HAUTREVDEG",
          "linecol": [
            681,
            1
          ]
        },
        "linecol": [
          681,
          1
        ]
      }
    ],
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                658,
                15
              ]
            }
          ],
          "linecol": [
            658,
            15
          ]
        }
      ],
      "linecol": [
        658,
        1
      ]
    },
    "type": "regle_declaration",
    "qualifiers": [
      {
        "type": "symbol",
        "name": "corrective",
        "linecol": [
          657,
          7
        ]
      }
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                684,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                684,
                23
              ]
            }
          ],
          "linecol": [
            684,
            15
          ]
        }
      ],
      "linecol": [
        684,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "ABMAR + ABVIE",
          "linecol": [
            685,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ABSRE",
          "linecol": [
            685,
            1
          ]
        },
        "linecol": [
          685,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90504",
      "linecol": [
        683,
        7
      ]
    },
    "linecol": [
      683,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                687,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                687,
                23
              ]
            }
          ],
          "linecol": [
            687,
            15
          ]
        }
      ],
      "linecol": [
        687,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PTOTD * positif(APPLI_ILIAD + APPLI_COLBERT)",
          "linecol": [
            688,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RPEN",
          "linecol": [
            688,
            1
          ]
        },
        "linecol": [
          688,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90522",
      "linecol": [
        686,
        7
      ]
    },
    "linecol": [
      686,
      1
    ]
  },
  {
    "name": {
      "type": "symbol",
      "name": "905270",
      "linecol": [
        689,
        11
      ]
    },
    "linecol": [
      689,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_ANTISF * (1-positif(APPLI_OCEANS))",
          "linecol": [
            691,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ANTISFAFF",
          "linecol": [
            691,
            1
          ]
        },
        "linecol": [
          691,
          1
        ]
      }
    ],
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                690,
                15
              ]
            }
          ],
          "linecol": [
            690,
            15
          ]
        }
      ],
      "linecol": [
        690,
        1
      ]
    },
    "type": "regle_declaration",
    "qualifiers": [
      {
        "type": "symbol",
        "name": "isf",
        "linecol": [
          689,
          7
        ]
      }
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                694,
                16
              ]
            }
          ],
          "linecol": [
            694,
            16
          ]
        }
      ],
      "linecol": [
        694,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_ANTIR  * APPLI_ILIAD + IRNET_A * APPLI_OCEANS + 0",
          "linecol": [
            695,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ANTIRAFF",
          "linecol": [
            695,
            1
          ]
        },
        "linecol": [
          695,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_TAXANT * APPLI_ILIAD * (1- APPLI_OCEANS) + TAXANET_A * APPLI_OCEANS + 0",
          "linecol": [
            699,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXANTAFF",
          "linecol": [
            699,
            1
          ]
        },
        "linecol": [
          699,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_PCAPANT * APPLI_ILIAD * (1- APPLI_OCEANS) + PCAPNET_A * APPLI_OCEANS + 0",
          "linecol": [
            703,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PCAPANTAFF",
          "linecol": [
            703,
            1
          ]
        },
        "linecol": [
          703,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_TAXLOYANT * APPLI_ILIAD * (1- APPLI_OCEANS) + TAXLOYNET_A * APPLI_OCEANS + 0",
          "linecol": [
            706,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXLOYANTAFF",
          "linecol": [
            706,
            1
          ]
        },
        "linecol": [
          706,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_CHRANT * APPLI_ILIAD * (1- APPLI_OCEANS) + CHRNET_A * APPLI_OCEANS + 0",
          "linecol": [
            710,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HAUTREVANTAF",
          "linecol": [
            710,
            1
          ]
        },
        "linecol": [
          710,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90527",
      "linecol": [
        693,
        7
      ]
    },
    "linecol": [
      693,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                714,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                714,
                23
              ]
            }
          ],
          "linecol": [
            714,
            15
          ]
        }
      ],
      "linecol": [
        714,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IDOM11",
          "linecol": [
            715,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDRT",
          "linecol": [
            715,
            1
          ]
        },
        "linecol": [
          715,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90514",
      "linecol": [
        713,
        7
      ]
    },
    "linecol": [
      713,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                717,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                717,
                23
              ]
            }
          ],
          "linecol": [
            717,
            15
          ]
        }
      ],
      "linecol": [
        717,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRE - EPAV - CICA + min( IRB , IPSOUR + CRCFA ) + min( max(0,IAN - IRE) , (BCIGA * (1 - positif(RE168+TAX1649))))",
          "linecol": [
            718,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAVT",
          "linecol": [
            718,
            1
          ]
        },
        "linecol": [
          718,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IAVT + CICA",
          "linecol": [
            721,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAVT2",
          "linecol": [
            721,
            1
          ]
        },
        "linecol": [
          721,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90525",
      "linecol": [
        716,
        7
      ]
    },
    "linecol": [
      716,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                723,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                723,
                22
              ]
            }
          ],
          "linecol": [
            723,
            15
          ]
        }
      ],
      "linecol": [
        723,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(TX_MIN_MET - TMOY) * positif( (present(RMOND) + present(DMOND)) ) * V_CR2",
          "linecol": [
            724,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDTXMOY",
          "linecol": [
            724,
            1
          ]
        },
        "linecol": [
          724,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul( IMI - IPQ1 ) * positif(1 - INDTXMOY) * V_CR2",
          "linecol": [
            726,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDTXMIN",
          "linecol": [
            726,
            1
          ]
        },
        "linecol": [
          726,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907001",
      "linecol": [
        722,
        7
      ]
    },
    "linecol": [
      722,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                729,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                729,
                23
              ]
            }
          ],
          "linecol": [
            729,
            15
          ]
        }
      ],
      "linecol": [
        729,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IRESTIT)",
          "linecol": [
            730,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_REST",
          "linecol": [
            730,
            1
          ]
        },
        "linecol": [
          730,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907002",
      "linecol": [
        728,
        7
      ]
    },
    "linecol": [
      728,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                732,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                732,
                23
              ]
            }
          ],
          "linecol": [
            732,
            16
          ]
        }
      ],
      "linecol": [
        732,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(NAPT) * (null (IRNET))",
          "linecol": [
            733,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_NI",
          "linecol": [
            733,
            1
          ]
        },
        "linecol": [
          733,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907003",
      "linecol": [
        731,
        7
      ]
    },
    "linecol": [
      731,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                735,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                735,
                23
              ]
            }
          ],
          "linecol": [
            735,
            16
          ]
        }
      ],
      "linecol": [
        735,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPT)",
          "linecol": [
            736,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_IMP",
          "linecol": [
            736,
            1
          ]
        },
        "linecol": [
          736,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(NAPT) * null(NAT1BIS) * (positif (IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET ))",
          "linecol": [
            738,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDNMR",
          "linecol": [
            738,
            1
          ]
        },
        "linecol": [
          738,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif(positif_ou_nul(IAMD1 - SEUIL_61)+positif(present(NRINET)+present(IMPRET)+present(BRAS))) * 2) + ((1-positif(positif_ou_nul(IAMD1 - SEUIL_61)+positif(present(NRINET)+present(IMPRET)+present(BRAS))))*positif(IAMD1) * 1) + (null(IAMD1)* (1-positif(present(NRINET)+present(IMPRET)+present(BRAS))) * 3)",
          "linecol": [
            739,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND61IR",
          "linecol": [
            739,
            1
          ]
        },
        "linecol": [
          739,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif_ou_nul((TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF- CSPROVYN-CSPROVYG-CSPROVYH-CSPROVYP-COD8YT) - SEUIL_61) * 2) + ((1-positif_ou_nul((TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF- CSPROVYN-CSPROVYG-CSPROVYH-CSPROVYP-COD8YT) - SEUIL_61))*positif(TOTCR) * 1) + (null(TOTCR) * 3)",
          "linecol": [
            742,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND61PS",
          "linecol": [
            742,
            1
          ]
        },
        "linecol": [
          742,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9070030",
      "linecol": [
        734,
        7
      ]
    },
    "linecol": [
      734,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                746,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                746,
                23
              ]
            }
          ],
          "linecol": [
            746,
            16
          ]
        }
      ],
      "linecol": [
        746,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(1 - NATIMP) * 1 + positif(null(11 - NATIMP) + null(21 - NATIMP) + null(81 - NATIMP) + null(91 - NATIMP)) * 2 + null(0 - NATIMP) * 3",
          "linecol": [
            747,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDCEX",
          "linecol": [
            747,
            1
          ]
        },
        "linecol": [
          747,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "INDNMR * positif(RED)",
          "linecol": [
            751,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDNMRI",
          "linecol": [
            751,
            1
          ]
        },
        "linecol": [
          751,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IDOM11 - DEC11) * null(IAD11)",
          "linecol": [
            753,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDNIRI",
          "linecol": [
            753,
            1
          ]
        },
        "linecol": [
          753,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9070031",
      "linecol": [
        745,
        7
      ]
    },
    "linecol": [
      745,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                756,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                756,
                23
              ]
            }
          ],
          "linecol": [
            756,
            15
          ]
        }
      ],
      "linecol": [
        756,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(SEUIL_8 - IREST) * positif(IREST) * (1-positif(APPLI_OCEANS))",
          "linecol": [
            758,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_REST50",
          "linecol": [
            758,
            1
          ]
        },
        "linecol": [
          758,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPT*(-1)) * (positif(SEUIL_8 - abs(NAPT)) * 1 + (1-positif(SEUIL_8 - abs(NAPT))) * 2 )",
          "linecol": [
            759,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND08",
          "linecol": [
            759,
            1
          ]
        },
        "linecol": [
          759,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907004",
      "linecol": [
        755,
        7
      ]
    },
    "linecol": [
      755,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                763,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                763,
                22
              ]
            }
          ],
          "linecol": [
            763,
            15
          ]
        }
      ],
      "linecol": [
        763,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif( positif(BIHNOV) + positif(BIHNOC) + positif(BIHNOP) + positif(BICHREV) + positif(BICHREC) + positif(BICHREP) + positif(BNHREV) + positif(BNHREC) + positif(BNHREP) + positif(ANOCEP) + positif(ANOVEP) + positif(ANOPEP) + positif(BAFV) + positif(BAFC) + positif(BAFP) + positif(BAHREV) + positif(BAHREC) + positif(BAHREP) + positif(4BAHREV) + positif(4BAHREC) + positif(4BAHREP) + positif(REGPRIV) )",
          "linecol": [
            764,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDMAJREV",
          "linecol": [
            764,
            1
          ]
        },
        "linecol": [
          764,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9070041",
      "linecol": [
        762,
        7
      ]
    },
    "linecol": [
      762,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                789,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                789,
                23
              ]
            }
          ],
          "linecol": [
            789,
            15
          ]
        }
      ],
      "linecol": [
        789,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(IAMD1 + 1 - SEUIL_61)) * null(NAPT) * positif(IAMD1)",
          "linecol": [
            790,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDNMR1",
          "linecol": [
            790,
            1
          ]
        },
        "linecol": [
          790,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(INDNMR) * (1 - positif(INDNMR1))",
          "linecol": [
            793,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDNMR2",
          "linecol": [
            793,
            1
          ]
        },
        "linecol": [
          793,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif(SEUIL_12 - (NAPCR +IRNET+TAXANET+TAXLOYNET+PCAPNET+HAUTREVNET-IRESTITIR))* positif(NAPCR +IRNET+TAXANET+TAXLOYNET+PCAPNET+HAUTREVNET-IRESTITIR)* 1 ) + ((1 - positif(SEUIL_12 - (NAPCR +IRNET+TAXANET+TAXLOYNET+PCAPNET+HAUTREVNET-IRESTITIR))) * 2 ) + (null(NAPCR +IRNET+TAXANET+TAXLOYNET+PCAPNET+HAUTREVNET-IRESTITIR) * 3)",
          "linecol": [
            794,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND12",
          "linecol": [
            794,
            1
          ]
        },
        "linecol": [
          794,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907005",
      "linecol": [
        788,
        7
      ]
    },
    "linecol": [
      788,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                799,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                799,
                21
              ]
            }
          ],
          "linecol": [
            799,
            15
          ]
        }
      ],
      "linecol": [
        799,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul ( positif( ALLOV ) + positif( REMPLAV ) + positif( REMPLANBV ) + positif( BACDEV ) + positif( BACREV ) + positif( 4BACREV ) + positif( 4BAHREV ) + positif( BAFPVV ) + positif( BAFV ) + positif(BAHDEV) + positif( BAHREV ) + positif (BICDEV) + positif (BICDNV) + positif (BICHDEV) + positif( BICHREV ) + positif( BICNOV ) + positif( BICREV ) + positif (BIHDNV) + positif( BIHNOV ) + positif (BNCAADV) + positif( BNCAABV ) + positif (BNCDEV) + positif( BNCNPPVV ) + positif( BNCNPV ) + positif( BNCPROPVV ) + positif( BNCPROV ) + positif( BNCREV ) + positif(BNHDEV) + positif( BNHREV ) + positif( BPCOSAV ) + positif( CARPENBAV ) + positif( CARPEV ) + positif( CARTSNBAV ) + positif( CARTSV ) + positif( COTFV ) + positif( DETSV ) + positif( FRNV ) + positif( GLD1V ) + positif( GLDGRATV ) + positif( GLD2V ) + positif( GLD3V ) + positif( ANOCEP ) + positif( MIBNPPRESV ) + positif( MIBNPPVV ) + positif( MIBNPVENV ) + positif( MIBPRESV ) + positif( MIBPVV ) + positif( MIBVENV ) + positif( PALIV ) + positif( PENSALV ) + positif( PENSALNBV ) + positif( PEBFV ) + positif( PRBRV ) + positif( TSHALLOV ) + positif( DNOCEP ) + positif(BAFORESTV) + positif( LOCPROCGAV ) + positif( LOCPROV ) + positif( LOCNPCGAV ) + positif( LOCNPV ) + positif(LOCDEFNPCGAV) + positif (LOCDEFNPV) + positif( MIBMEUV ) + positif( MIBGITEV ) + positif( BICPMVCTV ) + positif( BNCPMVCTV ) + positif( LOCGITV ) + positif( PENINV ) + positif( CODRAZ ) + positif( CODDAJ ) + positif( CODEAJ ) )",
          "linecol": [
            802,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDV",
          "linecol": [
            802,
            1
          ]
        },
        "linecol": [
          802,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul ( positif( ALLOC ) + positif( REMPLAC ) + positif( REMPLANBC ) + positif( BACDEC) + positif( BACREC ) + positif( 4BACREC ) + positif( 4BAHREC ) + positif( BAFC ) + positif( ANOVEP ) + positif( DNOCEPC ) + positif( BAFPVC ) + positif(BAHDEC) + positif( BAHREC ) + positif( BICDEC) + positif( BICDNC) + positif( BICHDEC) + positif( BICHREC ) + positif( BICNOC ) + positif( BICREC ) + positif( BIHDNC) + positif( BIHNOC ) + positif( BNCAADC) + positif( BNCAABC ) + positif( BNCDEC) + positif( BNCNPC ) + positif( BNCNPPVC ) + positif( BNCPROC ) + positif( BNCPROPVC ) + positif( BNCREC ) + positif(BNHDEC) + positif( BNHREC ) + positif( BPCOSAC ) + positif( CARPEC ) + positif( CARPENBAC ) + positif( CARTSC ) + positif( CARTSNBAC ) + positif( COTFC ) + positif( DETSC ) + positif( FRNC ) + positif( GLD1C ) + positif( GLD2C ) + positif( GLD3C ) + positif( GLDGRATC ) + positif( MIBNPPRESC ) + positif( MIBNPPVC ) + positif( MIBNPVENC ) + positif( MIBPRESC ) + positif( MIBPVC ) + positif( MIBVENC ) + positif( PALIC ) + positif( PENSALC ) + positif( PENSALNBC ) + positif( PEBFC ) + positif( PRBRC ) + positif( TSHALLOC ) + positif(BAFORESTC) + positif( LOCPROCGAC ) + positif( LOCPROC ) + positif( LOCNPCGAC ) + positif( LOCNPC ) + positif(LOCDEFNPCGAC) + positif( LOCDEFNPC) + positif( MIBMEUC ) + positif( MIBGITEC ) + positif( BICPMVCTC ) + positif( BNCPMVCTC ) + positif( LOCGITC ) + positif( PENINC ) + positif( CODRBZ ) + positif( CODDBJ ) + positif( CODEBJ ) )",
          "linecol": [
            834,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDC",
          "linecol": [
            834,
            1
          ]
        },
        "linecol": [
          834,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul ( positif( ALLO1 ) + positif( ALLO2 ) + positif( ALLO3 ) + positif( ALLO4 ) + positif( CARTSP1 ) + positif( CARTSP2 ) + positif( CARTSP3 ) + positif( CARTSP4 ) + positif( CARTSNBAP1 ) + positif( CARTSNBAP2 ) + positif( CARTSNBAP3 ) + positif( CARTSNBAP4 ) + positif( REMPLAP1 ) + positif( REMPLAP2 ) + positif( REMPLAP3 ) + positif( REMPLAP4 ) + positif( REMPLANBP1 ) + positif( REMPLANBP2 ) + positif( REMPLANBP3 ) + positif( REMPLANBP4 ) + positif( BACDEP) + positif( BACREP ) + positif( 4BACREP ) + positif( 4BAHREP ) + positif( BAFP ) + positif( ANOPEP ) + positif( DNOCEPP ) + positif( BAFPVP ) + positif( BAHDEP) + positif( BAHREP ) + positif( BICDEP) + positif( BICDNP) + positif( BICHDEP) + positif( BICHREP ) + positif( BICNOP ) + positif( BICREP ) + positif( BIHDNP) + positif( BIHNOP ) + positif( BNCAADP) + positif( BNCAABP ) + positif( BNCDEP) + positif( BNCNPP ) + positif( BNCNPPVP ) + positif( BNCPROP ) + positif( BNCPROPVP ) + positif( BNCREP ) + positif( BNHDEP) + positif( BNHREP ) + positif( COTF1 ) + positif( COTF2 ) + positif( COTF3 ) + positif( COTF4 ) + positif( DETS1 ) + positif( DETS2 ) + positif( DETS3 ) + positif( DETS4 ) + positif( FRN1 ) + positif( FRN2 ) + positif( FRN3 ) + positif( FRN4 ) + positif( MIBNPPRESP ) + positif( MIBNPPVP ) + positif( MIBNPVENP ) + positif( MIBPRESP ) + positif( MIBPVP ) + positif( MIBVENP ) + positif( PALI1 ) + positif( PALI2 ) + positif( PALI3 ) + positif( PALI4 ) + positif( PENSALP1 ) + positif( PENSALP2 ) + positif( PENSALP3 ) + positif( PENSALP4 ) + positif( PENSALNBP1 ) + positif( PENSALNBP2 ) + positif( PENSALNBP3 ) + positif( PENSALNBP4 ) + positif( PEBF1 ) + positif( PEBF2 ) + positif( PEBF3 ) + positif( PEBF4 ) + positif( PRBR1 ) + positif( PRBR2 ) + positif( PRBR3 ) + positif( PRBR4 ) + positif( CARPEP1 ) + positif( CARPEP2 ) + positif( CARPEP3 ) + positif( CARPEP4 ) + positif( CARPENBAP1 ) + positif( CARPENBAP2 ) + positif( CARPENBAP3 ) + positif( CARPENBAP4 ) + positif( TSHALLO1 ) + positif( TSHALLO2 ) + positif( TSHALLO3 ) + positif( TSHALLO4 ) + positif( BAFORESTP ) + positif( LOCPROCGAP ) + positif( LOCPROP ) + positif( LOCNPCGAPAC ) + positif( LOCNPPAC ) + positif( LOCDEFNPCGAPAC) + positif( LOCDEFNPPAC) + positif( LOCDEFPROCGAP) + positif( LOCDEFPROP) + positif( MIBMEUP ) + positif( MIBGITEP )  + positif( BICPMVCTP ) + positif( BNCPMVCTP ) + positif( LOCGITP ) + positif( PENIN1 ) + positif( PENIN2 ) + positif( PENIN3 ) + positif( PENIN4 ) + positif( CODRCZ ) + positif( CODRDZ ) + positif( CODREZ ) + positif( CODRFZ ) )",
          "linecol": [
            866,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDP",
          "linecol": [
            866,
            1
          ]
        },
        "linecol": [
          866,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907006",
      "linecol": [
        798,
        7
      ]
    },
    "linecol": [
      798,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                912,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                912,
                23
              ]
            }
          ],
          "linecol": [
            912,
            15
          ]
        }
      ],
      "linecol": [
        912,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif ( positif( 4BACREC ) + positif( 4BACREP ) + positif( 4BACREV ) + positif( 4BAHREC ) + positif( 4BAHREP ) + positif( 4BAHREV ) + positif( ABDETPLUS ) + positif( ABDETMOINS ) + positif( ALLO1 ) + positif( ALLO2 ) + positif( ALLO3 ) + positif( ALLO4 ) + positif( ALLOC ) + positif( ALLOV ) + positif( ANOCEP ) + positif( ANOPEP ) + positif( ANOVEP ) + positif( AUTOBICPC ) + positif( AUTOBICPP ) + positif( AUTOBICPV ) + positif( AUTOBICVC ) + positif( AUTOBICVP ) + positif( AUTOBICVV ) + positif( AUTOBNCC ) + positif( AUTOBNCP ) + positif( AUTOBNCV ) + positif( BA1AC ) + positif( BA1AP ) + positif( BA1AV ) + positif( BACDEC) + positif( BACDEP) + positif( BACDEV) + positif( BACREC ) + positif( BACREP ) + positif( BACREV ) + positif( BAEXC ) + positif( BAEXP ) + positif( BAEXV ) + positif( BAF1AC ) + positif( BAF1AP ) + positif( BAF1AV ) + positif( BAFC ) + positif( BAFORESTC ) + positif( BAFORESTP ) + positif( BAFORESTV ) + positif( BAFP ) + positif( BAFPVC ) + positif( BAFPVP ) + positif( BAFPVV ) + positif( BAFV ) + positif(BAHDEC) + positif( BAHDEP) + positif( BAHDEV) + positif( BAHEXC ) + positif( BAHEXP ) + positif( BAHEXV ) + positif( BAHREC ) + positif( BAHREP ) + positif( BAHREV ) + positif( BAILOC98 ) + positif( BAPERPC ) + positif( BAPERPP ) + positif( BAPERPV ) + positif( BI1AC ) + positif( BI1AP ) + positif( BI1AV ) + positif( BI2AC ) + positif( BI2AP ) + positif( BI2AV ) + positif( BICDEC ) + positif( BICDEP ) + positif( BICDEV ) + positif( BICDNC ) + positif( BICDNP ) + positif( BICDNV ) + positif( BICEXC ) + positif( BICEXP ) + positif( BICEXV ) + positif( BICHDEC ) + positif( BICHDEP ) + positif( BICHDEV ) + positif( BICHREC ) + positif( BICHREP ) + positif( BICHREV ) + positif( BICNOC ) + positif( BICNOP ) + positif( BICNOV ) + positif( BICNPEXC ) + positif( BICNPEXP ) + positif( BICNPEXV ) + positif( BICNPHEXC ) + positif( BICNPHEXP ) + positif( BICNPHEXV ) + positif( BICREC ) + positif( BICREP ) + positif( BICREV ) + positif( BIHDNC) + positif( BIHDNP) + positif( BIHDNV) + positif( BIHEXC ) + positif( BIHEXP ) + positif( BIHEXV ) + positif( BIHNOC ) + positif( BIHNOP ) + positif( BIHNOV ) + positif( BIPERPC ) + positif( BIPERPP ) + positif( BIPERPV ) + positif( BN1AC ) + positif( BN1AP ) + positif( BN1AV ) + positif( BNCAABC ) + positif( BNCAABP ) + positif( BNCAABV ) + positif( BNCAADC) + positif( BNCAADP) + positif( BNCAADV) + positif( BNCCRC ) + positif( BNCCRFC ) + positif( BNCCRFP ) + positif( BNCCRFV ) + positif( BNCCRP ) + positif( BNCCRV ) + positif( BNCDEC) + positif( BNCDEP) + positif( BNCDEV) + positif( BNCEXC ) + positif( BNCEXP ) + positif( BNCEXV ) + positif( BNCNP1AC ) + positif( BNCNP1AP ) + positif( BNCNP1AV ) + positif( BNCNPC ) + positif( BNCNPDCT ) + positif( BNCNPDEC ) + positif( BNCNPDEP ) + positif( BNCNPDEV ) + positif( BNCNPP ) + positif( BNCNPPVC ) + positif( BNCNPPVP ) + positif( BNCNPPVV ) + positif( BNCNPREXAAC ) + positif( BNCNPREXAAP ) + positif( BNCNPREXAAV ) + positif( BNCNPREXC ) + positif( BNCNPREXP ) + positif( BNCNPREXV ) + positif( BNCNPV ) + positif( BNCPRO1AC ) + positif( BNCPRO1AP ) + positif( BNCPRO1AV ) + positif( BNCPROC ) + positif( BNCPMVCTV ) + positif( BNCPMVCTC ) + positif( BNCPMVCTP ) + positif( BNCPRODEC ) + positif( BNCPRODEP ) + positif( BNCPRODEV ) + positif( BNCPROEXC ) + positif( BNCPROEXP ) + positif( BNCPROEXV ) + positif( BNCPROP ) + positif( BNCPROPVC ) + positif( BNCPROPVP ) + positif( BNCPROPVV ) + positif( BNCPROV ) + positif( BNCREC ) + positif( BNCREP ) + positif( BNCREV ) + positif( BNHDEC) + positif( BNHDEP) + positif( BNHDEV) + positif( BNHEXC ) + positif( BNHEXP ) + positif( BNHEXV ) + positif( BNHREC ) + positif( BNHREP ) + positif( BNHREV ) + positif( BPCOPTV ) + positif( BPCOSAC ) + positif( BPCOSAV ) + positif( BPV18V ) + positif( BPV40V ) + positif( BPVRCM ) + positif( CARPEC ) + positif( CARPENBAC ) + positif( CARPENBAV ) + positif( CARPEV ) + positif( CARPEP1 ) + positif( CARPEP2 ) + positif( CARPEP3 ) + positif( CARPEP4 ) + positif( CARPENBAP1 ) + positif( CARPENBAP2 ) + positif( CARPENBAP3 ) + positif( CARPENBAP4 ) + positif( CARTSC ) + positif( CARTSNBAC ) + positif( CARTSNBAV ) + positif( CARTSV ) + positif( CARTSP1 ) + positif( CARTSP2 ) + positif( CARTSP3 ) + positif( CARTSP4 ) + positif( CARTSNBAP1 ) + positif( CARTSNBAP2 ) + positif( CARTSNBAP3 ) + positif( CARTSNBAP4 ) + positif( REMPLAV ) + positif( REMPLAC ) + positif( REMPLAP1 ) + positif( REMPLAP2 ) + positif( REMPLAP3 ) + positif( REMPLAP4 ) + positif( REMPLANBV ) + positif( REMPLANBC ) + positif( REMPLANBP1 ) + positif( REMPLANBP2 ) + positif( REMPLANBP3 ) + positif( REMPLANBP4 ) + positif( PENSALV ) + positif( PENSALC ) + positif( PENSALP1 ) + positif( PENSALP2 ) + positif( PENSALP3 ) + positif( PENSALP4 ) + positif( PENSALNBV ) + positif( PENSALNBC ) + positif( PENSALNBP1 ) + positif( PENSALNBP2 ) + positif( PENSALNBP3 ) + positif( PENSALNBP4 ) + positif( RENTAX ) + positif( RENTAX5 ) + positif( RENTAX6 ) + positif( RENTAX7 ) + positif( RENTAXNB ) + positif( RENTAXNB5 ) + positif( RENTAXNB6 ) + positif( RENTAXNB7 ) + positif( REVACT ) + positif( REVPEA ) + positif( PROVIE ) + positif( DISQUO ) + positif( RESTUC ) + positif( INTERE ) + positif( REVACTNB ) + positif( REVPEANB ) + positif( PROVIENB ) + positif( DISQUONB ) + positif( RESTUCNB ) + positif( INTERENB ) + positif( CESSASSC ) + positif( CESSASSV ) + positif( COTF1 ) + positif( COTF2 ) + positif( COTF3 ) + positif( COTF4 ) + positif( COTFC ) + positif( COTFV ) + positif( DABNCNP1 ) + positif( DABNCNP2 ) + positif( DABNCNP3 ) + positif( DABNCNP4 ) + positif( DABNCNP5 ) + positif( DABNCNP6 ) + positif( DAGRI1 ) + positif( DAGRI2 ) + positif( DAGRI3 ) + positif( DAGRI4 ) + positif( DAGRI5 ) + positif( DAGRI6 ) + positif( DEFBIC1 ) + positif( DEFBIC2 ) + positif( DEFBIC3 ) + positif( DEFBIC4 ) + positif( DEFBIC5 ) + positif( DEFBIC6 ) + positif( DETS1 ) + positif( DETS2 ) + positif( DETS3 ) + positif( DETS4 ) + positif( DETSC ) + positif( DETSV ) + positif( DIREPARGNE ) + positif( DNOCEP ) + positif( DNOCEPC ) + positif( DNOCEPP ) + positif( DPVRCM ) + positif( FEXC ) + positif( FEXP ) + positif( FEXV ) + positif( FRN1 ) + positif( FRN2 ) + positif( FRN3 ) + positif( FRN4 ) + positif( FRNC ) + positif( FRNV ) + positif( GAINABDET ) + positif( GLDGRATV ) + positif( GLDGRATC) + positif( GLD1C ) + positif( GLD1V ) + positif( GLD2C ) + positif( GLD2V ) + positif( GLD3C ) + positif( GLD3V ) + positif (LOCDEFNPC) + positif( LOCDEFNPCGAC) + positif( LOCDEFNPCGAPAC) + positif( LOCDEFNPCGAV) + positif( LOCDEFNPPAC) + positif( LOCDEFNPV) + positif( LOCDEFPROC) + positif( LOCDEFPROCGAC) + positif( LOCDEFPROCGAP) + positif( LOCDEFPROCGAV) + positif( LOCDEFPROP) + positif( LOCDEFPROV) + positif( LOCNPC ) + positif( LOCNPCGAC ) + positif( LOCNPCGAPAC ) + positif( LOCNPCGAV ) + positif( LOCNPPAC ) + positif( LOCNPV ) + positif( LOCPROC ) + positif( LOCPROCGAC ) + positif( LOCPROCGAP ) + positif( LOCPROCGAV ) + positif( LOCPROP ) + positif( LOCPROV ) + positif( LOYIMP ) + positif( MIB1AC ) + positif( MIB1AP ) + positif( MIB1AV ) + positif( BICPMVCTV )+ positif( BICPMVCTC )+ positif( BICPMVCTP ) + positif( MIBDEC ) + positif( MIBDEP ) + positif( MIBDEV ) + positif( MIBEXC ) + positif( MIBEXP ) + positif( MIBEXV ) + positif( MIBNP1AC ) + positif( MIBNP1AP ) + positif( MIBNP1AV ) + positif( MIBNPDCT ) + positif( MIBNPDEC ) + positif( MIBNPDEP ) + positif( MIBNPDEV ) + positif( MIBNPEXC ) + positif( MIBNPEXP ) + positif( MIBNPEXV ) + positif( MIBNPPRESC ) + positif( MIBNPPRESP ) + positif( MIBNPPRESV ) + positif( MIBNPPVC ) + positif( MIBNPPVP ) + positif( MIBNPPVV ) + positif( MIBNPVENC ) + positif( MIBNPVENP ) + positif( MIBNPVENV ) + positif( MIBPRESC ) + positif( MIBPRESP ) + positif( MIBPRESV ) + positif( MIBPVC ) + positif( MIBPVP ) + positif( MIBPVV ) + positif( MIBVENC ) + positif( MIBVENP ) + positif( MIBVENV ) + positif( PALI1 ) + positif( PALI2 ) + positif( PALI3 ) + positif( PALI4 ) + positif( PALIC ) + positif( PALIV ) + positif( PEA ) + positif( PEBF1 ) + positif( PEBF2 ) + positif( PEBF3 ) + positif( PEBF4 ) + positif( PEBFC ) + positif( PEBFV ) + positif( PPEACC ) + positif( PPEACP ) + positif( PPEACV ) + positif( PPENHC ) + positif( PPENHP1 ) + positif( PPENHP2 ) + positif( PPENHP3 ) + positif( PPENHP4 ) + positif( PPENHV ) + positif( PPENJC ) + positif( PPENJP ) + positif( PPENJV ) + positif( PPETPC ) + positif( PPETPP1 ) + positif( PPETPP2 ) + positif( PPETPP3 ) + positif( PPETPP4 ) + positif( PPETPV ) + positif( PPLIB ) + positif( PRBR1 ) + positif( PRBR2 ) + positif( PRBR3 ) + positif( PRBR4 ) + positif( PRBRC ) + positif( PRBRV ) + positif( PVINCE ) + positif( PVINPE ) + positif( PVINVE ) + positif( PVREP8 ) + positif( PVSOCC ) + positif( PVSOCV ) + positif( RCMABD ) + positif( RCMAV ) + positif( RCMAVFT ) + positif( RCMFR ) + positif( RCMHAB ) + positif( RCMHAD ) + positif( RCMLIB ) + positif( RCMRDS ) + positif( RCMSOC ) + positif( RCMTNC ) + positif( RCSC ) + positif( RCSP ) + positif( RCSV ) + positif( REGPRIV ) + positif(RFDANT) + positif( RFDHIS) + positif( RFDORD) + positif( RFMIC ) + positif( RFORDI ) + positif( RFROBOR ) + positif( RSAFOYER ) + positif( RSAPAC1 ) + positif( RSAPAC2 ) + positif( RVB1 ) + positif( RVB2 ) + positif( RVB3 ) + positif( RVB4 ) + positif( TSASSUC ) + positif( TSASSUV ) + positif( TSHALLO1 ) + positif( TSHALLO2 ) + positif( TSHALLO3 ) + positif( TSHALLO4 ) + positif( TSHALLOC ) + positif( TSHALLOV ) + positif( XETRANC ) + positif( XETRANV ) + positif( XHONOAAC ) + positif( XHONOAAP ) + positif( XHONOAAV ) + positif( XHONOC ) + positif( XHONOP ) + positif( XHONOV ) + positif( XSPENPC ) + positif( XSPENPP ) + positif( XSPENPV ) + positif( GSALV ) + positif( GSALC ) + positif( LNPRODEF1) + positif( LNPRODEF2) + positif( LNPRODEF3) + positif( LNPRODEF4) + positif( LNPRODEF5) + positif( LNPRODEF6) + positif( LNPRODEF7) + positif( LNPRODEF8) + positif( LNPRODEF9) + positif( LNPRODEF10) + positif( FONCI ) + positif( REAMOR ) + positif( FONCINB ) + positif( REAMORNB ) + positif( MIBMEUV ) + positif( MIBMEUC ) + positif( MIBMEUP ) + positif( MIBGITEV ) + positif( MIBGITEC ) + positif( MIBGITEP ) + positif( PCAPTAXV ) + positif( PCAPTAXC ) + positif( PVIMMO ) + positif( PVSURSI ) + positif( PVIMPOS ) + positif( BANOCGAV ) + positif( BANOCGAC ) + positif( BANOCGAP ) + positif( INVENTV ) + positif( INVENTC ) + positif( INVENTP ) + positif( LOCGITV ) + positif( LOCGITC ) + positif( LOCGITP ) + positif( LOCGITCV ) + positif( LOCGITCC ) + positif( LOCGITCP ) + positif( LOCGITHCV ) + positif( LOCGITHCC ) + positif( LOCGITHCP ) + positif( PVTAXSB ) + positif( BPV18C ) + positif( PVMOBNR ) + positif( BPV40C ) + positif( BPCOPTC ) + positif( BPVSJ ) + positif( BPVSK ) + positif( CVNSALAC ) + positif( CVNSALAV ) + positif( GAINPEA ) + positif( PVEXOSEC ) + positif( ABPVNOSURSIS ) + positif( PVREPORT ) + positif( LOYELEV ) + positif(SALEXTV) + positif(SALEXTC) + positif(SALEXT1) + positif(SALEXT2) + positif(SALEXT3) + positif(SALEXT4) + positif(CODDAJ) + positif(CODEAJ) + positif(CODDBJ) + positif(CODEBJ) + positif( COD1AD ) + positif( COD1BD ) + positif( COD1CD ) + positif( COD1DD ) + positif( COD1ED ) + positif( COD1FD ) + positif( COD1AE ) + positif( COD1BE ) + positif( COD1CE ) + positif( COD1DE ) + positif( COD1EE ) + positif( COD1FE ) + positif( PPEXTV ) + positif( PPEXTC ) + positif( PPEXT1 ) + positif( PPEXT2 ) + positif( PPEXT3 ) + positif( PPEXT4 ) + positif( COD1AH ) + positif( COD1BH ) + positif( COD1CH ) + positif( COD1DH ) + positif( COD1EH ) + positif( COD1FH ) + positif( COD2CK ) + positif( COD2FA ) + positif( COD3SG ) + positif( COD3SH ) + positif( COD3SL ) + positif( COD3SM ) + positif( COD3VE ) + positif(PVTITRESOC) + positif( PENIN1 ) + positif( PENIN2 ) + positif( PENIN3 ) + positif( PENIN4 ) + positif( PENINC ) + positif( PENINV ) + positif( CODNAZ ) + positif( CODNBZ ) + positif( CODNCZ ) + positif( CODNDZ ) + positif( CODNEZ ) + positif( CODNFZ ) + positif( CODRAZ ) + positif( CODRBZ ) + positif( CODRCZ ) + positif( CODRDZ ) + positif( CODREZ ) + positif( CODRFZ ) + positif( COD2LA ) + positif( COD2LB ) + positif( COD3UA ) + positif( COD3UL ) + positif( COD3UV ) + positif( COD3WM ) + positif( CODNVG ) + positif( CODRVG )  + present( ANNUL2042 ) + present( ASCAPA ) + present( AUTOVERSLIB ) + present( BRAS ) + present( BULLRET ) + present( CASEPRETUD ) + present( CELLIERHK ) + present( CELLIERHJ ) + present( CELLIERHL ) + present( CELLIERHM ) + present( CELLIERHN ) + present( CELLIERHO ) + present( CELLIERNA ) + present( CELLIERNB ) + present( CELLIERNC ) + present( CELLIERND ) + present( CELLIERNE ) + present( CELLIERNF ) + present( CELLIERNG ) + present( CELLIERNH ) + present( CELLIERNI ) + present( CELLIERNJ ) + present( CELLIERNK ) + present( CELLIERNL ) + present( CELLIERNM ) + present( CELLIERNN ) + present( CELLIERNO ) + present( CELLIERNP ) + present( CELLIERNQ ) + present( CELLIERNR ) + present( CELLIERNS ) + present( CELLIERNT ) + present( CELLIERJA ) + present( CELLIERJB ) + present( CELLIERJD ) + present( CELLIERJE ) + present( CELLIERJF ) + present( CELLIERJG ) + present( CELLIERJH ) + present( CELLIERJJ ) + present( CELLIERJK ) + present( CELLIERJL ) + present( CELLIERJM ) + present( CELLIERJN ) + present( CELLIERJO ) + present( CELLIERJP ) + present( CELLIERJQ ) + present( CELLIERJR ) + present( CELLIERFA ) + present( CELLIERFB ) + present( CELLIERFC ) + present( CELLIERFD ) + present( DUFLOGH ) + present( DUFLOGI ) + present( CELREPGJ ) + present( CELREPGK ) + present( CELREPGL ) + present( CELREPGP ) + present( CELREPGS ) + present( CELREPGT ) + present( CELREPGU ) + present( CELREPGV ) + present( CELREPGW ) + present( CELREPGX ) + present( CELREPHR ) + present( CELREPHS ) + present( CHENF1 ) + present( CELREPHT ) + present( CELREPHU ) + present( CELREPHV ) + present( CELREPHW ) + present( CELREPHX ) + present( CELREPHZ ) + present( CELREPHA ) + present( CELREPHB ) + present( CELREPHD ) + present( CELREPHE ) + present( CELREPHF ) + present( CELREPHG ) + present( CELREPHH ) + present( INVNPROF1 ) + present( VIEUMEUB ) + present( INVREPMEU ) + present( INVREPNPRO ) + present( INVNPROREP ) + present( INVREDMEU ) + present( REDREPNPRO ) + present( INVNPROF2  ) + present( RESIVIANT ) + present( CHENF2 ) + present( CHENF3 ) + present( CHENF4 ) + present( CHNFAC ) + present( CHRDED ) + present( CHRFAC ) + present( CIAQCUL ) + present( CIBOIBAIL ) + present( CIIMPPRO ) + present( CIIMPPRO2 ) + present( CIINVCORSE ) + present( CINE1 ) + present( CINE2 ) + present( CINRJBAIL ) + present( CIDEP15 ) + present( CO35 ) + present( RISKTEC ) + present( CINRJ ) + present( CRDSIM ) + present( CREAGRIBIO ) + present( CREAIDE ) + present( CREAPP ) + present( CREARTS ) + present( CRECHOBOI ) + present( CRECONGAGRI ) + present( CREDPVREP ) + present( CREFAM ) + present( CREFORMCHENT ) + present( CREINTERESSE ) + present( CREPROSP ) + present( CRERESTAU ) + present( CRIGA ) + present( CRENRJ ) + present( COD8YT ) + present( CDISPROV) + present( CSGIM ) + present (COD8YL) + present( DCSG ) + present( DCSGIM ) + present( DEFAA0 ) + present( DEFAA1 ) + present( DEFAA2 ) + present( DEFAA3 ) + present( DEFAA4 ) + present( DEFAA5 ) + present( DEPCHOBAS ) + present( DEPMOBIL ) + present( DMOND ) + present( ELURASC ) + present( ELURASV ) + present( ESFP ) + present( FCPI ) + present( FFIP ) + present( FIPCORSE ) + present( FORET ) + present( INAIDE ) + present( INTDIFAGRI ) + present( INVDIR2009 ) + present( INVDOMRET50 ) + present( INVDOMRET60 ) + present( INVLGDEB2009 ) + present( INVLOCHOTR ) + present( INVLOCXN ) + present( INVLOCXV ) + present( COD7UY ) + present( COD7UZ ) + present( INVLOG2008 ) + present( INVLOG2009 ) + present( INVLOGSOC ) + present( INVLGAUTRE ) + present( INVLGDEB2010 ) + present( INVSOC2010 ) + present( INVRETRO1 ) + present( INVRETRO2 ) + present( INVIMP ) + present( INVLGDEB ) + present( INVENDEB2009 ) + present( PATNAT1 ) + present( PATNAT2 ) + present( PATNAT3 ) + present( INVSOCNRET ) + present( INVENDI ) + present( CELRREDLA ) + present( CELRREDLB ) + present( CELRREDLC ) + present( CELRREDLD ) + present( CELRREDLE ) + present( CELRREDLF ) + present( CELRREDLM ) + present( CELRREDLS ) + present( CELRREDLZ ) + present( CELRREDMG ) + present( NRETROC50 ) + present( NRETROC40 ) + present( INVOMREP ) + present( RETROCOMMB ) + present( RETROCOMMC ) + present( RETROCOMLH ) + present( RETROCOMLI ) + present( INVOMSOCQU ) + present( INVOMQV ) + present( INVOMSOCKH ) + present( INVOMSOCKI ) + present( INVOMSOCQJ ) + present( INVOMSOCQS ) + present( INVOMSOCQW ) + present( INVOMSOCQX ) + present( INVOMENTRG ) + present( INVOMENTRI ) + present( INVOMENTRJ ) + present( INVOMENTRK ) + present( INVOMENTRL ) + present( INVOMENTRM ) + present( INVOMENTRO ) + present( INVOMENTRP ) + present( INVOMENTRQ ) + present( INVOMENTRR ) + present( INVOMENTRT ) + present( INVOMENTRU ) + present( INVOMENTRV ) + present( INVOMENTRW ) + present( INVOMENTRY ) + present( INVOMENTKT ) + present( INVOMENTKU ) + present( INVOMENTMN ) + present( INVOMENTNU ) + present( INVOMENTNV ) + present( INVOMENTNW ) + present( INVOMENTNY ) + present( INVOMRETPA ) + present( INVOMRETPB ) + present( INVOMRETPD ) + present( INVOMRETPE ) + present( INVOMRETPF ) + present( INVOMRETPH ) + present( INVOMRETPI ) + present( INVOMRETPJ ) + present( INVOMRETPL ) + present( INVOMRETPM ) + present( INVOMRETPN ) + present( INVOMRETPO ) + present( INVOMRETPP ) + present( INVOMRETPR ) + present( INVOMRETPS ) + present( INVOMRETPT ) + present( INVOMRETPU ) + present( INVOMRETPW ) + present( INVOMRETPX ) + present( INVOMRETPY ) + present( INVOMLOGOA ) + present( INVOMLOGOB ) + present( INVOMLOGOC ) + present( INVOMLOGOH ) + present( INVOMLOGOI ) + present( INVOMLOGOJ ) + present( INVOMLOGOK ) + present( INVOMLOGOL ) + present( INVOMLOGOM ) + present( INVOMLOGON ) + present( INVOMLOGOO ) + present( INVOMLOGOP ) + present( INVOMLOGOQ ) + present( INVOMLOGOR ) + present( INVOMLOGOS ) + present( INVOMLOGOT ) + present( INVOMLOGOU ) + present( INVOMLOGOV ) + present( INVOMLOGOW ) + present( CODHOD ) + present( CODHOE ) + present( CODHOF ) + present( CODHOG ) + present( CODHOX ) + present( CODHOY ) + present( CODHOZ ) + present( CODHRA ) + present( CODHRB ) + present( CODHRC ) + present( CODHRD ) + present( CODHSA ) + present( CODHSB ) + present( CODHSC ) + present( CODHSE ) + present( CODHSF ) + present( CODHSG ) + present( CODHSH ) + present( CODHSJ ) + present( CODHSK ) + present( CODHSL ) + present( CODHSM ) + present( CODHSO ) + present( CODHSP ) + present( CODHSQ ) + present( CODHSR ) + present( CODHST ) + present( CODHSU ) + present( CODHSV ) + present( CODHSW ) + present( CODHSY ) + present( CODHSZ ) + present( CODHTA ) + present( CODHTB ) + present( CODHTD ) + present( LOCMEUBIA ) + present( LOCMEUBIB ) + present( LOCMEUBIC ) + present( LOCMEUBID ) + present( LOCMEUBIE ) + present( LOCMEUBIF ) + present( LOCMEUBIG ) + present( LOCMEUBIH ) + present( LOCMEUBII ) + present( LOCMEUBIX ) + present( LOCMEUBIY ) + present( LOCMEUBIZ ) + present( LOCMEUBJC ) + present( LOCMEUBJI ) + present( LOCMEUBJS ) + present( LOCMEUBJT ) + present( LOCMEUBJU ) + present( LOCMEUBJV ) + present( LOCMEUBJW ) + present( LOCMEUBJX ) + present( LOCMEUBJY ) + present( IPBOCH ) + present( IPELUS ) + present( IPMOND ) + present( SALECS ) + present( SALECSG ) + present( CICORSENOW ) + present( PRESINTER ) + present( IPPNCS ) + present( IPPRICORSE ) + present( IPRECH ) + present( IPCHER ) + present( IPREP ) + present( IPREPCORSE ) + present( IPSOUR ) + present( IPSUIS ) + present( IPSUISC ) + present( IPSURSI ) + present( IPSURV ) + present( IPTEFN ) + present( IPTEFP ) + present( IPTXMO ) + present( IPVLOC ) + present( IRANT ) + present( LOCRESINEUV ) + present( REPMEUBLE ) + present( MEUBLENP ) + present( RESIVIEU ) + present( REDMEUBLE ) + present( NBACT ) + present( CONVCREA ) + present( CONVHAND ) + present( NCHENF1 ) + present( NCHENF2 ) + present( NCHENF3 ) + present( NCHENF4 ) + present( NRBASE ) + present( NRINET ) + present( IMPRET ) + present( BASRET ) + present( NUPROP ) + present( REPGROREP1 ) + present( REPGROREP2) + present( REPGROREP11 ) + present( REPGROREP12 ) + present( OPTPLAF15 ) + present( PAAP ) + present( PAAV ) + present( PERPC ) + present( PERPP ) + present( PERPV ) + present( PERP_COTC ) + present( PERP_COTP ) + present( PERP_COTV ) + present( PLAF_PERPC ) + present( PLAF_PERPP ) + present( PLAF_PERPV ) + present( PREHABT ) + present( PREHABTN1 ) + present( PREHABTN2 ) + present( PREHABTVT ) + present( PREHABT2 ) + present( PREHABTN ) + present( PREMAIDE ) + present( PRESCOMP2000 ) + present( PRESCOMPJUGE ) + present( PRETUD ) + present( PRETUDANT ) + present( PRODOM ) + present( PROGUY ) + present( PRSPROV ) + present( PTZDEVDUR ) + present( R1649 ) + present( PTZDEVDURN ) + present( PREREV ) + present( RACCOTC ) + present( RACCOTP ) + present( RACCOTV ) + present( RCCURE ) + present( RDCOM ) + present( RDDOUP ) + present( RDENL ) + present( RDENLQAR ) + present( RDENS ) + present( RDENSQAR ) + present( RDENU ) + present( RDENUQAR ) + present( RDEQPAHA ) + present( RDDOUP ) + present( RDFOREST ) + present( RDFORESTGES ) + present( RDFORESTRA ) + present( RDREP ) + present( COTFORET ) + present( REPFOR ) + present( REPSINFOR ) + present( REPSINFOR1 ) + present( REPSINFOR2 ) + present( REPSINFOR3 ) + present( REPFOR1 ) + present( REPFOR2 ) + present( REPFOR3 ) + present( RDGARD1 ) + present( RDGARD1QAR ) + present( RDGARD2 ) + present( RDGARD2QAR ) + present( RDGARD3 ) + present( RDGARD3QAR ) + present( RDGARD4 ) + present( RDGARD4QAR ) + present( RDTECH ) + present( RDMECENAT ) + present( RDPRESREPORT ) + present( RDREP ) + present( RDRESU ) + present( RDSNO ) + present( RDSYCJ ) + present( RDSYPP ) + present( RDSYVO ) + present( RE168 ) + present( TAX1649 ) + present( REGCI ) + present( REPDON03 ) + present( REPDON04 ) + present( REPDON05 ) + present( REPDON06 ) + present( REPDON07 ) + present( RINVLOCINV ) + present( RINVLOCREA ) + present( REPSNO1 ) + present( REPSNO2 ) + present( REPINVTOU ) + present( INVLOGREHA ) + present( INVLOGHOT ) + present( REPSNO3 ) + present( REPSNON ) + present( REPSOF ) + present( RESTIMOPPAU ) + present( RIMOPPAUANT ) + present( RIMOSAUVANT ) + present( RESTIMOSAUV ) + present( RIMOPPAURE ) + present( RIMOSAUVRF ) + present( COD7SY ) + present( COD7SX ) + present( COD7UH ) + present( COD7WD ) + present( REVMAR1 ) + present( REVMAR2 ) + present( REVMAR3 ) + present( PETIPRISE ) + present( RMOND ) + present( RSOCREPRISE ) + present( RVAIDE ) + present( RVAIDAS ) + present( RVCURE ) + present( SINISFORET ) + present( SUBSTITRENTE ) + present( FIPDOMCOM ) + present( ALLECS ) + present( INDECS ) + present( PENECS ) + present( DONETRAN ) + present( DONAUTRE ) + present( MATISOSI ) + present( MATISOSJ ) + present( VOLISO ) + present( PORENT ) + present( CHAUBOISN ) + present( POMPESP ) + present( POMPESQ ) + present( POMPESR ) + present( CHAUFSOL ) + present( ENERGIEST ) + present( DIAGPERF ) + present( RESCHAL ) + present( TRATOIVG ) + present( TRAMURWC ) + present( TRAVITWT ) + present( RFRN2 ) + present( RFRN3 ) + present( RFRH1 ) + present( RFRH2 ) + present( COD8TL ) + present( COD8UW ) + present( V_8ZT ) + present( CELREPYA ) + present( CELREPYB ) + present( CELREPYC ) + present( CELREPYD ) + present( CELREPYE ) + present( CELREPYF ) + present( CELREPYG ) + present( CELREPYH ) + present( CELREPYI ) + present( CELREPYJ ) + present( CELREPYK ) + present( CELREPYL ) + present( CELRREDLN ) + present( CELRREDLX ) + present( CELRREDLZ ) + present( CELRREDMH ) + present( COD7CR ) + present( COD7CY ) + present( COD7OA ) + present( COD7OB ) + present( COD7OC ) + present( COD7OD ) + present( COD7OE ) + present( COD7OU ) + present( COD7PA ) + present( COD7PB ) + present( COD7PC ) + present( COD7PD ) + present( COD7PE ) + present( COD7RG ) + present( COD7RH ) + present( COD7RI ) + present( COD7RJ ) + present( COD7RK ) + present( COD7RL ) + present( COD7RN ) + present( COD7RP ) + present( COD7RQ ) + present( COD7RR ) + present( COD7RS ) + present( COD7RT ) + present( COD7RV ) + present( COD7RW ) + present( COD7RX ) + present( COD7RZ ) + present( COD7SA ) + present( COD7SB ) + present( COD7SC ) + present( COD7TV ) + present( COD7TW ) + present( COD7UA ) + present( COD7UB ) + present( COD7UI ) + present( COD7VH ) + present( COD7WB ) + present( COD7WU ) + present( COD7WX ) + present( COD8XY ) + present( COD8YM ) + present( CSPROVYN ) + present( CSPROVYP ) + present( CODHAA ) + present( CODHAB ) + present( CODHAC ) + present( CODHAD ) + present( CODHAE ) + present( CODHAF ) + present( CODHAG ) + present( CODHAH ) + present( CODHAI ) + present( CODHAJ ) + present( CODHAK ) + present( CODHAL ) + present( CODHAM ) + present( CODHAN ) + present( CODHAO ) + present( CODHAP ) + present( CODHAQ ) + present( CODHAR ) + present( CODHAS ) + present( CODHAT ) + present( CODHAU ) + present( CODHAV ) + present( CODHAW ) + present( CODHAX ) + present( CODHAY ) + present( CODHBA ) + present( CODHBB ) + present( CODHBE ) + present( CODHBF ) + present( CODHBG ) + present( CODHUA ) + present( CODHUB ) + present( CODHUC ) + present( CODHUD ) + present( CODHUE ) + present( CODHUF ) + present( CODHUG ) + present( CODHXA ) + present( CODHXB ) + present( CODHXC ) + present( CODHXE ) + present( COD8SA ) + present( COD8SB ) + present( COD8XI ) + present( COD8XJ ) + present( DUFLOFI ) + present( DUFLOGH ) + present( DUFLOGI ) + present( PATNAT4 ) + present( PINELQA ) + present( PINELQB ) + present( PINELQC ) + present( PINELQD ) + present( REPGROREP13 ) + present( REPSINFOR4 ) + present( RFRN3 ) )",
          "linecol": [
            915,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDREV1A8IR",
          "linecol": [
            915,
            1
          ]
        },
        "linecol": [
          915,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(INDREV1A8IR)",
          "linecol": [
            1361,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDREV1A8",
          "linecol": [
            1361,
            1
          ]
        },
        "linecol": [
          1361,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(INDREV1A8)",
          "linecol": [
            1363,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_REV8FV",
          "linecol": [
            1363,
            1
          ]
        },
        "linecol": [
          1363,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif( IND_REV8FV + positif(REVFONC))",
          "linecol": [
            1365,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_REV",
          "linecol": [
            1365,
            1
          ]
        },
        "linecol": [
          1365,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907007",
      "linecol": [
        911,
        7
      ]
    },
    "linecol": [
      911,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1367,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1367,
                21
              ]
            }
          ],
          "linecol": [
            1367,
            15
          ]
        }
      ],
      "linecol": [
        1367,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif( somme(i=V,C,1,2,3,4: present(PRBi) + present(TSBNi) + present(FRNi)) + somme(i=V,C",
          "linecol": [
            1369,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_SPR",
          "linecol": [
            1369,
            1
          ]
        },
        "linecol": [
          1369,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1,2 : present(GLDji) ) + somme(i=2,3,4",
          "linecol": [
            1371,
            24
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "j",
          "linecol": [
            1371,
            22
          ]
        },
        "linecol": [
          1371,
          22
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V,C,1,2,3,4 : present(iTSNj) + present(iPRBj)) )",
          "linecol": [
            1372,
            26
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "j",
          "linecol": [
            1372,
            24
          ]
        },
        "linecol": [
          1372,
          24
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907008",
      "linecol": [
        1366,
        7
      ]
    },
    "linecol": [
      1366,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1376,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1376,
                22
              ]
            }
          ],
          "linecol": [
            1376,
            15
          ]
        }
      ],
      "linecol": [
        1376,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(PLA - PLAF_CDPART)",
          "linecol": [
            1377,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDPL",
          "linecol": [
            1377,
            1
          ]
        },
        "linecol": [
          1377,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907009",
      "linecol": [
        1375,
        7
      ]
    },
    "linecol": [
      1375,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1379,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1379,
                22
              ]
            }
          ],
          "linecol": [
            1379,
            15
          ]
        }
      ],
      "linecol": [
        1379,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(null(2 - V_REGCO) + null(4 - V_REGCO))) * (1 - positif(positif((VARIPTEFP * positif(ART1731BIS) + IPTEFP * (1 - ART1731BIS))) +positif((VARIPTEFN * positif(ART1731BIS) + IPTEFN * (1 - ART1731BIS))))) * positif( positif( AUTOBICVV ) + positif( AUTOBICPV ) + positif( AUTOBICVC ) + positif( AUTOBICPC ) + positif( AUTOBICVP ) + positif( AUTOBICPP ) + positif( AUTOBNCV ) + positif( AUTOBNCC ) + positif( AUTOBNCP ) + positif( XHONOAAV ) + positif( XHONOV ) + positif( XHONOAAC ) + positif( XHONOC ) + positif( XHONOAAP ) + positif( XHONOP ) + positif( SALEXTV ) + positif( COD1AD ) + positif( COD1AE ) + positif( COD1AH ) + positif( SALEXTC ) + positif( COD1BD ) + positif( COD1BE ) + positif( COD1BH ) + positif( SALEXT1 ) + positif( COD1CD ) + positif( COD1CE ) + positif( COD1CH ) + positif( SALEXT2 ) + positif( COD1DD ) + positif( COD1DE ) + positif( COD1DH ) + positif( SALEXT3 ) + positif( COD1ED ) + positif( COD1EE ) + positif( COD1EH ) + positif( SALEXT4 ) + positif( COD1FD ) + positif( COD1FE ) + positif( COD1FH ))",
          "linecol": [
            1380,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDTEFF",
          "linecol": [
            1380,
            1
          ]
        },
        "linecol": [
          1380,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907099",
      "linecol": [
        1378,
        7
      ]
    },
    "linecol": [
      1378,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1423,
                15
              ]
            }
          ],
          "linecol": [
            1423,
            15
          ]
        }
      ],
      "linecol": [
        1423,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1424,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXTO",
          "linecol": [
            1424,
            1
          ]
        },
        "linecol": [
          1424,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90714",
      "linecol": [
        1422,
        8
      ]
    },
    "linecol": [
      1422,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1426,
                15
              ]
            }
          ],
          "linecol": [
            1426,
            15
          ]
        }
      ],
      "linecol": [
        1426,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TONEQUO",
          "linecol": [
            1427,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "R_QUOTIENT",
          "linecol": [
            1427,
            1
          ]
        },
        "linecol": [
          1427,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907140",
      "linecol": [
        1425,
        8
      ]
    },
    "linecol": [
      1425,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1429,
                15
              ]
            }
          ],
          "linecol": [
            1429,
            15
          ]
        }
      ],
      "linecol": [
        1429,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1430,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJ",
          "linecol": [
            1430,
            1
          ]
        },
        "linecol": [
          1430,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1431,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJC",
          "linecol": [
            1431,
            1
          ]
        },
        "linecol": [
          1431,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1432,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJR",
          "linecol": [
            1432,
            1
          ]
        },
        "linecol": [
          1432,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1433,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJP",
          "linecol": [
            1433,
            1
          ]
        },
        "linecol": [
          1433,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1434,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCVN",
          "linecol": [
            1434,
            1
          ]
        },
        "linecol": [
          1434,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1435,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCDIS",
          "linecol": [
            1435,
            1
          ]
        },
        "linecol": [
          1435,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1436,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJREGV",
          "linecol": [
            1436,
            1
          ]
        },
        "linecol": [
          1436,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1437,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJGLOA",
          "linecol": [
            1437,
            1
          ]
        },
        "linecol": [
          1437,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1438,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE1",
          "linecol": [
            1438,
            1
          ]
        },
        "linecol": [
          1438,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1439,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE2",
          "linecol": [
            1439,
            1
          ]
        },
        "linecol": [
          1439,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1440,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE3",
          "linecol": [
            1440,
            1
          ]
        },
        "linecol": [
          1440,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1441,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE4",
          "linecol": [
            1441,
            1
          ]
        },
        "linecol": [
          1441,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1",
          "linecol": [
            1442,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE5",
          "linecol": [
            1442,
            1
          ]
        },
        "linecol": [
          1442,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TXINT",
          "linecol": [
            1443,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETX",
          "linecol": [
            1443,
            1
          ]
        },
        "linecol": [
          1443,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1444,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXC",
          "linecol": [
            1444,
            1
          ]
        },
        "linecol": [
          1444,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1445,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXC",
          "linecol": [
            1445,
            1
          ]
        },
        "linecol": [
          1445,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1446,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXR",
          "linecol": [
            1446,
            1
          ]
        },
        "linecol": [
          1446,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1447,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXR",
          "linecol": [
            1447,
            1
          ]
        },
        "linecol": [
          1447,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1448,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXP",
          "linecol": [
            1448,
            1
          ]
        },
        "linecol": [
          1448,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1449,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXP",
          "linecol": [
            1449,
            1
          ]
        },
        "linecol": [
          1449,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1450,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCVN",
          "linecol": [
            1450,
            1
          ]
        },
        "linecol": [
          1450,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1451,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXCVN",
          "linecol": [
            1451,
            1
          ]
        },
        "linecol": [
          1451,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1452,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXREGV",
          "linecol": [
            1452,
            1
          ]
        },
        "linecol": [
          1452,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1453,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXREGV",
          "linecol": [
            1453,
            1
          ]
        },
        "linecol": [
          1453,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1454,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXGLOA",
          "linecol": [
            1454,
            1
          ]
        },
        "linecol": [
          1454,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1455,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXGLOA",
          "linecol": [
            1455,
            1
          ]
        },
        "linecol": [
          1455,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1456,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCDIS",
          "linecol": [
            1456,
            1
          ]
        },
        "linecol": [
          1456,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1457,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXCDIS",
          "linecol": [
            1457,
            1
          ]
        },
        "linecol": [
          1457,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1458,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE1",
          "linecol": [
            1458,
            1
          ]
        },
        "linecol": [
          1458,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1459,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE1",
          "linecol": [
            1459,
            1
          ]
        },
        "linecol": [
          1459,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1460,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE2",
          "linecol": [
            1460,
            1
          ]
        },
        "linecol": [
          1460,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1461,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE2",
          "linecol": [
            1461,
            1
          ]
        },
        "linecol": [
          1461,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1462,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE3",
          "linecol": [
            1462,
            1
          ]
        },
        "linecol": [
          1462,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1463,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE3",
          "linecol": [
            1463,
            1
          ]
        },
        "linecol": [
          1463,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1464,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE4",
          "linecol": [
            1464,
            1
          ]
        },
        "linecol": [
          1464,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1465,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE4",
          "linecol": [
            1465,
            1
          ]
        },
        "linecol": [
          1465,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO",
          "linecol": [
            1466,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE5",
          "linecol": [
            1466,
            1
          ]
        },
        "linecol": [
          1466,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COPETO + TXINT",
          "linecol": [
            1467,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE5",
          "linecol": [
            1467,
            1
          ]
        },
        "linecol": [
          1467,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907141",
      "linecol": [
        1428,
        8
      ]
    },
    "linecol": [
      1428,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1470,
                15
              ]
            }
          ],
          "linecol": [
            1470,
            15
          ]
        }
      ],
      "linecol": [
        1470,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TXINR * (1-positif(TXINR_A)) + (-1) * positif(TXINR_A) * positif(TXINR) * positif(TXINR - TXINR_A) + TXINR * positif(TXINR_A) * null(TXINR - TXINR_A)",
          "linecol": [
            1472,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXTO",
          "linecol": [
            1472,
            1
          ]
        },
        "linecol": [
          1472,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9071421",
      "linecol": [
        1469,
        8
      ]
    },
    "linecol": [
      1469,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1475,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1475,
                23
              ]
            }
          ],
          "linecol": [
            1475,
            15
          ]
        }
      ],
      "linecol": [
        1475,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFI=03 ou V_CODPFI=30 ou V_CODPFI=55) alors (40) sinon ( si (V_CODPFI=04 ou V_CODPFI=05 ou V_CODPFI=32) alors (80) sinon ( si (V_CODPFI=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1477,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFI",
          "linecol": [
            1477,
            1
          ]
        },
        "linecol": [
          1477,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFITAXA=03 ou V_CODPFITAXA=30 ou V_CODPFITAXA=55) alors (40) sinon ( si (V_CODPFITAXA=04 ou V_CODPFITAXA=05) alors (80) sinon ( si (V_CODPFITAXA=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1488,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFITAXA",
          "linecol": [
            1488,
            1
          ]
        },
        "linecol": [
          1488,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFICAP=03 ou V_CODPFICAP=30 ou V_CODPFICAP=55) alors (40) sinon ( si (V_CODPFICAP=04 ou V_CODPFICAP=05) alors (80) sinon ( si (V_CODPFICAP=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1499,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFICAP",
          "linecol": [
            1499,
            1
          ]
        },
        "linecol": [
          1499,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFILOY=03 ou V_CODPFILOY=30 ou V_CODPFILOY=55) alors (40) sinon ( si (V_CODPFILOY=04 ou V_CODPFILOY=05) alors (80) sinon ( si (V_CODPFILOY=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1510,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFILOY",
          "linecol": [
            1510,
            1
          ]
        },
        "linecol": [
          1510,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFICHR=03 ou V_CODPFICHR=30 ou V_CODPFICHR=55) alors (40) sinon ( si (V_CODPFICHR=04 ou V_CODPFICHR=05 ou V_CODPFICHR=32) alors (80) sinon ( si (V_CODPFICHR=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1521,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFICHR",
          "linecol": [
            1521,
            1
          ]
        },
        "linecol": [
          1521,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFICRP=03 ou V_CODPFICRP=30 ou V_CODPFICRP=55) alors (40) sinon ( si (V_CODPFICRP=04 ou V_CODPFICRP=05 ou V_CODPFICRP=32) alors (80) sinon ( si (V_CODPFICRP=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1533,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFICRP",
          "linecol": [
            1533,
            1
          ]
        },
        "linecol": [
          1533,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFICVN=03 ou V_CODPFICVN=30 ou V_CODPFICVN=55) alors (40) sinon ( si (V_CODPFICVN=04 ou V_CODPFICVN=05) alors (80) sinon ( si (V_CODPFICVN=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1544,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFICVN",
          "linecol": [
            1544,
            1
          ]
        },
        "linecol": [
          1544,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFICDIS=03 ou V_CODPFICDIS=30 ou V_CODPFICDIS=55) alors (40) sinon ( si (V_CODPFICDIS=04 ou V_CODPFICDIS=05) alors (80) sinon ( si (V_CODPFICDIS=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1554,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFICDIS",
          "linecol": [
            1554,
            1
          ]
        },
        "linecol": [
          1554,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFIGLO=03 ou V_CODPFIGLO=30 ou V_CODPFIGLO=55) alors (40) sinon ( si (V_CODPFIGLO=04 ou V_CODPFIGLO=05) alors (80) sinon ( si (V_CODPFIGLO=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1565,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFIGLO",
          "linecol": [
            1565,
            1
          ]
        },
        "linecol": [
          1565,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFIRSE1=03 ou V_CODPFIRSE1=30 ou V_CODPFIRSE1=55) alors (40) sinon ( si (V_CODPFIRSE1=04 ou V_CODPFIRSE1=05) alors (80) sinon ( si (V_CODPFIRSE1=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1577,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFIRSE1",
          "linecol": [
            1577,
            1
          ]
        },
        "linecol": [
          1577,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFIRSE5=03 ou V_CODPFIRSE5=30 ou V_CODPFIRSE5=55) alors (40) sinon ( si (V_CODPFIRSE5=04 ou V_CODPFIRSE5=05) alors (80) sinon ( si (V_CODPFIRSE5=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1588,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFIRSE5",
          "linecol": [
            1588,
            1
          ]
        },
        "linecol": [
          1588,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFIRSE2=03 ou V_CODPFIRSE2=30 ou V_CODPFIRSE2=55) alors (40) sinon ( si (V_CODPFIRSE2=04 ou V_CODPFIRSE2=05) alors (80) sinon ( si (V_CODPFIRSE2=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1599,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFIRSE2",
          "linecol": [
            1599,
            1
          ]
        },
        "linecol": [
          1599,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFIRSE3=03 ou V_CODPFIRSE3=30 ou V_CODPFIRSE3=55) alors (40) sinon ( si (V_CODPFIRSE3=04 ou V_CODPFIRSE3=05) alors (80) sinon ( si (V_CODPFIRSE3=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1610,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFIRSE3",
          "linecol": [
            1610,
            1
          ]
        },
        "linecol": [
          1610,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFIRSE4=03 ou V_CODPFIRSE4=30 ou V_CODPFIRSE4=55) alors (40) sinon ( si (V_CODPFIRSE4=04 ou V_CODPFIRSE4=05) alors (80) sinon ( si (V_CODPFIRSE4=06) alors (100) finsi) finsi) finsi",
          "linecol": [
            1621,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFIRSE4",
          "linecol": [
            1621,
            1
          ]
        },
        "linecol": [
          1621,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728=07 ou V_CODPF1728=10 ou V_CODPF1728=17 ou V_CODPF1728=18) alors (10) sinon ( si (V_CODPF1728=08 ou V_CODPF1728=11) alors (40) sinon ( si (V_CODPF1728=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1632,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728",
          "linecol": [
            1632,
            1
          ]
        },
        "linecol": [
          1632,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728CAP=07 ou V_CODPF1728CAP=10 ou V_CODPF1728CAP=17 ou V_CODPF1728CAP=18) alors (10) sinon ( si (V_CODPF1728CAP=08 ou V_CODPF1728CAP=11) alors (40) sinon ( si (V_CODPF1728CAP=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1644,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728CAP",
          "linecol": [
            1644,
            1
          ]
        },
        "linecol": [
          1644,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728LOY=07 ou V_CODPF1728LOY=10 ou V_CODPF1728LOY=17 ou V_CODPF1728LOY=18) alors (10) sinon ( si (V_CODPF1728LOY=08 ou V_CODPF1728LOY=11) alors (40) sinon ( si (V_CODPF1728LOY=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1656,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728LOY",
          "linecol": [
            1656,
            1
          ]
        },
        "linecol": [
          1656,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728CHR=07 ou V_CODPF1728CHR=10 ou V_CODPF1728CHR=17 ou V_CODPF1728CHR=18) alors (10) sinon ( si (V_CODPF1728CHR=08 ou V_CODPF1728CHR=11) alors (40) sinon ( si (V_CODPF1728CRP=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1668,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728CHR",
          "linecol": [
            1668,
            1
          ]
        },
        "linecol": [
          1668,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728CRP=07 ou V_CODPF1728CRP=10 ou V_CODPF1728CRP=17 ou V_CODPF1728CRP=18) alors (10) sinon ( si (V_CODPF1728CRP=08 ou V_CODPF1728CRP=11) alors (40) sinon ( si (V_CODPF1728CRP=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1681,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728CRP",
          "linecol": [
            1681,
            1
          ]
        },
        "linecol": [
          1681,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728CVN=07 ou V_CODPF1728CVN=10 ou V_CODPF1728CVN=17 ou V_CODPF1728CVN=18) alors (10) sinon ( si (V_CODPF1728CVN=08 ou V_CODPF1728CVN=11) alors (40) sinon ( si (V_CODPF1728CVN=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1693,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728CVN",
          "linecol": [
            1693,
            1
          ]
        },
        "linecol": [
          1693,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728CDIS=07 ou V_CODPF1728CDIS=10 ou V_CODPF1728CDIS=17 ou V_CODPF1728CDIS=18) alors (10) sinon ( si (V_CODPF1728CDIS=08 ou V_CODPF1728CDIS=11) alors (40) sinon ( si (V_CODPF1728CDIS=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1705,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728CDIS",
          "linecol": [
            1705,
            1
          ]
        },
        "linecol": [
          1705,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728GLO=07 ou V_CODPF1728GLO=10 ou V_CODPF1728GLO=17 ou V_CODPF1728GLO=18) alors (10) sinon ( si (V_CODPF1728GLO=08 ou V_CODPF1728GLO=11) alors (40) sinon ( si (V_CODPF1728GLO=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1716,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728GLO",
          "linecol": [
            1716,
            1
          ]
        },
        "linecol": [
          1716,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728RSE1=07 ou V_CODPF1728RSE1=10 ou V_CODPF1728RSE1=17 ou V_CODPF1728RSE1=18) alors (10) sinon ( si (V_CODPF1728RSE1=08 ou V_CODPF1728RSE1=11) alors (40) sinon ( si (V_CODPF1728RSE1=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1727,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728RSE1",
          "linecol": [
            1727,
            1
          ]
        },
        "linecol": [
          1727,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728RSE5=07 ou V_CODPF1728RSE5=10 ou V_CODPF1728RSE5=17 ou V_CODPF1728RSE5=18) alors (10) sinon ( si (V_CODPF1728RSE5=08 ou V_CODPF1728RSE5=11) alors (40) sinon ( si (V_CODPF1728RSE5=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1739,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728RSE5",
          "linecol": [
            1739,
            1
          ]
        },
        "linecol": [
          1739,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728RSE2=07 ou V_CODPF1728RSE2=10 ou V_CODPF1728RSE2=17 ou V_CODPF1728RSE2=18) alors (10) sinon ( si (V_CODPF1728RSE2=08 ou V_CODPF1728RSE2=11) alors (40) sinon ( si (V_CODPF1728RSE2=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1751,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728RSE2",
          "linecol": [
            1751,
            1
          ]
        },
        "linecol": [
          1751,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728RSE3=07 ou V_CODPF1728RSE3=10 ou V_CODPF1728RSE3=17 ou V_CODPF1728RSE3=18) alors (10) sinon ( si (V_CODPF1728RSE3=08 ou V_CODPF1728RSE3=11) alors (40) sinon ( si (V_CODPF1728RSE3=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1763,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728RSE3",
          "linecol": [
            1763,
            1
          ]
        },
        "linecol": [
          1763,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPF1728RSE4=07 ou V_CODPF1728RSE4=10 ou V_CODPF1728RSE4=17 ou V_CODPF1728RSE4=18) alors (10) sinon ( si (V_CODPF1728RSE4=08 ou V_CODPF1728RSE4=11) alors (40) sinon ( si (V_CODPF1728RSE4=31) alors (80) finsi) finsi) finsi",
          "linecol": [
            1775,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPF1728RSE4",
          "linecol": [
            1775,
            1
          ]
        },
        "linecol": [
          1775,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907142",
      "linecol": [
        1474,
        8
      ]
    },
    "linecol": [
      1474,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1788,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1788,
                23
              ]
            }
          ],
          "linecol": [
            1788,
            15
          ]
        }
      ],
      "linecol": [
        1788,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728)) * ((1 - positif(CMAJ)) * positif(NMAJ1 + NMAJTAXA1 + NMAJPCAP1 + NMAJLOY1 +NMAJCHR1) * TXPF1728 + positif(CMAJ) * COPETO) + positif(V_NBCOD1728) * (-1)",
          "linecol": [
            1790,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTX1",
          "linecol": [
            1790,
            1
          ]
        },
        "linecol": [
          1790,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728CAP)) * ((1 - positif(CMAJ)) * positif(NMAJPCAP1) * TXPF1728CAP + positif(CMAJ) * COPETO) + positif(V_NBCOD1728CAP) * (-1)",
          "linecol": [
            1795,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXPCAP1",
          "linecol": [
            1795,
            1
          ]
        },
        "linecol": [
          1795,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728LOY)) * ((1 - positif(CMAJ)) * positif(NMAJLOY1) * TXPF1728LOY + positif(CMAJ) * COPETO) + positif(V_NBCOD1728LOY) * (-1)",
          "linecol": [
            1799,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXLOY1",
          "linecol": [
            1799,
            1
          ]
        },
        "linecol": [
          1799,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728CHR)) * ((1 - positif(CMAJ)) * positif(NMAJCHR1) * TXPF1728 + positif(CMAJ) * COPETO) + positif(V_NBCOD1728CHR) * (-1)",
          "linecol": [
            1804,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCHR1",
          "linecol": [
            1804,
            1
          ]
        },
        "linecol": [
          1804,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728CRP)) * ((1 - positif(CMAJ)) * positif( NMAJC1 + NMAJR1 + NMAJP1) * TXPF1728CRP + positif(CMAJ) * COPETO) + positif(V_NBCOD1728CRP) * (-1)",
          "linecol": [
            1810,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXC1",
          "linecol": [
            1810,
            1
          ]
        },
        "linecol": [
          1810,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJTXC1",
          "linecol": [
            1815,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXR1",
          "linecol": [
            1815,
            1
          ]
        },
        "linecol": [
          1815,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJTXC1",
          "linecol": [
            1817,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXP1",
          "linecol": [
            1817,
            1
          ]
        },
        "linecol": [
          1817,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728CVN)) * ((1 - positif(CMAJ)) * positif(NMAJCVN1) * TXPF1728CVN + positif(CMAJ) * COPETO) + positif(V_NBCOD1728CVN) * (-1)",
          "linecol": [
            1819,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCVN1",
          "linecol": [
            1819,
            1
          ]
        },
        "linecol": [
          1819,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728REGV)) * ((1 - positif(CMAJ)) * positif(NMAJREGV1) * TXPF1728REGV + positif(CMAJ) * COPETO) + positif(V_NBCOD1728REGV) * (-1)",
          "linecol": [
            1823,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXREGV1",
          "linecol": [
            1823,
            1
          ]
        },
        "linecol": [
          1823,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728CDIS)) * ((1 - positif(CMAJ)) * positif(NMAJCDIS1) * TXPF1728CDIS + positif(CMAJ) * COPETO) + positif(V_NBCOD1728CDIS) * (-1)",
          "linecol": [
            1828,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCDIS1",
          "linecol": [
            1828,
            1
          ]
        },
        "linecol": [
          1828,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728GLO)) * ((1 - positif(CMAJ)) * positif(NMAJGLO1) * TXPF1728GLO + positif(CMAJ) * COPETO) + positif(V_NBCOD1728GLO) * (-1)",
          "linecol": [
            1832,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXGLO1",
          "linecol": [
            1832,
            1
          ]
        },
        "linecol": [
          1832,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728RSE1)) * ((1 - positif(CMAJ)) * positif(NMAJRSE11) * TXPF1728RSE1 + positif(CMAJ) * COPETO) + positif(V_NBCOD1728RSE1) * (-1)",
          "linecol": [
            1836,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE11",
          "linecol": [
            1836,
            1
          ]
        },
        "linecol": [
          1836,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728RSE5)) * ((1 - positif(CMAJ)) * positif(NMAJRSE51) * TXPF1728RSE5 + positif(CMAJ) * COPETO) + positif(V_NBCOD1728RSE5) * (-1)",
          "linecol": [
            1840,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE51",
          "linecol": [
            1840,
            1
          ]
        },
        "linecol": [
          1840,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728RSE2)) * ((1 - positif(CMAJ)) * positif(NMAJRSE21) * TXPF1728RSE2 + positif(CMAJ) * COPETO) + positif(V_NBCOD1728RSE2) * (-1)",
          "linecol": [
            1844,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE21",
          "linecol": [
            1844,
            1
          ]
        },
        "linecol": [
          1844,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728RSE3)) * ((1 - positif(CMAJ)) * positif(NMAJRSE31) * TXPF1728RSE3 + positif(CMAJ) * COPETO) + positif(V_NBCOD1728RSE3) * (-1)",
          "linecol": [
            1848,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE31",
          "linecol": [
            1848,
            1
          ]
        },
        "linecol": [
          1848,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCOD1728RSE4)) * ((1 - positif(CMAJ)) * positif(NMAJRSE41) * TXPF1728RSE4 + positif(CMAJ) * COPETO) + positif(V_NBCOD1728RSE4) * (-1)",
          "linecol": [
            1852,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE41",
          "linecol": [
            1852,
            1
          ]
        },
        "linecol": [
          1852,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NMAJ3) * 10",
          "linecol": [
            1858,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTX3",
          "linecol": [
            1858,
            1
          ]
        },
        "linecol": [
          1858,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NMAJTAXA3) * 10",
          "linecol": [
            1860,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXTAXA3",
          "linecol": [
            1860,
            1
          ]
        },
        "linecol": [
          1860,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NMAJPCAP3) * 10",
          "linecol": [
            1862,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXPCAP3",
          "linecol": [
            1862,
            1
          ]
        },
        "linecol": [
          1862,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NMAJLOY3) * 10",
          "linecol": [
            1864,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXLOY3",
          "linecol": [
            1864,
            1
          ]
        },
        "linecol": [
          1864,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NMAJCHR3) * 10",
          "linecol": [
            1866,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCHR3",
          "linecol": [
            1866,
            1
          ]
        },
        "linecol": [
          1866,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCODI)) * ((1 - positif(CMAJ)) * positif(NMAJ4) * TXPFI + positif(CMAJ) * COPETO) + positif(V_NBCODI) * (-1)",
          "linecol": [
            1870,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTX4",
          "linecol": [
            1870,
            1
          ]
        },
        "linecol": [
          1870,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCODITAXA)) * ((1 - positif(CMAJ)) * positif(NMAJTAXA4) * TXPFITAXA + positif(CMAJ) * COPETO) + positif(V_NBCODITAXA) * (-1)",
          "linecol": [
            1874,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXTAXA4",
          "linecol": [
            1874,
            1
          ]
        },
        "linecol": [
          1874,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCODICAP)) * ((1 - positif(CMAJ)) * positif(NMAJPCAP4) * TXPFICAP + positif(CMAJ) * COPETO) + positif(V_NBCODICAP) * (-1)",
          "linecol": [
            1878,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXPCAP4",
          "linecol": [
            1878,
            1
          ]
        },
        "linecol": [
          1878,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(positif(positif(MAJOLOY03)+positif(MAJOLOY55))* positif(positif(MAJOLOY04)+positif(MAJOLOY05)) + positif(positif(MAJOLOY03)+positif(MAJOLOY55))*positif(MAJOLOY06) + positif(positif(MAJOLOY04)+positif(MAJOLOY05))* positif(MAJOLOY06)) * -1 + positif(positif(MAJOLOY03)+positif(MAJOLOY55))* (1-positif(positif(MAJOLOY04)+ positif(MAJOLOY05)+ positif(MAJOLOY06))) * 40 + positif(positif(MAJOLOY04)+positif(MAJOLOY05))* (1-positif(positif(MAJOLOY03)+ positif(MAJOLOY55)+positif(MAJOLOY06))) * 80 + positif(MAJOLOY06)*(1-positif(positif(MAJOLOY03)+positif(MAJOLOY04)+ positif(MAJOLOY05)+ positif(MAJOLOY55))) * 100",
          "linecol": [
            1883,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXLOY4",
          "linecol": [
            1883,
            1
          ]
        },
        "linecol": [
          1883,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(positif(positif(MAJOHR03)+positif(MAJOHR30)+positif(MAJOHR55))* positif(positif(MAJOHR04)+positif(MAJOHR05)+positif(MAJOHR32)) + positif(positif(MAJOHR03)+positif(MAJOHR30)+positif(MAJOHR55))*positif(MAJOHR06) + positif(positif(MAJOHR04)+positif(MAJOHR05)+positif(MAJOHR32))* positif(MAJOHR06)) * -1 + positif(positif(MAJOHR03)+positif(MAJOHR30)+positif(MAJOHR55))* (1-positif(positif(MAJOHR04)+ positif(MAJOHR05)+ positif(MAJOHR06)+positif(MAJOHR32))) * 40 + positif(positif(MAJOHR04)+positif(MAJOHR05)+positif(MAJOHR32))* (1-positif(positif(MAJOHR03)+ positif(MAJOHR30)+ positif(MAJOHR55)+positif(MAJOHR06))) * 80 + positif(MAJOHR06)*(1-positif(positif(MAJOHR03)+positif(MAJOHR04)+ positif(MAJOHR05)+ positif(MAJOHR30)+positif(MAJOHR32)+positif(MAJOHR55))) * 100",
          "linecol": [
            1890,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCHR4",
          "linecol": [
            1890,
            1
          ]
        },
        "linecol": [
          1890,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCODICRP)) * ((1 - positif(CMAJ)) * positif(NMAJC4+NMAJR4+NMAJP4) * TXPFICRP + positif(CMAJ) * COPETO) + positif(V_NBCODICRP) * (-1)",
          "linecol": [
            1896,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXC4",
          "linecol": [
            1896,
            1
          ]
        },
        "linecol": [
          1896,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJTXC4",
          "linecol": [
            1900,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXR4",
          "linecol": [
            1900,
            1
          ]
        },
        "linecol": [
          1900,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MAJTXC4",
          "linecol": [
            1902,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXP4",
          "linecol": [
            1902,
            1
          ]
        },
        "linecol": [
          1902,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(positif(positif(MAJOCVN03)+positif(MAJOCVN55))* positif(positif(MAJOCVN04)+positif(MAJOCVN05)) + positif(positif(MAJOCVN03)+positif(MAJOCVN55))*positif(MAJOCVN06) + positif(positif(MAJOCVN04)+positif(MAJOCVN05))* positif(MAJOCVN06)) * -1 + positif(positif(MAJOCVN03)+positif(MAJOCVN55))* (1-positif(positif(MAJOCVN04)+ positif(MAJOCVN05)+ positif(MAJOCVN06))) * 40 + positif(positif(MAJOCVN04)+positif(MAJOCVN05))* (1-positif(positif(MAJOCVN03) + positif(MAJOCVN55)+positif(MAJOCVN06))) * 80 + positif(MAJOCVN06)*(1-positif(positif(MAJOCVN03)+positif(MAJOCVN04)+ positif(MAJOCVN05)+positif(MAJOCVN55))) * 100",
          "linecol": [
            1905,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCVN4",
          "linecol": [
            1905,
            1
          ]
        },
        "linecol": [
          1905,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCODICDIS)) * ((1 - positif(CMAJ)) * positif(NMAJCDIS4) * TXPFICDIS + positif(CMAJ) * COPETO) + positif(V_NBCODICDIS) * (-1)",
          "linecol": [
            1913,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCDIS4",
          "linecol": [
            1913,
            1
          ]
        },
        "linecol": [
          1913,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(positif(positif(MAJOGLO03)+positif(MAJOGLO55))* positif(positif(MAJOGLO04)+positif(MAJOGLO05)) + positif(positif(MAJOGLO03)+positif(MAJOGLO55))*positif(MAJOGLO06) + positif(positif(MAJOGLO04)+positif(MAJOGLO05))* positif(MAJOGLO06)) * -1 + positif(positif(MAJOGLO03)+positif(MAJOGLO55))* (1-positif(positif(MAJOGLO04)+ positif(MAJOGLO05)+ positif(MAJOGLO06))) * 40 + positif(positif(MAJOGLO04)+positif(MAJOGLO05))* (1-positif(positif(MAJOGLO03)+ positif(MAJOGLO55)+positif(MAJOGLO06))) * 80 + positif(MAJOGLO06)*(1-positif(positif(MAJOGLO03)+positif(MAJOGLO04)+ positif(MAJOGLO05)+positif(MAJOGLO55))) * 100",
          "linecol": [
            1918,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXGLO4",
          "linecol": [
            1918,
            1
          ]
        },
        "linecol": [
          1918,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCODIRSE1)) * ((1 - positif(CMAJ)) * positif(NMAJRSE14) * TXPFIRSE1 + positif(CMAJ) * COPETO) + positif(V_NBCODIRSE1) * (-1)",
          "linecol": [
            1925,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE14",
          "linecol": [
            1925,
            1
          ]
        },
        "linecol": [
          1925,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(positif(positif(MAJORSE503)+positif(MAJORSE555))* positif(positif(MAJORSE504)+positif(MAJORSE505)) + positif(positif(MAJORSE503)+positif(MAJORSE555))*positif(MAJORSE506) + positif(positif(MAJORSE504)+positif(MAJORSE505))* positif(MAJORSE506)) * -1 + positif(positif(MAJORSE503)+positif(MAJORSE555))* (1-positif(positif(MAJORSE504)+ positif(MAJORSE505)+ positif(MAJORSE506))) * 40 + positif(positif(MAJORSE504)+positif(MAJORSE505))* (1-positif(positif(MAJORSE503)+ positif(MAJORSE555)+positif(MAJORSE506))) * 80 + positif(MAJORSE506)*(1-positif(positif(MAJORSE503)+positif(MAJORSE504)+ positif(MAJORSE505)+positif(MAJORSE555))) * 100",
          "linecol": [
            1930,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE54",
          "linecol": [
            1930,
            1
          ]
        },
        "linecol": [
          1930,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCODIRSE2)) * ((1 - positif(CMAJ)) * positif(NMAJRSE24) * TXPFIRSE2 + positif(CMAJ) * COPETO) + positif(V_NBCODIRSE2) * (-1)",
          "linecol": [
            1936,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE24",
          "linecol": [
            1936,
            1
          ]
        },
        "linecol": [
          1936,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCODIRSE3)) * ((1 - positif(CMAJ)) * positif(NMAJRSE34) * TXPFIRSE3 + positif(CMAJ) * COPETO) + positif(V_NBCODIRSE3) * (-1)",
          "linecol": [
            1940,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE34",
          "linecol": [
            1940,
            1
          ]
        },
        "linecol": [
          1940,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_NBCODIRSE4)) * ((1 - positif(CMAJ)) * positif(NMAJRSE44) * TXPFIRSE4 + positif(CMAJ) * COPETO) + positif(V_NBCODIRSE4) * (-1)",
          "linecol": [
            1944,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE44",
          "linecol": [
            1944,
            1
          ]
        },
        "linecol": [
          1944,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9071420",
      "linecol": [
        1787,
        8
      ]
    },
    "linecol": [
      1787,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1949,
                15
              ]
            }
          ],
          "linecol": [
            1949,
            15
          ]
        }
      ],
      "linecol": [
        1949,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(CMAJ) * TXINT + (TXINR * (1-positif(TXINR_A)) + (-1) * positif(TXINR_A) * positif(TXINR) * (1-null(TXINR - TXINR_A)) + TXINR * positif(TXINR_A) * null(TXINR - TXINR_A)) * (1-positif(TINR_1) * positif(INRIR_NET_1+INRCSG_NET_1+INRRDS_NET_1+INRPRS_NET_1+INRCDIS_NET_1 +INRCGLOA_NET_1+INRTAXA_NET_1 +INRRSE1_NET_1+INRRSE2_NET_1+INRRSE3_NET_1+INRRSE4_NET_1+INRRSE5_NET_1+INRREGV_NET_1 )) + (-1) * positif(TINR_1) * positif(INRIR_NET_1+INRCSG_NET_1+INRRDS_NET_1+INRPRS_NET_1+INRCDIS_NET_1 +INRCGLOA_NET_1+INRTAXA_NET_1 +INRRSE1_NET_1+INRRSE2_NET_1+INRRSE3_NET_1+INRRSE4_NET_1+INRRSE5_NET_1+INRREGV_NET_1 ) ",
          "linecol": [
            1950,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETX",
          "linecol": [
            1950,
            1
          ]
        },
        "linecol": [
          1950,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFC=01 ou V_CODPFC=02) alors (0) sinon ( si (V_CODPFC=07 ou V_CODPFC=10 ou V_CODPFC=17 ou V_CODPFC=18) alors (10) sinon ( si (V_CODPFC=03 ou V_CODPFC=08 ou V_CODPFC=11 ou V_CODPFC=30) alors (40) sinon ( si (V_CODPFC=04 ou V_CODPFC=05 ou V_CODPFC=09 ou V_CODPFC=12 ou V_CODPFC=31) alors (80) sinon ( si (V_CODPFI=06) alors (100) finsi) finsi) finsi) finsi) finsi",
          "linecol": [
            1962,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFC",
          "linecol": [
            1962,
            1
          ]
        },
        "linecol": [
          1962,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFR=01 ou V_CODPFR=02) alors (0) sinon ( si (V_CODPFR=07 ou V_CODPFR=10 ou V_CODPFR=17 ou V_CODPFR=18) alors (10) sinon ( si (V_CODPFR=03 ou V_CODPFR=08 ou V_CODPFR=11 ou V_CODPFR=30) alors (40) sinon ( si (V_CODPFR=04 ou V_CODPFR=05 ou V_CODPFR=09 ou V_CODPFR=12 ou V_CODPFR=31) alors (80) sinon ( si (V_CODPFI=06) alors (100) finsi) finsi) finsi) finsi) finsi",
          "linecol": [
            1976,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFR",
          "linecol": [
            1976,
            1
          ]
        },
        "linecol": [
          1976,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_CODPFP=01 ou V_CODPFP=02) alors (0) sinon ( si (V_CODPFP=07 ou V_CODPFP=10 ou V_CODPFP=17 ou V_CODPFP=18) alors (10) sinon ( si (V_CODPFP=03 ou V_CODPFP=08 ou V_CODPFP=11 ou V_CODPFP=30) alors (40) sinon ( si (V_CODPFP=04 ou V_CODPFP=05 ou V_CODPFP=09 ou V_CODPFP=12 ou V_CODPFP=31) alors (80) sinon ( si (V_CODPFI=06) alors (100) finsi) finsi) finsi) finsi) finsi",
          "linecol": [
            1990,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXPFP",
          "linecol": [
            1990,
            1
          ]
        },
        "linecol": [
          1990,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFI =01) alors (1) sinon ( si (V_CODPFI =02 ou V_CODPFI=22) alors (2) sinon ( si (V_CODPFI=03  ou V_CODPFI=04 ou V_CODPFI=05 ou V_CODPFI=06 ou V_CODPFI=30 ou V_CODPFI=32 ou V_CODPFI=55) alors (4) sinon ( si (V_CODPF1728=07 ou V_CODPF1728=08 ou V_CODPF1728=10 ou V_CODPF1728=11 ou V_CODPF1728=17 ou V_CODPF1728=18 ou V_CODPF1728=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2004,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJI",
          "linecol": [
            2004,
            1
          ]
        },
        "linecol": [
          2004,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJI * (1 - positif(V_NBCODI+V_NBCOD1728)) + 9 * positif(V_NBCODI+V_NBCOD1728)",
          "linecol": [
            2019,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJ",
          "linecol": [
            2019,
            1
          ]
        },
        "linecol": [
          2019,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFC=01) alors (1) sinon ( si (V_CODPFC=02) alors (2) sinon ( si (V_CODPFC=03  ou V_CODPFC=04 ou V_CODPFC=05 ou V_CODPFC=06 ou V_CODPFC=22 ou V_CODPFC=32 ou V_CODPFC=30) alors (4) sinon ( si (V_CODPFC=07 ou V_CODPFC=08 ou V_CODPFC=09 ou V_CODPFC=10 ou V_CODPFC=11 ou V_CODPFC=12 ou V_CODPFC=17 ou V_CODPFC=18 ou V_CODPFC=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2020,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCI",
          "linecol": [
            2020,
            1
          ]
        },
        "linecol": [
          2020,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJCI * (1 - positif(V_NBCODC)) + 9 * positif(V_NBCODC)",
          "linecol": [
            2035,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJC",
          "linecol": [
            2035,
            1
          ]
        },
        "linecol": [
          2035,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFR=01) alors (1) sinon ( si (V_CODPFR=02) alors (2) sinon ( si (V_CODPFR=03  ou V_CODPFR=04 ou V_CODPFR=05 ou V_CODPFR=06 ou V_CODPFR=22 ou V_CODPFR=32 ou V_CODPFR=30) alors (4) sinon ( si (V_CODPFR=07 ou V_CODPFR=08 ou V_CODPFR=09 ou V_CODPFR=10 ou V_CODPFR=11 ou V_CODPFR=12 ou V_CODPFR=17 ou V_CODPFR=18 ou V_CODPFR=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2036,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRI",
          "linecol": [
            2036,
            1
          ]
        },
        "linecol": [
          2036,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJRI * (1 - positif(V_NBCODR)) + 9 * positif(V_NBCODR)",
          "linecol": [
            2051,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJR",
          "linecol": [
            2051,
            1
          ]
        },
        "linecol": [
          2051,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFP=01) alors (1) sinon ( si (V_CODPFP=02) alors (2) sinon ( si (V_CODPFP=03 ou V_CODPFP=04 ou V_CODPFP=05 ou V_CODPFP=06 ou V_CODPFP=22 ou V_CODPFP=32 ou V_CODPFP=30) alors (4) sinon ( si (V_CODPFP=07 ou V_CODPFP=08 ou V_CODPFP=09 ou V_CODPFP=10 ou V_CODPFP=11 ou V_CODPFP=12 ou V_CODPFP=17  ou V_CODPFP=18 ou V_CODPFP=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2052,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJPI",
          "linecol": [
            2052,
            1
          ]
        },
        "linecol": [
          2052,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJPI * (1 - positif(V_NBCODP)) + 9 * positif(V_NBCODP)",
          "linecol": [
            2067,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJP",
          "linecol": [
            2067,
            1
          ]
        },
        "linecol": [
          2067,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFICAP=01) alors (1) sinon ( si (V_CODPFICAP=02) alors (2) sinon ( si (V_CODPFICAP=03 ou V_CODPFICAP=04 ou V_CODPFICAP=05 ou V_CODPFICAP=06 ou V_CODPFICAP=22 ou V_CODPFICAP=30) alors (4) sinon ( si (V_CODPFICAP=07 ou V_CODPFICAP=08 ou V_CODPFICAP=09 ou V_CODPFICAP=10 ou V_CODPFICAP=11 ou V_CODPFICAP=12 ou V_CODPFICAP=17  ou V_CODPFICAP=18 ou V_CODPFICAP=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2068,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCAPI",
          "linecol": [
            2068,
            1
          ]
        },
        "linecol": [
          2068,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJCAPI * (1 - positif(V_NBCODICAP)) + 9 * positif(V_NBCODICAP)",
          "linecol": [
            2084,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCAP",
          "linecol": [
            2084,
            1
          ]
        },
        "linecol": [
          2084,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFICHR=01) alors (1) sinon ( si (V_CODPFICHR=02) alors (2) sinon ( si (V_CODPFICHR=03 ou V_CODPFICHR=04 ou V_CODPFICHR=05 ou V_CODPFICHR=06 ou V_CODPFICHR=22 ou V_CODPFICHR=30) alors (4) sinon ( si (V_CODPFICHR=07 ou V_CODPFICHR=08 ou V_CODPFICHR=09 ou V_CODPFICHR=10 ou V_CODPFICHR=11 ou V_CODPFICHR=12 ou V_CODPFICHR=17  ou V_CODPFICHR=18 ou V_CODPFICHR=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2085,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCHRI",
          "linecol": [
            2085,
            1
          ]
        },
        "linecol": [
          2085,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJCHRI * (1 - positif(V_NBCODICHR)) + 9 * positif(V_NBCODICHR)",
          "linecol": [
            2101,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCHR",
          "linecol": [
            2101,
            1
          ]
        },
        "linecol": [
          2101,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFCDIS=01) alors (1) sinon ( si (V_CODPFCDIS=02) alors (2) sinon ( si (V_CODPFCDIS=03  ou V_CODPFCDIS=04 ou V_CODPFCDIS=05 ou V_CODPFCDIS=06 ou V_CODPFCDIS=22 ou V_CODPFCDIS=30) alors (4) sinon ( si (V_CODPFCDIS=07 ou V_CODPFCDIS=08 ou V_CODPFCDIS=09 ou V_CODPFCDIS=10 ou V_CODPFCDIS=11 ou V_CODPFCDIS=12 ou V_CODPFCDIS=17 ou V_CODPFCDIS=18 ou V_CODPFCDIS=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2102,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCDISI",
          "linecol": [
            2102,
            1
          ]
        },
        "linecol": [
          2102,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJCDISI * (1 - positif(V_NBCODCDIS)) + 9 * positif(V_NBCODCDIS)",
          "linecol": [
            2118,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCDIS",
          "linecol": [
            2118,
            1
          ]
        },
        "linecol": [
          2118,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFGLO=01) alors (1) sinon ( si (V_CODPFGLO=02) alors (2) sinon ( si (V_CODPFGLO=03  ou V_CODPFGLO=04 ou V_CODPFGLO=05 ou V_CODPFGLO=06 ou V_CODPFGLO=22 ou V_CODPFGLO=30) alors (4) sinon ( si (V_CODPFGLO=07 ou V_CODPFGLO=08 ou V_CODPFGLO=09 ou V_CODPFGLO=10 ou V_CODPFGLO=11 ou V_CODPFGLO=12 ou V_CODPFGLO=17 ou V_CODPFGLO=18 ou V_CODPFGLO=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2119,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJGLOAI",
          "linecol": [
            2119,
            1
          ]
        },
        "linecol": [
          2119,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJGLOAI * (1 - positif(V_NBCODGLO)) + 9 * positif(V_NBCODGLO)",
          "linecol": [
            2135,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJGLOA",
          "linecol": [
            2135,
            1
          ]
        },
        "linecol": [
          2135,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFCVN=01) alors (1) sinon ( si (V_CODPFCVN=02) alors (2) sinon ( si (V_CODPFCVN=03  ou V_CODPFCVN=04 ou V_CODPFCVN=05 ou V_CODPFCVN=06 ou V_CODPFCVN=22 ou V_CODPFCVN=30) alors (4) sinon ( si (V_CODPFCVN=07 ou V_CODPFCVN=08 ou V_CODPFCVN=09 ou V_CODPFCVN=10 ou V_CODPFCVN=11 ou V_CODPFCVN=12 ou V_CODPFCVN=17 ou V_CODPFCVN=18 ou V_CODPFCVN=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2136,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCVNI",
          "linecol": [
            2136,
            1
          ]
        },
        "linecol": [
          2136,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJCVNI * (1 - positif(V_NBCODCVN)) + 9 * positif(V_NBCODCVN)",
          "linecol": [
            2152,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJCVN",
          "linecol": [
            2152,
            1
          ]
        },
        "linecol": [
          2152,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFRSE1=01) alors (1) sinon ( si (V_CODPFRSE1=02) alors (2) sinon ( si (V_CODPFRSE1=03 ou V_CODPFRSE1=04 ou V_CODPFRSE1=05 ou V_CODPFRSE1=06 ou V_CODPFRSE1=22 ou V_CODPFRSE1=30) alors (4) sinon ( si (V_CODPFRSE1=07 ou V_CODPFRSE1=08 ou V_CODPFRSE1=09 ou V_CODPFRSE1=10 ou V_CODPFRSE1=11 ou V_CODPFRSE1=12 ou V_CODPFRSE1=17 ou V_CODPFRSE1=18 ou V_CODPFRSE1=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2153,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE1I",
          "linecol": [
            2153,
            1
          ]
        },
        "linecol": [
          2153,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJRSE1I * (1 - positif(V_NBCODRSE1)) + 9 * positif(V_NBCODRSE1)",
          "linecol": [
            2169,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE1",
          "linecol": [
            2169,
            1
          ]
        },
        "linecol": [
          2169,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFRSE2=01) alors (1) sinon ( si (V_CODPFRSE2=02) alors (2) sinon ( si (V_CODPFRSE2=03 ou V_CODPFRSE2=04 ou V_CODPFRSE2=05 ou V_CODPFRSE2=06 ou V_CODPFRSE2=22 ou V_CODPFRSE2=30) alors (4) sinon ( si (V_CODPFRSE2=07 ou V_CODPFRSE2=08 ou V_CODPFRSE2=09 ou V_CODPFRSE2=10 ou V_CODPFRSE2=11 ou V_CODPFRSE2=12 ou V_CODPFRSE2=17 ou V_CODPFRSE2=18 ou V_CODPFRSE2=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2170,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE2I",
          "linecol": [
            2170,
            1
          ]
        },
        "linecol": [
          2170,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJRSE2I * (1 - positif(V_NBCODRSE2)) + 9 * positif(V_NBCODRSE2)",
          "linecol": [
            2186,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE2",
          "linecol": [
            2186,
            1
          ]
        },
        "linecol": [
          2186,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFRSE3=01) alors (1) sinon ( si (V_CODPFRSE3=02) alors (2) sinon ( si (V_CODPFRSE3=03 ou V_CODPFRSE3=04 ou V_CODPFRSE3=05 ou V_CODPFRSE3=06 ou V_CODPFRSE3=22 ou V_CODPFRSE3=30) alors (4) sinon ( si (V_CODPFRSE3=07 ou V_CODPFRSE3=08 ou V_CODPFRSE3=09 ou V_CODPFRSE3=10 ou V_CODPFRSE3=11 ou V_CODPFRSE3=12 ou V_CODPFRSE3=17 ou V_CODPFRSE3=18 ou V_CODPFRSE3=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2187,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE3I",
          "linecol": [
            2187,
            1
          ]
        },
        "linecol": [
          2187,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJRSE3I * (1 - positif(V_NBCODRSE3)) + 9 * positif(V_NBCODRSE3)",
          "linecol": [
            2203,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE3",
          "linecol": [
            2203,
            1
          ]
        },
        "linecol": [
          2203,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFRSE4=01) alors (1) sinon ( si (V_CODPFRSE4=02) alors (2) sinon ( si (V_CODPFRSE4=03 ou V_CODPFRSE4=04 ou V_CODPFRSE4=05 ou V_CODPFRSE4=06 ou V_CODPFRSE4=22 ou V_CODPFRSE4=30) alors (4) sinon ( si (V_CODPFRSE4=07 ou V_CODPFRSE4=08 ou V_CODPFRSE4=09 ou V_CODPFRSE4=10 ou V_CODPFRSE4=11 ou V_CODPFRSE4=12 ou V_CODPFRSE4=17 ou V_CODPFRSE4=18 ou V_CODPFRSE4=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2204,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE4I",
          "linecol": [
            2204,
            1
          ]
        },
        "linecol": [
          2204,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJRSE4I * (1 - positif(V_NBCODRSE4)) + 9 * positif(V_NBCODRSE4)",
          "linecol": [
            2220,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE4",
          "linecol": [
            2220,
            1
          ]
        },
        "linecol": [
          2220,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFRSE5=01) alors (1) sinon ( si (V_CODPFRSE5=02) alors (2) sinon ( si (V_CODPFRSE5=03 ou V_CODPFRSE5=04 ou V_CODPFRSE5=05 ou V_CODPFRSE5=06 ou V_CODPFRSE5=22 ou V_CODPFRSE5=30) alors (4) sinon ( si (V_CODPFRSE5=07 ou V_CODPFRSE5=08 ou V_CODPFRSE5=09 ou V_CODPFRSE5=10 ou V_CODPFRSE5=11 ou V_CODPFRSE5=12 ou V_CODPFRSE5=17 ou V_CODPFRSE5=18 ou V_CODPFRSE5=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2221,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE5I",
          "linecol": [
            2221,
            1
          ]
        },
        "linecol": [
          2221,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJRSE5I * (1 - positif(V_NBCODRSE5)) + 9 * positif(V_NBCODRSE5)",
          "linecol": [
            2237,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJRSE5",
          "linecol": [
            2237,
            1
          ]
        },
        "linecol": [
          2237,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "present(CMAJ) + si (V_CODPFREGV=01) alors (1) sinon ( si (V_CODPFREGV=02) alors (2) sinon ( si (V_CODPFREGV=03 ou V_CODPFREGV=04 ou V_CODPFREGV=05 ou V_CODPFREGV=06 ou V_CODPFREGV=22 ou V_CODPFREGV=30) alors (4) sinon ( si (V_CODPFREGV=07 ou V_CODPFREGV=08 ou V_CODPFREGV=09 ou V_CODPFREGV=10 ou V_CODPFREGV=11 ou V_CODPFREGV=12 ou V_CODPFREGV=17 ou V_CODPFREGV=18 ou V_CODPFREGV=31) alors (1) finsi) finsi) finsi) finsi",
          "linecol": [
            2238,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJREGVI",
          "linecol": [
            2238,
            1
          ]
        },
        "linecol": [
          2238,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NATMAJREGVI * (1 - positif(V_NBCODREGV)) + 9 * positif(V_NBCODREGV)",
          "linecol": [
            2254,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATMAJREGV",
          "linecol": [
            2254,
            1
          ]
        },
        "linecol": [
          2254,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODC)) * ( positif(CMAJ)*COPETO + TXPFC ) + positif(V_NBCODC) * (-1)",
          "linecol": [
            2255,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXC",
          "linecol": [
            2255,
            1
          ]
        },
        "linecol": [
          2255,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODR)) * ( positif(CMAJ)*COPETO + TXPFR ) + positif(V_NBCODR) * (-1)",
          "linecol": [
            2257,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXR",
          "linecol": [
            2257,
            1
          ]
        },
        "linecol": [
          2257,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODP)) * ( positif(CMAJ)*COPETO + TXPFP) + positif(V_NBCODP) * (-1)",
          "linecol": [
            2259,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXP",
          "linecol": [
            2259,
            1
          ]
        },
        "linecol": [
          2259,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODCVN)) * ( positif(CMAJ)*COPETO + TXPFCVN) + positif(V_NBCODCVN) * (-1)",
          "linecol": [
            2261,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCVN",
          "linecol": [
            2261,
            1
          ]
        },
        "linecol": [
          2261,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODCDIS)) * ( positif(CMAJ)*COPETO + TXPFCDIS) + positif(V_NBCODCDIS) * (-1)",
          "linecol": [
            2263,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXCDIS",
          "linecol": [
            2263,
            1
          ]
        },
        "linecol": [
          2263,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODGLO)) * ( positif(CMAJ)*COPETO + TXPFGLO) + positif(V_NBCODGLO) * (-1)",
          "linecol": [
            2265,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXGLOA",
          "linecol": [
            2265,
            1
          ]
        },
        "linecol": [
          2265,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODRSE5)) * ( positif(CMAJ)*COPETO + TXPFRSE5) + positif(V_NBCODRSE5) * (-1)",
          "linecol": [
            2267,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE5",
          "linecol": [
            2267,
            1
          ]
        },
        "linecol": [
          2267,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODRSE1)) * ( positif(CMAJ)*COPETO + TXPFRSE1) + positif(V_NBCODRSE1) * (-1)",
          "linecol": [
            2269,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE1",
          "linecol": [
            2269,
            1
          ]
        },
        "linecol": [
          2269,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODRSE2)) * ( positif(CMAJ)*COPETO + TXPFRSE2) + positif(V_NBCODRSE2) * (-1)",
          "linecol": [
            2271,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE2",
          "linecol": [
            2271,
            1
          ]
        },
        "linecol": [
          2271,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODRSE3)) * ( positif(CMAJ)*COPETO + TXPFRSE3) + positif(V_NBCODRSE3) * (-1)",
          "linecol": [
            2273,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE3",
          "linecol": [
            2273,
            1
          ]
        },
        "linecol": [
          2273,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_NBCODRSE4)) * ( positif(CMAJ)*COPETO + TXPFRSE4) + positif(V_NBCODRSE4) * (-1)",
          "linecol": [
            2275,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MAJTXRSE4",
          "linecol": [
            2275,
            1
          ]
        },
        "linecol": [
          2275,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETCS) + MAJTXC * positif_ou_nul(MAJTXC)* positif(NMAJC1)*null(1-NATMAJC) + MAJTXC1 * positif_ou_nul(MAJTXC1)* positif(NMAJC1)*(1-positif(MAJTXC)) + MAJTXC4 * positif_ou_nul(MAJTXC4)*positif(NMAJC4) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXC)+null(1+MAJTXC1)+null(1+MAJTXC4))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXC)+null(1+MAJTXC1)+null(1+MAJTXC4)) * positif(RETCS+NMAJC1+NMAJC4) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2277,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXC",
          "linecol": [
            2277,
            1
          ]
        },
        "linecol": [
          2277,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETRD) + MAJTXR * positif_ou_nul(MAJTXR)* positif(NMAJR1)*null(1-NATMAJR) + MAJTXR1 * positif_ou_nul(MAJTXR1)* positif(NMAJR1)*(1-positif(MAJTXR)) + MAJTXR4 * positif_ou_nul(MAJTXR4)*positif(NMAJR4) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXR)+null(1+MAJTXR1)+null(1+MAJTXR4))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXR)+null(1+MAJTXR1)+null(1+MAJTXR4)) * positif(RETRD+NMAJR1+NMAJR4) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2285,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXR",
          "linecol": [
            2285,
            1
          ]
        },
        "linecol": [
          2285,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETPS) + MAJTXP * positif_ou_nul(MAJTXP)* positif(NMAJP1)*null(1-NATMAJP) + MAJTXP1 * positif_ou_nul(MAJTXP1)* positif(NMAJP1)*(1-positif(MAJTXP)) + MAJTXP4 * positif_ou_nul(MAJTXP4)*positif(NMAJP4) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXP)+null(1+MAJTXP1)+null(1+MAJTXP4))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXP)+null(1+MAJTXP1)+null(1+MAJTXP4)) * positif(RETPS+NMAJP1+NMAJP4) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2293,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXP",
          "linecol": [
            2293,
            1
          ]
        },
        "linecol": [
          2293,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETCDIS) + MAJTXCDIS * positif_ou_nul(MAJTXCDIS)* positif(NMAJCDIS1)*null(1-NATMAJCDIS) + MAJTXCDIS1 * positif_ou_nul(MAJTXCDIS1)* positif(NMAJCDIS1)*(1-positif(MAJTXCDIS)) + MAJTXCDIS4 * positif_ou_nul(MAJTXCDIS4)*positif(NMAJCDIS4) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXCDIS)+null(1+MAJTXCDIS1)+null(1+MAJTXCDIS4))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXCDIS)+null(1+MAJTXCDIS1)+null(1+MAJTXCDIS4)) * positif(RETCDIS+NMAJCDIS1+NMAJCDIS4) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2301,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXCDIS",
          "linecol": [
            2301,
            1
          ]
        },
        "linecol": [
          2301,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETGLOA) + MAJTXGLOA * positif_ou_nul(MAJTXGLOA)* positif(NMAJGLO1)*null(1-NATMAJGLOA) + MAJTXGLO1 * positif_ou_nul(MAJTXGLO1)* positif(NMAJGLO1)*(1-positif(MAJTXGLOA)) + MAJTXGLO4 * positif_ou_nul(MAJTXGLO4)*positif(NMAJGLO4) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXGLOA)+null(1+MAJTXGLO1)+null(1+MAJTXGLO4))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXGLOA)+null(1+MAJTXGLO1)+null(1+MAJTXGLO4)) * positif(RETGLOA+NMAJGLO1+NMAJGLO4) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2309,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXGLOA",
          "linecol": [
            2309,
            1
          ]
        },
        "linecol": [
          2309,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETRSE1) + MAJTXRSE1 * positif_ou_nul(MAJTXRSE1)* positif(NMAJRSE11)*null(1-NATMAJRSE1) + MAJTXRSE11 * positif_ou_nul(MAJTXRSE11)* positif(NMAJRSE11)*(1-positif(MAJTXRSE1)) + MAJTXRSE14 * positif_ou_nul(MAJTXRSE14)*positif(NMAJRSE14) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXRSE1)+null(1+MAJTXRSE11)+null(1+MAJTXRSE14))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXRSE1)+null(1+MAJTXRSE11)+null(1+MAJTXRSE14)) * positif(RETRSE1+NMAJRSE11+NMAJRSE14) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2317,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE1",
          "linecol": [
            2317,
            1
          ]
        },
        "linecol": [
          2317,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETRSE2) + MAJTXRSE2 * positif_ou_nul(MAJTXRSE2)* positif(NMAJRSE21)*null(1-NATMAJRSE2) + MAJTXRSE21 * positif_ou_nul(MAJTXRSE21)* positif(NMAJRSE21)*(1-positif(MAJTXRSE2)) + MAJTXRSE24 * positif_ou_nul(MAJTXRSE24)*positif(NMAJRSE24) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXRSE2)+null(1+MAJTXRSE21)+null(1+MAJTXRSE24))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXRSE2)+null(1+MAJTXRSE21)+null(1+MAJTXRSE24)) * positif(RETRSE2+NMAJRSE21+NMAJRSE24) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2325,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE2",
          "linecol": [
            2325,
            1
          ]
        },
        "linecol": [
          2325,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETRSE3) + MAJTXRSE3 * positif_ou_nul(MAJTXRSE3)* positif(NMAJRSE31)*null(1-NATMAJRSE3) + MAJTXRSE31 * positif_ou_nul(MAJTXRSE31)* positif(NMAJRSE31)*(1-positif(MAJTXRSE3)) + MAJTXRSE34 * positif_ou_nul(MAJTXRSE34)*positif(NMAJRSE34) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXRSE3)+null(1+MAJTXRSE31)+null(1+MAJTXRSE34))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXRSE3)+null(1+MAJTXRSE31)+null(1+MAJTXRSE34)) * positif(RETRSE3+NMAJRSE31+NMAJRSE34) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2333,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE3",
          "linecol": [
            2333,
            1
          ]
        },
        "linecol": [
          2333,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETRSE4) + MAJTXRSE4 * positif_ou_nul(MAJTXRSE4)* positif(NMAJRSE41)*null(1-NATMAJRSE4) + MAJTXRSE41 * positif_ou_nul(MAJTXRSE41)* positif(NMAJRSE41)*(1-positif(MAJTXRSE4)) + MAJTXRSE44 * positif_ou_nul(MAJTXRSE44)*positif(NMAJRSE44) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXRSE4)+null(1+MAJTXRSE41)+null(1+MAJTXRSE44))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXRSE4)+null(1+MAJTXRSE41)+null(1+MAJTXRSE44)) * positif(RETRSE4+NMAJRSE41+NMAJRSE44) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2341,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE4",
          "linecol": [
            2341,
            1
          ]
        },
        "linecol": [
          2341,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(   RETX * positif_ou_nul(RETX) * positif(RETRSE5) + MAJTXRSE5 * positif_ou_nul(MAJTXRSE5)* positif(NMAJRSE51)*null(1-NATMAJRSE5) + MAJTXRSE51 * positif_ou_nul(MAJTXRSE51)* positif(NMAJRSE51)*(1-positif(MAJTXRSE5)) + MAJTXRSE54 * positif_ou_nul(MAJTXRSE54)*positif(NMAJRSE54) ) * positif_ou_nul (TXTO) * (1-positif(null(1+RETX)+null(1+MAJTXRSE5)+null(1+MAJTXRSE51)+null(1+MAJTXRSE54))) + (-1) * positif (TXTO) * positif(null(1+RETX)+null(1+MAJTXRSE5)+null(1+MAJTXRSE51)+null(1+MAJTXRSE54)) * positif(RETRSE5+NMAJRSE51+NMAJRSE54) + (-1) * (1 - positif_ou_nul(TXTO)) * positif(TXTO * (-1))",
          "linecol": [
            2349,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXRSE5",
          "linecol": [
            2349,
            1
          ]
        },
        "linecol": [
          2349,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907143",
      "linecol": [
        1948,
        8
      ]
    },
    "linecol": [
      1948,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2358,
                14
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2358,
                22
              ]
            }
          ],
          "linecol": [
            2358,
            14
          ]
        }
      ],
      "linecol": [
        2358,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(V_ZDC+0)) * positif(NAT1 + NAT71)* IINET",
          "linecol": [
            2359,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "WMTAP",
          "linecol": [
            2359,
            1
          ]
        },
        "linecol": [
          2359,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0, (V_ACO_MTAP * null(2-FLAG_ACO) + WMTAP * (1-null(2-FLAG_ACO))) * (1 - INDTXMIN) * (1 - INDTXMOY ) + ( (V_ACO_MTAP * null(2-FLAG_ACO) + WMTAP * (1-null(2-FLAG_ACO)))  * positif(INDTXMIN+INDTXMOY) ) * positif(V_ACO_MTAP* null(2-FLAG_ACO) + WMTAP * (1-null(2-FLAG_ACO)) - SEUIL_ACOMPTE) )",
          "linecol": [
            2360,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MTAP",
          "linecol": [
            2360,
            1
          ]
        },
        "linecol": [
          2360,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90716",
      "linecol": [
        2357,
        8
      ]
    },
    "linecol": [
      2357,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2367,
                15
              ]
            }
          ],
          "linecol": [
            2367,
            15
          ]
        }
      ],
      "linecol": [
        2367,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 12,
                      "linecol": [
                        2368,
                        12
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        2368,
                        8
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      2368,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "30",
                    "linecol": [
                      2368,
                      15
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "31",
                    "linecol": [
                      2368,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "55",
                    "linecol": [
                      2368,
                      21
                    ]
                  }
                ],
                "linecol": [
                  2368,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "x",
                "linecol": [
                  2368,
                  6
                ]
              },
              "linecol": [
                2368,
                6
              ]
            }
          ],
          "linecol": [
            2368,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "NUTOTx_D * positif(APPLI_OCEANS)",
            "linecol": [
              2369,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "RAP_UTIx",
            "linecol": [
              2369,
              1
            ]
          },
          "linecol": [
            2369,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          2368,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907215",
      "linecol": [
        2366,
        7
      ]
    },
    "linecol": [
      2366,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2371,
                15
              ]
            }
          ],
          "linecol": [
            2371,
            15
          ]
        }
      ],
      "linecol": [
        2371,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 12,
                      "linecol": [
                        2372,
                        12
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 2,
                      "linecol": [
                        2372,
                        8
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      2372,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "30",
                    "linecol": [
                      2372,
                      15
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "31",
                    "linecol": [
                      2372,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "55",
                    "linecol": [
                      2372,
                      21
                    ]
                  }
                ],
                "linecol": [
                  2372,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "x",
                "linecol": [
                  2372,
                  6
                ]
              },
              "linecol": [
                2372,
                6
              ]
            },
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "RF",
                    "linecol": [
                      2372,
                      26
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "BA",
                    "linecol": [
                      2372,
                      29
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "LO",
                    "linecol": [
                      2372,
                      32
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "NC",
                    "linecol": [
                      2372,
                      35
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "CO",
                    "linecol": [
                      2372,
                      38
                    ]
                  }
                ],
                "linecol": [
                  2372,
                  26
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  2372,
                  24
                ]
              },
              "linecol": [
                2372,
                24
              ]
            }
          ],
          "linecol": [
            2372,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "NViDx_D * positif(APPLI_OCEANS)",
            "linecol": [
              2373,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "RAPi_REPx",
            "linecol": [
              2373,
              1
            ]
          },
          "linecol": [
            2373,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          2372,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907216",
      "linecol": [
        2370,
        7
      ]
    },
    "linecol": [
      2370,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2375,
                15
              ]
            }
          ],
          "linecol": [
            2375,
            15
          ]
        }
      ],
      "linecol": [
        2375,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 12,
                      "linecol": [
                        2376,
                        12
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        2376,
                        8
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      2376,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "30",
                    "linecol": [
                      2376,
                      15
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "31",
                    "linecol": [
                      2376,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "55",
                    "linecol": [
                      2376,
                      21
                    ]
                  }
                ],
                "linecol": [
                  2376,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  2376,
                  6
                ]
              },
              "linecol": [
                2376,
                6
              ]
            }
          ],
          "linecol": [
            2376,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "NCCOi_D * positif(APPLI_OCEANS)",
            "linecol": [
              2377,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "RAPCO_Ni",
            "linecol": [
              2377,
              1
            ]
          },
          "linecol": [
            2377,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          2376,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907217",
      "linecol": [
        2374,
        7
      ]
    },
    "linecol": [
      2374,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2379,
                15
              ]
            }
          ],
          "linecol": [
            2379,
            15
          ]
        }
      ],
      "linecol": [
        2379,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "FPTV - DEDSV* positif(APPLI_OCEANS)",
          "linecol": [
            2380,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "FPV",
          "linecol": [
            2380,
            1
          ]
        },
        "linecol": [
          2380,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "FPTC - DEDSC* positif(APPLI_OCEANS)",
          "linecol": [
            2381,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "FPC",
          "linecol": [
            2381,
            1
          ]
        },
        "linecol": [
          2381,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=1..4: FPTi) - DEDSP* positif(APPLI_OCEANS)",
          "linecol": [
            2382,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "FPP",
          "linecol": [
            2382,
            1
          ]
        },
        "linecol": [
          2382,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif(DEFIBA) * abs(BANOR) + present(DAGRI6) * (min(DAGRI6,DAGRI61731+0) * positif(ART1731BIS) + DAGRI6 * (1 - ART1731BIS)) + present(DAGRI5) * (min(DAGRI5,DAGRI51731+0) * positif(ART1731BIS) + DAGRI5 * (1 - ART1731BIS)) + present(DAGRI4) * (min(DAGRI4,DAGRI41731+0) * positif(ART1731BIS) + DAGRI4 * (1 - ART1731BIS)) + present(DAGRI3) * (min(DAGRI3,DAGRI31731+0) * positif(ART1731BIS) + DAGRI3 * (1 - ART1731BIS)) + present(DAGRI2) * (min(DAGRI2,DAGRI21731+0) * positif(ART1731BIS) + DAGRI2 * (1 - ART1731BIS)) + present(DAGRI1) * (min(DAGRI1,DAGRI11731+0) * positif(ART1731BIS) + DAGRI1 * (1 - ART1731BIS))) * positif(APPLI_OCEANS)",
          "linecol": [
            2383,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DIMBA",
          "linecol": [
            2383,
            1
          ]
        },
        "linecol": [
          2383,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "91",
      "linecol": [
        2378,
        7
      ]
    },
    "linecol": [
      2378,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2391,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2391,
                22
              ]
            }
          ],
          "linecol": [
            2391,
            15
          ]
        }
      ],
      "linecol": [
        2391,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(4 - V_IND_TRAIT) * (IINET + IREST * (-1)) + null(5 - V_IND_TRAIT) * (positif(IDEGR) * positif(IREST) * positif(SEUIL_8 - IREST) * IDEGR * (-1) + (1 - positif(positif(IDEGR) * positif(IREST) * positif(SEUIL_8 - IREST))) * (IINET - IREST - IDEGR)) ",
          "linecol": [
            2392,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNET",
          "linecol": [
            2392,
            1
          ]
        },
        "linecol": [
          2392,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(NAPTIR - V_ANTIR-V_PCAPANT-V_TAXANT-V_TAXLOYANT-V_CHRANT) * null(4 - V_IND_TRAIT) + (IMPNET - IMPNETPS) * null(5-V_IND_TRAIT)",
          "linecol": [
            2397,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETIR",
          "linecol": [
            2397,
            1
          ]
        },
        "linecol": [
          2397,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPCS - V_CSANT",
          "linecol": [
            2399,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETCS",
          "linecol": [
            2399,
            1
          ]
        },
        "linecol": [
          2399,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPRD - V_RDANT",
          "linecol": [
            2400,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETRD",
          "linecol": [
            2400,
            1
          ]
        },
        "linecol": [
          2400,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPPS - V_PSANT",
          "linecol": [
            2401,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETPRS",
          "linecol": [
            2401,
            1
          ]
        },
        "linecol": [
          2401,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPCVN - V_CVNANT",
          "linecol": [
            2402,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETCSAL",
          "linecol": [
            2402,
            1
          ]
        },
        "linecol": [
          2402,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPCDIS - V_CDISANT",
          "linecol": [
            2403,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETCDIS",
          "linecol": [
            2403,
            1
          ]
        },
        "linecol": [
          2403,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPGLOA - V_GLOANT",
          "linecol": [
            2404,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETGLO",
          "linecol": [
            2404,
            1
          ]
        },
        "linecol": [
          2404,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPRSE1 + NAPRSE2 +NAPRSE3 +NAPRSE4 +NAPRSE5 - V_RSE1ANT- V_RSE2ANT- V_RSE3ANT- V_RSE4ANT- V_RSE5ANT",
          "linecol": [
            2405,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETRSE",
          "linecol": [
            2405,
            1
          ]
        },
        "linecol": [
          2405,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPREGV - V_REGVANT",
          "linecol": [
            2406,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETREGV",
          "linecol": [
            2406,
            1
          ]
        },
        "linecol": [
          2406,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-present(IPTEFP)) * max(0,( RG+ TOTALQUO +(AB*(1-present(IPVLOC))) ))*(1-positif(APPLI_COLBERT))",
          "linecol": [
            2408,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASEXOGEN",
          "linecol": [
            2408,
            1
          ]
        },
        "linecol": [
          2408,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(PRS + PTOPRS)*(1-positif(APPLI_COLBERT))",
          "linecol": [
            2410,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MONTNETCS",
          "linecol": [
            2410,
            1
          ]
        },
        "linecol": [
          2410,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si ((APPLI_COLBERT=0) et ( present(RDCOM)=1 et present(NBACT)=0 )) alors (0) sinon (NBACT) finsi",
          "linecol": [
            2411,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DBACT",
          "linecol": [
            2411,
            1
          ]
        },
        "linecol": [
          2411,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "910",
      "linecol": [
        2390,
        7
      ]
    },
    "linecol": [
      2390,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2416,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2416,
                23
              ]
            }
          ],
          "linecol": [
            2416,
            15
          ]
        }
      ],
      "linecol": [
        2416,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPCR61 - V_ANTCR",
          "linecol": [
            2417,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IMPNETPS",
          "linecol": [
            2417,
            1
          ]
        },
        "linecol": [
          2417,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9109999",
      "linecol": [
        2415,
        7
      ]
    },
    "linecol": [
      2415,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2419,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2419,
                23
              ]
            }
          ],
          "linecol": [
            2419,
            15
          ]
        }
      ],
      "linecol": [
        2419,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_NIMPA+0 = 1) alors (V_ANTRE+RECUM_A) sinon ((V_ANTRE+RECUM_A) * positif_ou_nul((V_ANTRE+RECUM_A) - SEUIL_8)) finsi",
          "linecol": [
            2420,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RECUMBIS",
          "linecol": [
            2420,
            1
          ]
        },
        "linecol": [
          2420,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_NIMPAIR+0 = 1) alors (V_ANTREIR) sinon (V_ANTREIR * positif_ou_nul(V_ANTREIR - SEUIL_8)) finsi",
          "linecol": [
            2424,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RECUMBISIR",
          "linecol": [
            2424,
            1
          ]
        },
        "linecol": [
          2424,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "91011",
      "linecol": [
        2418,
        7
      ]
    },
    "linecol": [
      2418,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2430,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2430,
                22
              ]
            }
          ],
          "linecol": [
            2430,
            15
          ]
        }
      ],
      "linecol": [
        2430,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (( (V_ANTIR + IRCUM_A - (IRNET+IRANT) * positif(IRNET+IRANT) - TAXANET - PCAPNET - TAXLOYNET - HAUTREVNET + (V_ANTCR-CSTOT)) > 0 et (V_ANTIR + IRCUM_A - (IRNET+IRANT) * positif(IRNET+IRANT) - TAXANET - PCAPNET - TAXLOYNET - HAUTREVNET + (V_ANTCR-CSTOT)) < SEUIL_8 ) ou ( (TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + (IRNET+IRANT) * positif(IRNET+IRANT) - V_ANTIR- IRCUM_A + (CSTOT-V_ANTCR)) > 0 et (TAXANET + PCAPNET+ TAXLOYNET  + HAUTREVNET + (IRNET+IRANT) * positif(IRNET+IRANT) - V_ANTIR- IRCUM_A + (CSTOT-V_ANTCR)) < SEUIL_12 ) ) alors (V_ANTIR + IRCUM_A + 0) sinon (IRNET + IRANT) finsi",
          "linecol": [
            2431,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRCUMBIS",
          "linecol": [
            2431,
            1
          ]
        },
        "linecol": [
          2431,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9101",
      "linecol": [
        2429,
        7
      ]
    },
    "linecol": [
      2429,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2447,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2447,
                22
              ]
            }
          ],
          "linecol": [
            2447,
            15
          ]
        }
      ],
      "linecol": [
        2447,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si ((APPLI_COLBERT=0) et  (IRNET - V_ANTIR + TAXANET - V_TAXANT + PCAPNET - V_PCAPANT+TAXLOYNET-V_TAXLOYANT+ HAUTREVNET - V_CHRANT >= SEUIL_12) ou ( (-IRNET + V_ANTIR - TAXANET + V_TAXANT  - PCAPNET + V_PCAPANT-TAXLOYNET+V_TAXLOYANT- HAUTREVNET + V_CHRANT ) >= SEUIL_8) ) alors(TAXANET * positif(TAXACUM)) sinon(V_TAXANT * positif(TAXACUM) + 0 ) finsi",
          "linecol": [
            2450,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTAXAGA",
          "linecol": [
            2450,
            1
          ]
        },
        "linecol": [
          2450,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si ((APPLI_COLBERT=0) et ( (IRNET - V_ANTIR + TAXANET - V_TAXANT + PCAPNET - V_PCAPANT +TAXLOYNET-V_TAXLOYANT+ HAUTREVNET - V_CHRANT>= SEUIL_12) ou ( (-IRNET + V_ANTIR - TAXANET + V_TAXANT - PCAPNET + V_PCAPANT  -TAXLOYNET+V_TAXLOYANT- HAUTREVNET + V_CHRANT) >= SEUIL_8) )) alors(PCAPNET * positif(PCAPCUM)) sinon(V_PCAPANT * positif(PCAPCUM) + 0 ) finsi",
          "linecol": [
            2455,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PCAPTOT",
          "linecol": [
            2455,
            1
          ]
        },
        "linecol": [
          2455,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si ((APPLI_COLBERT=0) et ( (IRNET - V_ANTIR + TAXANET - V_TAXANT + PCAPNET - V_PCAPANT +TAXLOYNET-V_TAXLOYANT+ HAUTREVNET - V_CHRANT>= SEUIL_12) ou ( (-IRNET + V_ANTIR - TAXANET + V_TAXANT - PCAPNET + V_PCAPANT  -TAXLOYNET+V_TAXLOYANT- HAUTREVNET + V_CHRANT) >= SEUIL_8) )) alors(TAXLOYNET * positif(TAXLOYCUM)) sinon(V_TAXLOYANT * positif(TAXLOYCUM) + 0 ) finsi",
          "linecol": [
            2460,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXLOYTOT",
          "linecol": [
            2460,
            1
          ]
        },
        "linecol": [
          2460,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si ((APPLI_COLBERT=0) et ( (IRNET - V_ANTIR + TAXANET - V_TAXANT + PCAPNET - V_PCAPANT +TAXLOYNET-V_TAXLOYANT+ HAUTREVNET - V_CHRANT >= SEUIL_12) ou ( (-IRNET + V_ANTIR - TAXANET + V_TAXANT - PCAPNET + V_PCAPANT  -TAXLOYNET+V_TAXLOYANT- HAUTREVNET + V_CHRANT ) >= SEUIL_8) )) alors(HAUTREVNET * positif(HAUTREVCUM)) sinon(V_CHRANT * positif(HAUTREVCUM) + 0 ) finsi",
          "linecol": [
            2465,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HAUTREVTOT",
          "linecol": [
            2465,
            1
          ]
        },
        "linecol": [
          2465,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "910130",
      "linecol": [
        2446,
        7
      ]
    },
    "linecol": [
      2446,
      1
    ]
  },
  {
    "name": {
      "type": "symbol",
      "name": "9100",
      "linecol": [
        2470,
        11
      ]
    },
    "linecol": [
      2470,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null (4 - V_IND_TRAIT) * (ISFNET * positif_ou_nul (ISFNET - SEUIL_12) + min( 0, ISFNET) * positif( SEUIL_12 - ISFNET ) )  + null(5 - V_IND_TRAIT)* (positif(SEUIL_12 - ISF4BIS) * 0 + (1-positif(SEUIL_12 - ISF4BIS)) * ( positif(positif_ou_nul(-ISFNET + V_ANTISF - SEUIL_8) + positif_ou_nul(ISFNET - V_ANTISF - SEUIL_12) ) * ISFNET + (1-positif(positif_ou_nul(-ISFNET + V_ANTISF - SEUIL_8) + positif_ou_nul(ISFNET - V_ANTISF - SEUIL_12) ) ) * V_ANTISF ) )* (1-positif(APPLI_OCEANS))",
          "linecol": [
            2472,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ISFCUM",
          "linecol": [
            2472,
            1
          ]
        },
        "linecol": [
          2472,
          1
        ]
      }
    ],
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2471,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2471,
                22
              ]
            }
          ],
          "linecol": [
            2471,
            15
          ]
        }
      ],
      "linecol": [
        2471,
        1
      ]
    },
    "type": "regle_declaration",
    "qualifiers": [
      {
        "type": "symbol",
        "name": "isf",
        "linecol": [
          2470,
          7
        ]
      }
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2491,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2491,
                22
              ]
            }
          ],
          "linecol": [
            2491,
            15
          ]
        }
      ],
      "linecol": [
        2491,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(IAMD1 - SEUIL_61)",
          "linecol": [
            2492,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDSEUIL61",
          "linecol": [
            2492,
            1
          ]
        },
        "linecol": [
          2492,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(max(0 , CSNET+RDNET+PRSNET+CVNNET+REGVNET+CDISNET+CGLOANET+RSE1NET+RSE2NET+RSE3NET+RSE4NET+RSE5NET )- SEUIL_12)",
          "linecol": [
            2493,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDSEUIL12",
          "linecol": [
            2493,
            1
          ]
        },
        "linecol": [
          2493,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(IRNET+TAXANET+PCAPNET+TAXLOYNET+HAUTREVNET - SEUIL_12)",
          "linecol": [
            2494,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDSEUIL12IR",
          "linecol": [
            2494,
            1
          ]
        },
        "linecol": [
          2494,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9101350",
      "linecol": [
        2490,
        7
      ]
    },
    "linecol": [
      2490,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2496,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2496,
                22
              ]
            }
          ],
          "linecol": [
            2496,
            15
          ]
        }
      ],
      "linecol": [
        2496,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(IDEGR + max(0,V_NONRESTANT - V_ANTRE - min(0,NAPTEMP))) * positif(SEUIL_8 - IDEGR - max(0,V_NONRESTANT - V_ANTRE - min(0,NAPTEMP))) * positif(NAPCRTEMP - V_ANTCR)",
          "linecol": [
            2497,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NONRESTEMP2",
          "linecol": [
            2497,
            1
          ]
        },
        "linecol": [
          2497,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "91013501",
      "linecol": [
        2495,
        7
      ]
    },
    "linecol": [
      2495,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2499,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2499,
                22
              ]
            }
          ],
          "linecol": [
            2499,
            15
          ]
        }
      ],
      "linecol": [
        2499,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(positif(SEUIL_8 - abs(IRPSCUM - RECUM)) * (1-positif(IRPSCUM-RECUM))+ positif(SEUIL_12 - IRPSCUM - RECUM)*positif(IRPSCUM-RECUM)) * 0 + (1-positif(positif(SEUIL_8 - abs(IRPSCUM - RECUM)) * (1-positif(IRPSCUM-RECUM))+ positif(SEUIL_12 - IRPSCUM - RECUM)*positif(IRPSCUM-RECUM)))*(IRPSCUM - RECUM)",
          "linecol": [
            2501,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPTEMP",
          "linecol": [
            2501,
            1
          ]
        },
        "linecol": [
          2501,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9101351",
      "linecol": [
        2498,
        7
      ]
    },
    "linecol": [
      2498,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2505,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2505,
                22
              ]
            }
          ],
          "linecol": [
            2505,
            15
          ]
        }
      ],
      "linecol": [
        2505,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRPSCUM - NONMER - RECUM + (NONREST * positif(IRPSCUM - RECUM - TOTIRPSANT + 0))",
          "linecol": [
            2508,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPTEMPCX",
          "linecol": [
            2508,
            1
          ]
        },
        "linecol": [
          2508,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "91013511",
      "linecol": [
        2504,
        7
      ]
    },
    "linecol": [
      2504,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2511,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2511,
                22
              ]
            }
          ],
          "linecol": [
            2511,
            15
          ]
        }
      ],
      "linecol": [
        2511,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CSG + RDSN + PRS + PCSG + PRDS + PPRS + CVNSALC + PCVN + CDIS + PCDIS + BREGV + PREGV + CGLOA + PGLOA + RSE1N + PRSE1 + RSE2N + PRSE2 + RSE3N + PRSE3 + RSE4N + PRSE4 + RSE5N + PRSE5 - CSGIM - CRDSIM - PRSPROV - COD8YT - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYN -CSPROVYG-CSPROVYH-CSPROVYP+0",
          "linecol": [
            2512,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VARPS61",
          "linecol": [
            2512,
            1
          ]
        },
        "linecol": [
          2512,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IBM23 + TAXASSUR + IPCAPTAXT + TAXLOY + IHAUTREVT+0",
          "linecol": [
            2516,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VARIR61",
          "linecol": [
            2516,
            1
          ]
        },
        "linecol": [
          2516,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IBM23 + TAXASSUR + IPCAPTAXT + TAXLOY + IHAUTREVT+TOTPENIR+0",
          "linecol": [
            2517,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VARIR61BIS",
          "linecol": [
            2517,
            1
          ]
        },
        "linecol": [
          2517,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RASAR + NRINET + IMPRET+0",
          "linecol": [
            2518,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VARIR12",
          "linecol": [
            2518,
            1
          ]
        },
        "linecol": [
          2518,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(20 - V_NOTRAIT)",
          "linecol": [
            2519,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TRAITINF20",
          "linecol": [
            2519,
            1
          ]
        },
        "linecol": [
          2519,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(V_NOTRAIT - 20)",
          "linecol": [
            2520,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TRAITSUP20",
          "linecol": [
            2520,
            1
          ]
        },
        "linecol": [
          2520,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9101352",
      "linecol": [
        2510,
        7
      ]
    },
    "linecol": [
      2510,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2522,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2522,
                22
              ]
            }
          ],
          "linecol": [
            2522,
            15
          ]
        }
      ],
      "linecol": [
        2522,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(IRESTITIR)) * ( positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO)) * 0 + (1-positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO))) * TAXANET )",
          "linecol": [
            2523,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXACUM",
          "linecol": [
            2523,
            1
          ]
        },
        "linecol": [
          2523,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(IRESTITIR)) * ( positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO)) * 0 + (1-positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO))) * PCAPNET )",
          "linecol": [
            2529,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PCAPCUM",
          "linecol": [
            2529,
            1
          ]
        },
        "linecol": [
          2529,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(IRESTITIR)) * ( positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO)) * 0 + (1-positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO))) * TAXLOYNET )",
          "linecol": [
            2535,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXLOYCUM",
          "linecol": [
            2535,
            1
          ]
        },
        "linecol": [
          2535,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(IRESTITIR)) * ( positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO)) * 0 + (1-positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO))) * HAUTREVNET )",
          "linecol": [
            2541,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HAUTREVCUM",
          "linecol": [
            2541,
            1
          ]
        },
        "linecol": [
          2541,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(IRESTITIR)) * ( positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO)) * 0 + (1-positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO))) * IRNET )",
          "linecol": [
            2547,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRCUM",
          "linecol": [
            2547,
            1
          ]
        },
        "linecol": [
          2547,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRCUM + TAXACUM + PCAPCUM +TAXLOYCUM +HAUTREVCUM",
          "linecol": [
            2553,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTIRCUM",
          "linecol": [
            2553,
            1
          ]
        },
        "linecol": [
          2553,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,-(TOTIRCUM - RECUMIR + NAPCR61))",
          "linecol": [
            2554,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RECUM",
          "linecol": [
            2554,
            1
          ]
        },
        "linecol": [
          2554,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,TOTIRCUM - RECUMIR + NAPCR61)",
          "linecol": [
            2555,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRPSCUM",
          "linecol": [
            2555,
            1
          ]
        },
        "linecol": [
          2555,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "91013521",
      "linecol": [
        2521,
        7
      ]
    },
    "linecol": [
      2521,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2557,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2557,
                22
              ]
            }
          ],
          "linecol": [
            2557,
            15
          ]
        }
      ],
      "linecol": [
        2557,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO)) * IRESTITIR + (1-positif( positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * (1-null(2-V_REGCO)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * positif(SEUIL_61-((VARIR61*TRAITINF20)+(VARIR61BIS*TRAITSUP20))) * null(VARIR12) * null(2-V_REGCO))) * IRESTITIR",
          "linecol": [
            2558,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RECUMIR",
          "linecol": [
            2558,
            1
          ]
        },
        "linecol": [
          2558,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9101354",
      "linecol": [
        2556,
        7
      ]
    },
    "linecol": [
      2556,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2564,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2564,
                22
              ]
            }
          ],
          "linecol": [
            2564,
            15
          ]
        }
      ],
      "linecol": [
        2564,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(IRPSCUM - NONMER + NONREST - RECUM)",
          "linecol": [
            2565,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTIRPS",
          "linecol": [
            2565,
            1
          ]
        },
        "linecol": [
          2565,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9101355",
      "linecol": [
        2563,
        7
      ]
    },
    "linecol": [
      2563,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2568,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2568,
                23
              ]
            }
          ],
          "linecol": [
            2568,
            15
          ]
        }
      ],
      "linecol": [
        2568,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CSG + RDSN + PRS + PCSG + PRDS + PPRS + CVNSALC + PCVN + CDIS + PCDIS + CGLOA + PGLOA + BREGV + PREGV + RSE1N + PRSE1 + RSE2N + PRSE2 + RSE3N + PRSE3 + RSE4N + PRSE4 + RSE5N + PRSE5)",
          "linecol": [
            2569,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSTOT",
          "linecol": [
            2569,
            1
          ]
        },
        "linecol": [
          2569,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si ( ( (V_ANTCR-CSTOT>0) et (V_ANTCR-CSTOT<SEUIL_8) et (CSTOT >= SEUIL_61) ) ou ( (CSTOT-V_ANTCR>0) et (CSTOT-V_ANTCR<SEUIL_61) et (V_IND_TRAIT=4) ) ou ( (CSTOT-V_ANTCR>0) et (CSTOT-V_ANTCR<SEUIL_12) et (V_IND_TRAIT>4) ) ) alors (V_ANTCR + 0) sinon (CSTOT * positif_ou_nul(CSTOT - SEUIL_61)) finsi",
          "linecol": [
            2572,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTCRBIS",
          "linecol": [
            2572,
            1
          ]
        },
        "linecol": [
          2572,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si ( (TOTCRBIS - CSGIM - CRDSIM - PRSPROV - COD8YT - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYN-CSPROVYG-CSPROVYH-CSPROVYP < SEUIL_61) et (CSGIM + CRDSIM + PRSPROV + COD8YT + CDISPROV +COD8YL+CSPROVYD+CSPROVYE+CSPROVYF+CSPROVYG+CSPROVYH+0>0) ) alors (CSGIM + CRDSIM + PRSPROV + COD8YT + CDISPROV +COD8YL+CSPROVYD+CSPROVYE+CSPROVYF+CSPROVYN+CSPROVYG+CSPROVYH+CSPROVYP+0) sinon (TOTCRBIS+0) finsi",
          "linecol": [
            2587,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTCR",
          "linecol": [
            2587,
            1
          ]
        },
        "linecol": [
          2587,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90516",
      "linecol": [
        2567,
        7
      ]
    },
    "linecol": [
      2567,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2594,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2594,
                21
              ]
            }
          ],
          "linecol": [
            2594,
            15
          ]
        }
      ],
      "linecol": [
        2594,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CSNET * INDSEUIL61",
          "linecol": [
            2595,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSNETEMP",
          "linecol": [
            2595,
            1
          ]
        },
        "linecol": [
          2595,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PRSNET * INDSEUIL61",
          "linecol": [
            2596,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PSNETEMP",
          "linecol": [
            2596,
            1
          ]
        },
        "linecol": [
          2596,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDNET * INDSEUIL61",
          "linecol": [
            2597,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDNETEMP",
          "linecol": [
            2597,
            1
          ]
        },
        "linecol": [
          2597,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CVNNET * INDSEUIL61",
          "linecol": [
            2598,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CVNNETEMP",
          "linecol": [
            2598,
            1
          ]
        },
        "linecol": [
          2598,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CDISNET * INDSEUIL61",
          "linecol": [
            2599,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CDISNETEMP",
          "linecol": [
            2599,
            1
          ]
        },
        "linecol": [
          2599,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CGLOANET * INDSEUIL61",
          "linecol": [
            2600,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLONETEMP",
          "linecol": [
            2600,
            1
          ]
        },
        "linecol": [
          2600,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RSE1NET * INDSEUIL61",
          "linecol": [
            2601,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE1NETEMP",
          "linecol": [
            2601,
            1
          ]
        },
        "linecol": [
          2601,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RSE2NET * INDSEUIL61",
          "linecol": [
            2602,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE2NETEMP",
          "linecol": [
            2602,
            1
          ]
        },
        "linecol": [
          2602,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RSE3NET * INDSEUIL61",
          "linecol": [
            2603,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE3NETEMP",
          "linecol": [
            2603,
            1
          ]
        },
        "linecol": [
          2603,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RSE4NET * INDSEUIL61",
          "linecol": [
            2604,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE4NETEMP",
          "linecol": [
            2604,
            1
          ]
        },
        "linecol": [
          2604,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RSE5NET * INDSEUIL61",
          "linecol": [
            2605,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE5NETEMP",
          "linecol": [
            2605,
            1
          ]
        },
        "linecol": [
          2605,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "905162",
      "linecol": [
        2593,
        7
      ]
    },
    "linecol": [
      2593,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2607,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2607,
                21
              ]
            }
          ],
          "linecol": [
            2607,
            15
          ]
        }
      ],
      "linecol": [
        2607,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , CSNET+RDNET+PRSNET+CVNNET+REGVNET+CDISNET+CGLOANET+RSE1NET+RSE2NET+RSE3NET+RSE4NET+RSE5NET )",
          "linecol": [
            2608,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCRP",
          "linecol": [
            2608,
            1
          ]
        },
        "linecol": [
          2608,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPCRP",
          "linecol": [
            2609,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCRTOT",
          "linecol": [
            2609,
            1
          ]
        },
        "linecol": [
          2609,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "905163",
      "linecol": [
        2606,
        7
      ]
    },
    "linecol": [
      2606,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2611,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2611,
                21
              ]
            }
          ],
          "linecol": [
            2611,
            15
          ]
        }
      ],
      "linecol": [
        2611,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(4-V_IND_TRAIT) * max(0 ,  TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL -CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYN-CSPROVYG-CSPROVYH-CSPROVYP-COD8YT) * positif_ou_nul((TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL -CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYN-CSPROVYG-CSPROVYH-CSPROVYP-COD8YT) - SEUIL_61) + null(5-V_IND_TRAIT) * max(0 , (TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL -CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYN-CSPROVYG-CSPROVYH-CSPROVYP-COD8YT) - TOTCRA ) * positif_ou_nul((TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL -CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYN-CSPROVYG-CSPROVYH-CSPROVYP-COD8YT) - TOTCRA - SEUIL_12)",
          "linecol": [
            2612,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCR",
          "linecol": [
            2612,
            1
          ]
        },
        "linecol": [
          2612,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(4-V_IND_TRAIT) * max(0 ,  TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYG-CSPROVYH-COD8YT) * positif_ou_nul((TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYG-CSPROVYH-COD8YT) - SEUIL_61) + null(5-V_IND_TRAIT) * max(0 , (TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYG-CSPROVYH-COD8YT) - TOTCRA ) * positif_ou_nul((TOTCR - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYG-CSPROVYH-COD8YT) - TOTCRA - SEUIL_12)",
          "linecol": [
            2623,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCRBIS",
          "linecol": [
            2623,
            1
          ]
        },
        "linecol": [
          2623,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(4-V_IND_TRAIT) * max(0 ,  CSTOT - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYG-CSPROVYH-COD8YT) + null(5-V_IND_TRAIT) * max(0 , (CSTOT - CSGIM - CRDSIM - PRSPROV - CDISPROV -COD8YL-CSPROVYD-CSPROVYE-CSPROVYF-CSPROVYG-CSPROVYH-COD8YT) )",
          "linecol": [
            2630,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCRINR",
          "linecol": [
            2630,
            1
          ]
        },
        "linecol": [
          2630,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPCS + NAPRD +NAPPS +NAPCVN +NAPCDIS +NAPGLOA +NAPRSE1 +NAPRSE2 +NAPRSE3 +NAPRSE4  +NAPRSE5 + NAPREGV",
          "linecol": [
            2634,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCR61",
          "linecol": [
            2634,
            1
          ]
        },
        "linecol": [
          2634,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9051631",
      "linecol": [
        2610,
        7
      ]
    },
    "linecol": [
      2610,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2636,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2636,
                21
              ]
            }
          ],
          "linecol": [
            2636,
            15
          ]
        }
      ],
      "linecol": [
        2636,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , TOTCRA - TOTCR) * positif_ou_nul(TOTCRA - (TOTCR - SEUIL_8))",
          "linecol": [
            2637,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRDEG",
          "linecol": [
            2637,
            1
          ]
        },
        "linecol": [
          2637,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "905165",
      "linecol": [
        2635,
        7
      ]
    },
    "linecol": [
      2635,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2640,
                15
              ]
            }
          ],
          "linecol": [
            2640,
            15
          ]
        }
      ],
      "linecol": [
        2640,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , TOTCRA - CSTOT * positif_ou_nul(CSTOT - SEUIL_61)) * ( 1-positif(APPLI_OCEANS))",
          "linecol": [
            2642,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_DEG",
          "linecol": [
            2642,
            1
          ]
        },
        "linecol": [
          2642,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr((CS_DEG / TAUX_CONV) * 100) / 100 * ( 1-positif(APPLI_OCEANS))",
          "linecol": [
            2644,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ECS_DEG",
          "linecol": [
            2644,
            1
          ]
        },
        "linecol": [
          2644,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90517",
      "linecol": [
        2639,
        7
      ]
    },
    "linecol": [
      2639,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2647,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2647,
                22
              ]
            }
          ],
          "linecol": [
            2647,
            15
          ]
        }
      ],
      "linecol": [
        2647,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(NDA)) * 9 + positif(NAB) * (1-positif(NAB-1)) * (1-positif(NDA-1)) * positif (NDA) + positif(NAB-1) * (1-positif(NDA-1)) * positif(NDA) * 2 + positif(NAB) * (1-positif(NAB-1)) * positif(NDA-1) * 3 + positif(NAB-1) * positif(NDA-1) * 6",
          "linecol": [
            2648,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ABSPE",
          "linecol": [
            2648,
            1
          ]
        },
        "linecol": [
          2648,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(DAR - RG - TOTALQUO) * positif(DAR)",
          "linecol": [
            2658,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDDG",
          "linecol": [
            2658,
            1
          ]
        },
        "linecol": [
          2658,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1 - EXO1",
          "linecol": [
            2660,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDEXOGEN",
          "linecol": [
            2660,
            1
          ]
        },
        "linecol": [
          2660,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "907411",
      "linecol": [
        2646,
        7
      ]
    },
    "linecol": [
      2646,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2663,
                17
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2663,
                24
              ]
            }
          ],
          "linecol": [
            2663,
            17
          ]
        }
      ],
      "linecol": [
        2663,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "99 * positif(NATIMP) + 0 * null(NATIMP) ",
          "linecol": [
            2664,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CODINI",
          "linecol": [
            2664,
            1
          ]
        },
        "linecol": [
          2664,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "911",
      "linecol": [
        2662,
        7
      ]
    },
    "linecol": [
      2662,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2668,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2668,
                23
              ]
            }
          ],
          "linecol": [
            2668,
            16
          ]
        }
      ],
      "linecol": [
        2668,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(V_IND_TRAIT - 4)) * positif(NAPT) + positif(V_IND_TRAIT - 4) * positif(positif_ou_nul(IRPSCUM-SEUIL_12) *  null(NAPT) + positif(NAPT))",
          "linecol": [
            2669,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAT1",
          "linecol": [
            2669,
            1
          ]
        },
        "linecol": [
          2669,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif (IRANT)) * (1 - positif (NAT1) ) * (1 - positif(IDEGR))+0",
          "linecol": [
            2672,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAT1BIS",
          "linecol": [
            2672,
            1
          ]
        },
        "linecol": [
          2672,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(11 * IND_REST * (1 - positif(IDEGR)) * positif(IRE-IRESTIT)) * (1-positif(V_IND_TRAIT - 4)) + (11*positif(V_IND_TRAIT - 4) * positif(SEUIL_12 - V_IRPSANT) * positif(IRESTIT) * positif(IRE - IRESTIT)) * (1-positif_ou_nul(NAPT))",
          "linecol": [
            2674,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAT11",
          "linecol": [
            2674,
            1
          ]
        },
        "linecol": [
          2674,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(21 * IND_REST * (1 - positif(IDEGR)) * (1 - positif(IRE-IRESTIT))) * (1-positif(V_IND_TRAIT - 4)) + (21*positif(V_IND_TRAIT - 4) * positif(SEUIL_12 - V_IRPSANT) * positif(IRESTIT) * null(IRE - IRESTIT))* (1-positif_ou_nul(NAPT))",
          "linecol": [
            2676,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAT21",
          "linecol": [
            2676,
            1
          ]
        },
        "linecol": [
          2676,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "70 * null(NAPTEMPCX)* (1-positif_ou_nul(NAPT))",
          "linecol": [
            2678,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAT70",
          "linecol": [
            2678,
            1
          ]
        },
        "linecol": [
          2678,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "71 * positif(NAPTEMPCX) * (1-positif_ou_nul(NAPT))",
          "linecol": [
            2679,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAT71",
          "linecol": [
            2679,
            1
          ]
        },
        "linecol": [
          2679,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "81 * positif_ou_nul(V_IRPSANT-SEUIL_12) * positif(IRESTIT) * positif(IRE - IRESTIT)* (1-positif_ou_nul(NAPT))",
          "linecol": [
            2680,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAT81",
          "linecol": [
            2680,
            1
          ]
        },
        "linecol": [
          2680,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "91 * positif_ou_nul(V_IRPSANT-SEUIL_12) * positif(IRESTIT) * null(IRE - IRESTIT)* (1-positif_ou_nul(NAPT))",
          "linecol": [
            2681,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAT91",
          "linecol": [
            2681,
            1
          ]
        },
        "linecol": [
          2681,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "( NAT1 + NAT1BIS + (1-positif(NAT1+NAT1BIS))*(NAT11 + NAT21 + NAT70 + NAT71 + NAT81 + NAT91) )",
          "linecol": [
            2682,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATIMP",
          "linecol": [
            2682,
            1
          ]
        },
        "linecol": [
          2682,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "912",
      "linecol": [
        2667,
        7
      ]
    },
    "linecol": [
      2667,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2685,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2685,
                22
              ]
            }
          ],
          "linecol": [
            2685,
            15
          ]
        }
      ],
      "linecol": [
        2685,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(V_IND_TRAIT - 4) * positif (positif(NAPTOT - NAPTOTAIR - IRANT) * positif_ou_nul(IAMD1 - SEUIL_61) * positif_ou_nul(IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - SEUIL_12) + positif(IRE - IRESTITIR) * positif(IRESTITIR))  + null(V_IND_TRAIT - 5) * positif(positif_ou_nul(IAMD1 - SEUIL_61) + positif_ou_nul(RASAR + NRINET + IMPRET - SEUIL_12))",
          "linecol": [
            2686,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATIMPIR",
          "linecol": [
            2686,
            1
          ]
        },
        "linecol": [
          2686,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9120",
      "linecol": [
        2684,
        7
      ]
    },
    "linecol": [
      2684,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2694,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2694,
                23
              ]
            }
          ],
          "linecol": [
            2694,
            15
          ]
        }
      ],
      "linecol": [
        2694,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (NAPCR > 0) alors (1) sinon (si (NAPCRP + 0 > 0) alors (2) sinon (si (CRDEG+0>0) alors (3) sinon (0) finsi ) finsi ) finsi",
          "linecol": [
            2695,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATCRP",
          "linecol": [
            2695,
            1
          ]
        },
        "linecol": [
          2695,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9125",
      "linecol": [
        2693,
        7
      ]
    },
    "linecol": [
      2693,
      1
    ]
  },
  {
    "name": {
      "type": "symbol",
      "name": "9130",
      "linecol": [
        2707,
        11
      ]
    },
    "linecol": [
      2707,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max (0, (1 * positif(ISFCUM)  + 2 * (1 - positif(ISFCUM)) * (1 - null(ISFNET))  + 3 *  null(ISFNET) * positif(ISFBASE)  + 0 * (null(INDCTX23) * null(5-V_IND_TRAIT) * null(ISFBASE) + positif_ou_nul(ISF_LIMINF + ISF_LIMSUP) * null(4-V_IND_TRAIT))) )",
          "linecol": [
            2709,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NATIMPISF",
          "linecol": [
            2709,
            1
          ]
        },
        "linecol": [
          2709,
          1
        ]
      }
    ],
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2708,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2708,
                23
              ]
            }
          ],
          "linecol": [
            2708,
            15
          ]
        }
      ],
      "linecol": [
        2708,
        1
      ]
    },
    "type": "regle_declaration",
    "qualifiers": [
      {
        "type": "symbol",
        "name": "isf",
        "linecol": [
          2707,
          7
        ]
      }
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2722,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2722,
                23
              ]
            }
          ],
          "linecol": [
            2722,
            15
          ]
        }
      ],
      "linecol": [
        2722,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(min(PLAF_REDGARD,RDGARD1) + min(PLAF_REDGARD,RDGARD2) + min(PLAF_REDGARD,RDGARD3) + min(PLAF_REDGARD,RDGARD4) - max(0,RP)) * positif(somme(i=1..4:RDGARDi))",
          "linecol": [
            2723,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IFG",
          "linecol": [
            2723,
            1
          ]
        },
        "linecol": [
          2723,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "90811",
      "linecol": [
        2721,
        7
      ]
    },
    "linecol": [
      2721,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2727,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2727,
                22
              ]
            }
          ],
          "linecol": [
            2727,
            15
          ]
        }
      ],
      "linecol": [
        2727,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IFG + 9 * (1 - positif(IFG))",
          "linecol": [
            2728,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDGARD",
          "linecol": [
            2728,
            1
          ]
        },
        "linecol": [
          2728,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "913",
      "linecol": [
        2726,
        7
      ]
    },
    "linecol": [
      2726,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2730,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2730,
                23
              ]
            }
          ],
          "linecol": [
            2730,
            16
          ]
        }
      ],
      "linecol": [
        2730,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(somme(i=V,C,1..4:TSNTi + PRNNi) -  somme(i=1..3:GLNi)) ) * abs( somme(i=V,C,1..4:TSNTi + PRNNi) - somme(i=1..3:GLNi) )*(1-positif(APPLI_COLBERT))",
          "linecol": [
            2731,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEFTS",
          "linecol": [
            2731,
            1
          ]
        },
        "linecol": [
          2731,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(DEFTS)) * ( somme(i=V,C,1..4:PRNi) + min(0,somme(i=V,C,1..4:TSNi)))*(1-positif(APPLI_COLBERT))",
          "linecol": [
            2733,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRN",
          "linecol": [
            2733,
            1
          ]
        },
        "linecol": [
          2733,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - positif(DEFTS)) * ( somme(i=V,C,1..4:TPRi) - PRN )*(1-positif(APPLI_COLBERT))",
          "linecol": [
            2735,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSN",
          "linecol": [
            2735,
            1
          ]
        },
        "linecol": [
          2735,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "914",
      "linecol": [
        2729,
        7
      ]
    },
    "linecol": [
      2729,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2737,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2737,
                23
              ]
            }
          ],
          "linecol": [
            2737,
            16
          ]
        }
      ],
      "linecol": [
        2737,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "( TSHALLOV + ALLOV + TSHALLOC + ALLOC + TSHALLO1 + ALLO1 + TSHALLO2 + ALLO2 + TSHALLO3 + ALLO3 + TSHALLO4 + ALLO4 + PALIV + PALIC + PALI1 + PALI2 + PALI3 + PALI4 + PRBRV + PRBRC + PRBR1 + PRBR2 + PRBR3 + PRBR4 + RVB1 + RVB2 + RVB3 + RVB4 + GLDGRATV + GLDGRATC  + REGPRIV + BICREP + RCMABD + RCMTNC + RCMAV + RCMHAD + RCMHAB + PPLIB + RCMLIB + BPV40V + BPVRCM - DPVRCM + BPCOPTV + BPCOSAV + BPCOSAC + PEA + GLD1V + GLD1C + GLD2V + GLD2C + GLD3V + GLD3C + RFORDI - (min(RFDORD,RFDORD1731+0) * positif(ART1731BIS) + RFDORD * (1 - ART1731BIS)) - (RFDHIS * (1 - positif(ART1731BIS) )) - (min(RFDANT,RFDANT1731+0) * positif(ART1731BIS) + RFDANT * (1 - ART1731BIS)) + RFMIC + BNCPRO1AV + BNCPRO1AC + BNCPRO1AP + BACREV + BACREC + BACREP + BAHREV + BAHREC + BAHREP + BAFV + BAFC + BAFP - (BACDEV * (1 - positif(ART1731BIS) )) - (BACDEC * (1 - positif(ART1731BIS) )) - (BACDEP * (1 - positif(ART1731BIS) )) - (BAHDEV * (1 - positif(ART1731BIS) )) - (BAHDEC * (1 - positif(ART1731BIS) )) - (BAHDEP * (1 - positif(ART1731BIS) )) - (min(DAGRI6,DAGRI61731+0) * positif(ART1731BIS) + DAGRI6 * (1 - ART1731BIS)) - (min(DAGRI5,DAGRI51731+0) * positif(ART1731BIS) + DAGRI5 * (1 - ART1731BIS)) - (min(DAGRI4,DAGRI41731+0) * positif(ART1731BIS) + DAGRI4 * (1 - ART1731BIS)) - (min(DAGRI3,DAGRI31731+0) * positif(ART1731BIS) + DAGRI3 * (1 - ART1731BIS)) - (min(DAGRI2,DAGRI21731+0) * positif(ART1731BIS) + DAGRI2 * (1 - ART1731BIS)) - (min(DAGRI1,DAGRI11731+0) * positif(ART1731BIS) + DAGRI1 * (1 - ART1731BIS)) + BICNOV + BICNOC + BICNOP + BIHNOV + BIHNOC + BIHNOP - (BICDNV * (1 - positif(ART1731BIS) )) - (BICDNC * (1 - positif(ART1731BIS) )) - (BICDNP * (1 - positif(ART1731BIS) )) - (BIHDNV * (1 - positif(ART1731BIS) )) - (BIHDNC * (1 - positif(ART1731BIS) )) - (BIHDNP * (1 - positif(ART1731BIS) )) + BICREV + BICREC + BICHREV + BICHREC + BICHREP - (min(BICDEV,BICDEV1731+0) * positif(ART1731BIS) + BICDEV * (1 - ART1731BIS)) - (min(BICDEC,BICDEC1731+0) * positif(ART1731BIS) + BICDEC * (1 - ART1731BIS)) - (min(BICDEP,BICDEP1731+0) * positif(ART1731BIS) + BICDEP * (1 - ART1731BIS)) - (min(BICHDEV,BICHDEV1731+0) * positif(ART1731BIS) + BICHDEV * (1 - ART1731BIS)) - (min(BICHDEC,BICHDEC1731+0) * positif(ART1731BIS) + BICHDEC * (1 - ART1731BIS)) - (min(BICHDEP,BICHDEP1731+0) * positif(ART1731BIS) + BICHDEP * (1 - ART1731BIS)) + BNCREV + BNCREC + BNCREP + BNHREV + BNHREC + BNHREP - (BNCDEV * (1 - positif(ART1731BIS) )) - (BNCDEC * (1 - positif(ART1731BIS) )) - (BNCDEP * (1 - positif(ART1731BIS) )) - (BNHDEV * (1 - positif(ART1731BIS) )) - (BNHDEC * (1 - positif(ART1731BIS) )) - (BNHDEP * (1 - positif(ART1731BIS) )) + ANOCEP - (min(DNOCEP,DNOCEP1731+0) * positif(ART1731BIS) + DNOCEP * (1 - ART1731BIS)) + BAFPVV + BAFPVC + BAFPVP + BAF1AV + BAF1AC + BAF1AP + MIBVENV + MIBVENC + MIBVENP + MIBPRESV + MIBPRESC + MIBPRESP + MIBPVV + MIBPVC + MIBPVP - BICPMVCTV - BICPMVCTC - BICPMVCTP + MIBNPVENV + MIBNPVENC + MIBNPVENP + MIBNPPRESV + MIBNPPRESC + MIBNPPRESP + MIBNPPVV + MIBNPPVC + MIBNPPVP - MIBNPDCT - (min(DEFBIC6,DEFBIC61731+0) * positif(ART1731BIS) + DEFBIC6 * (1 - ART1731BIS)) - (min(DEFBIC5,DEFBIC51731+0) * positif(ART1731BIS) + DEFBIC5 * (1 - ART1731BIS)) - (min(DEFBIC4,DEFBIC41731+0) * positif(ART1731BIS) + DEFBIC4 * (1 - ART1731BIS)) - (min(DEFBIC3,DEFBIC31731+0) * positif(ART1731BIS) + DEFBIC3 * (1 - ART1731BIS)) - (min(DEFBIC2,DEFBIC21731+0) * positif(ART1731BIS) + DEFBIC2 * (1 - ART1731BIS)) - (min(DEFBIC1,DEFBIC11731+0) * positif(ART1731BIS) + DEFBIC1 * (1 - ART1731BIS)) + BNCPROV + BNCPROC + BNCPROP + BNCPROPVV + BNCPROPVC + BNCPROPVP - BNCPMVCTV + BNCNPV + BNCNPC + BNCNPP + BNCNPPVV + BNCNPPVC + BNCNPPVP + PVINVE - BNCNPDCT + BA1AV + BA1AC + BA1AP + BI1AV + BI1AC + BI1AP + MIB1AV + MIB1AC + MIB1AP - MIBDEV - MIBDEC - MIBDEP + BI2AV + BI2AC + BI2AP + MIBNP1AV + MIBNP1AC + MIBNP1AP - MIBNPDEV - MIBNPDEC - MIBNPDEP - BNCPRODEV - BNCPRODEC - BNCPRODEP + BN1AV + BN1AC + BN1AP + BNCNP1AV + BNCNP1AC + BNCNP1AP - BNCNPDEV - BNCNPDEC - BNCNPDEP) * (1-positif(APPLI_COLBERT+APPLI_OCEANS))",
          "linecol": [
            2738,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REVDECTAX",
          "linecol": [
            2738,
            1
          ]
        },
        "linecol": [
          2738,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "( FEXV + FEXC + FEXP + BAEXV + BAEXC + BAEXP + BAHEXV + BAHEXC + BAHEXP + MIBEXV + MIBEXC + MIBEXP + BICEXV + BICEXC + BICEXP + BIHEXV + BIHEXC + BIHEXP + MIBNPEXV + MIBNPEXC + MIBNPEXP + BICNPEXV + BICNPEXC + BICNPEXP + BICNPHEXV + BICNPHEXC + BICNPHEXP + BNCPROEXV + BNCPROEXC + BNCPROEXP + BNCEXV + BNCEXC + BNCEXP + BNHEXV + BNHEXC + BNHEXP) * (1-positif(APPLI_COLBERT+APPLI_OCEANS))",
          "linecol": [
            2941,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REVDECEXO",
          "linecol": [
            2941,
            1
          ]
        },
        "linecol": [
          2941,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "916",
      "linecol": [
        2736,
        7
      ]
    },
    "linecol": [
      2736,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2980,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2980,
                23
              ]
            }
          ],
          "linecol": [
            2980,
            15
          ]
        }
      ],
      "linecol": [
        2980,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BAPERPV + BANOCGAV) * (1-positif(APPLI_OCEANS))",
          "linecol": [
            2981,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AGRIV",
          "linecol": [
            2981,
            1
          ]
        },
        "linecol": [
          2981,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BAPERPC + BANOCGAC) * (1-positif(APPLI_OCEANS))",
          "linecol": [
            2982,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AGRIC",
          "linecol": [
            2982,
            1
          ]
        },
        "linecol": [
          2982,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BAPERPP + BANOCGAP) * (1-positif(APPLI_OCEANS))",
          "linecol": [
            2983,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AGRIP",
          "linecol": [
            2983,
            1
          ]
        },
        "linecol": [
          2983,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9165",
      "linecol": [
        2979,
        7
      ]
    },
    "linecol": [
      2979,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                2986,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                2986,
                23
              ]
            }
          ],
          "linecol": [
            2986,
            15
          ]
        }
      ],
      "linecol": [
        2986,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: XBAi)",
          "linecol": [
            2988,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBA",
          "linecol": [
            2988,
            1
          ]
        },
        "linecol": [
          2988,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: XBIPi + XBINPi)",
          "linecol": [
            2990,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBI",
          "linecol": [
            2990,
            1
          ]
        },
        "linecol": [
          2990,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: XBIPi)",
          "linecol": [
            2991,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBICPRO",
          "linecol": [
            2991,
            1
          ]
        },
        "linecol": [
          2991,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: XBINPi)",
          "linecol": [
            2992,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBICNPRO",
          "linecol": [
            2992,
            1
          ]
        },
        "linecol": [
          2992,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: MIBEXi + MIBNPEXi)",
          "linecol": [
            2994,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBIMN",
          "linecol": [
            2994,
            1
          ]
        },
        "linecol": [
          2994,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: MIBEXi)",
          "linecol": [
            2995,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBICMPRO",
          "linecol": [
            2995,
            1
          ]
        },
        "linecol": [
          2995,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: MIBNPEXi)",
          "linecol": [
            2996,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBICMNPRO",
          "linecol": [
            2996,
            1
          ]
        },
        "linecol": [
          2996,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: BNCPROEXi)",
          "linecol": [
            2998,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBNCMPRO",
          "linecol": [
            2998,
            1
          ]
        },
        "linecol": [
          2998,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: XSPENPi)",
          "linecol": [
            2999,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBNCMNPRO",
          "linecol": [
            2999,
            1
          ]
        },
        "linecol": [
          2999,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: XBNi)",
          "linecol": [
            3000,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBNCPRO",
          "linecol": [
            3000,
            1
          ]
        },
        "linecol": [
          3000,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,P: XBNNPi)",
          "linecol": [
            3001,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XBNCNPRO",
          "linecol": [
            3001,
            1
          ]
        },
        "linecol": [
          3001,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C: XTSNNi)",
          "linecol": [
            3003,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XTSNN",
          "linecol": [
            3003,
            1
          ]
        },
        "linecol": [
          3003,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "DEFBA1 + DEFBA2 + DEFBA3 + DEFBA4 + DEFBA5 + DEFBA6",
          "linecol": [
            3004,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEFBA",
          "linecol": [
            3004,
            1
          ]
        },
        "linecol": [
          3004,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=V,C,P : AGRIi)",
          "linecol": [
            3005,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AGRI",
          "linecol": [
            3005,
            1
          ]
        },
        "linecol": [
          3005,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=V,C,P : BIPERPi)",
          "linecol": [
            3006,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PECHEM",
          "linecol": [
            3006,
            1
          ]
        },
        "linecol": [
          3006,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=V,C,P : BNCCREAi)",
          "linecol": [
            3007,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "JEUNART",
          "linecol": [
            3007,
            1
          ]
        },
        "linecol": [
          3007,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "917",
      "linecol": [
        2985,
        7
      ]
    },
    "linecol": [
      2985,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3010,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3010,
                22
              ]
            }
          ],
          "linecol": [
            3010,
            15
          ]
        }
      ],
      "linecol": [
        3010,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RIVL1 + RIVL2 + RIVL3 + RIVL4 + RIVL5 + RIVL6",
          "linecol": [
            3011,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPINV",
          "linecol": [
            3011,
            1
          ]
        },
        "linecol": [
          3011,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RIVL1RES + RIVL2RES + RIVL3RES + RIVL4RES + RIVL5RES",
          "linecol": [
            3013,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPINVRES",
          "linecol": [
            3013,
            1
          ]
        },
        "linecol": [
          3013,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "REPINV + REPINVRES",
          "linecol": [
            3014,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPINVTOT",
          "linecol": [
            3014,
            1
          ]
        },
        "linecol": [
          3014,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "918",
      "linecol": [
        3009,
        7
      ]
    },
    "linecol": [
      3009,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3018,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3018,
                22
              ]
            }
          ],
          "linecol": [
            3018,
            15
          ]
        }
      ],
      "linecol": [
        3018,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MIBNETVF + MIBNETPF + MIB_NETCT",
          "linecol": [
            3036,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MIBNETPTOT",
          "linecol": [
            3036,
            1
          ]
        },
        "linecol": [
          3036,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "MIBNETNPVF + MIBNETNPPF + MIB_NETNPCT",
          "linecol": [
            3038,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MIBNETNPTOT",
          "linecol": [
            3038,
            1
          ]
        },
        "linecol": [
          3038,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      3019,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      3019,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      3019,
                      14
                    ]
                  }
                ],
                "linecol": [
                  3019,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  3019,
                  6
                ]
              },
              "linecol": [
                3019,
                6
              ]
            }
          ],
          "linecol": [
            3019,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "(     (MIBDEi - MIB1Ai ) * positif(MIBDEi - MIB1Ai) - (MIBNP1Ai - MIBNPDEi) * positif(MIBNP1Ai - MIBNPDEi) ) *( positif( (MIBDEi - MIB1Ai ) * positif(MIBDEi - MIB1Ai) - (MIBNP1Ai - MIBNPDEi) * positif(MIBNP1Ai - MIBNPDEi) ) )",
            "linecol": [
              3020,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "MIBDREPi",
            "linecol": [
              3020,
              1
            ]
          },
          "linecol": [
            3020,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          3019,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      3027,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      3027,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      3027,
                      14
                    ]
                  }
                ],
                "linecol": [
                  3027,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  3027,
                  6
                ]
              },
              "linecol": [
                3027,
                6
              ]
            }
          ],
          "linecol": [
            3027,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "(  (MIBNPDEi -MIBNP1Ai )*positif(MIBNPDEi - MIBNP1Ai) - (MIB1Ai-MIBDEi)*positif(MIB1Ai-MIBDEi) ) *(positif( (MIBNPDEi -MIBNP1Ai )*positif(MIBNPDEi - MIBNP1Ai) - (MIB1Ai-MIBDEi)*positif(MIB1Ai-MIBDEi) ) )",
            "linecol": [
              3028,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "MIBDREPNPi",
            "linecol": [
              3028,
              1
            ]
          },
          "linecol": [
            3028,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          3027,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      3039,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      3039,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      3039,
                      14
                    ]
                  }
                ],
                "linecol": [
                  3039,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  3039,
                  6
                ]
              },
              "linecol": [
                3039,
                6
              ]
            }
          ],
          "linecol": [
            3039,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "(     (BNCPRODEi - BNCPRO1Ai) * positif(BNCPRODEi - BNCPRO1Ai) -  (BNCNP1Ai - BNCNPDEi)   * positif (BNCNP1Ai - BNCNPDEi) ) *( positif((BNCPRODEi - BNCPRO1Ai) * positif(BNCPRODEi - BNCPRO1Ai) -(BNCNP1Ai - BNCNPDEi)   * positif (BNCNP1Ai - BNCNPDEi) ) )",
            "linecol": [
              3040,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPEDREPi",
            "linecol": [
              3040,
              1
            ]
          },
          "linecol": [
            3040,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          3039,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      3049,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      3049,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      3049,
                      14
                    ]
                  }
                ],
                "linecol": [
                  3049,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  3049,
                  6
                ]
              },
              "linecol": [
                3049,
                6
              ]
            }
          ],
          "linecol": [
            3049,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "( (BNCNPDEi -BNCNP1Ai )*positif(BNCNPDEi - BNCNP1Ai) -(BNCPRO1Ai-BNCPRODEi)*positif(BNCPRO1Ai-BNCPRODEi) ) *( positif( (BNCNPDEi -BNCNP1Ai )*positif(BNCNPDEi - BNCNP1Ai) -(BNCPRO1Ai-BNCPRODEi)*positif(BNCPRO1Ai-BNCPRODEi) ) )",
            "linecol": [
              3050,
              14
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPEDREPNPi",
            "linecol": [
              3050,
              1
            ]
          },
          "linecol": [
            3050,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          3049,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "920",
      "linecol": [
        3017,
        7
      ]
    },
    "linecol": [
      3017,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3058,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3058,
                22
              ]
            }
          ],
          "linecol": [
            3058,
            15
          ]
        }
      ],
      "linecol": [
        3058,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(RBG2 + TOTALQUO , V_8ZT)",
          "linecol": [
            3060,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "R8ZT",
          "linecol": [
            3060,
            1
          ]
        },
        "linecol": [
          3060,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "930",
      "linecol": [
        3057,
        7
      ]
    },
    "linecol": [
      3057,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3063,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3063,
                22
              ]
            }
          ],
          "linecol": [
            3063,
            15
          ]
        }
      ],
      "linecol": [
        3063,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(TXMOYIMPNUM/TXMOYIMPDEN*100)/100",
          "linecol": [
            3065,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMPC",
          "linecol": [
            3065,
            1
          ]
        },
        "linecol": [
          3065,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0, positif(IRPSCUM + IRANT - NONMER) * positif((4500/100) - TXMOYIMPC) * TXMOYIMPC ) ",
          "linecol": [
            3067,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMP",
          "linecol": [
            3067,
            1
          ]
        },
        "linecol": [
          3067,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "931",
      "linecol": [
        3062,
        7
      ]
    },
    "linecol": [
      3062,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3075,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3075,
                22
              ]
            }
          ],
          "linecol": [
            3075,
            15
          ]
        }
      ],
      "linecol": [
        3075,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IRCUM+IRANT+TAXACUM+PCAPCUM+TAXLOYCUM+HAUTREVCUM-RECUM-PIR-PTAXA-PPCAP-PTAXLOY-PHAUTREV) * (max(0,(IRCUM+IRANT+TAXACUM+PCAPCUM+TAXLOYCUM+HAUTREVCUM-RECUM-PIR-PTAXA-PPCAP-PTAXLOY-PHAUTREV) * positif_ou_nul((IRNET2+TAXASSUR+IPCAPTAXT+TAXLOY+IHAUTREVT)-SEUIL_12) + (IRNET2 + TAXASSUR +IPCAPTAXT+TAXLOY+IHAUTREVT+ IRANT) * positif(SEUIL_12 - (IRNET2+TAXASSUR+IPCAPTAXT+TAXLOY+IHAUTREVT))  + arr(RCMLIB * TX_PREVLIB / 100) + COD2CK - IPREP-IPPRICORSE )) * positif_ou_nul(IAMD1 - SEUIL_61) * 100",
          "linecol": [
            3077,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMPNUM",
          "linecol": [
            3077,
            1
          ]
        },
        "linecol": [
          3077,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "933",
      "linecol": [
        3074,
        7
      ]
    },
    "linecol": [
      3074,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3087,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3087,
                22
              ]
            }
          ],
          "linecol": [
            3087,
            15
          ]
        }
      ],
      "linecol": [
        3087,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,TXMOYIMPDEN1 - TXMOYIMPDEN2 + TXMOYIMPDEN3 + TXMOYIMPDEN4 + TXMOYIMPDEN5 + TXMOYIMPDEN6)",
          "linecol": [
            3089,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMPDEN",
          "linecol": [
            3089,
            1
          ]
        },
        "linecol": [
          3089,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "936",
      "linecol": [
        3086,
        7
      ]
    },
    "linecol": [
      3086,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3093,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3093,
                22
              ]
            }
          ],
          "linecol": [
            3093,
            15
          ]
        }
      ],
      "linecol": [
        3093,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=V,C,1,2,3,4: TSNTi) * (1-positif(abs(DRBG))) + somme (i=V,C,1,2,3,4: PALIi + PRBRi + PENINi) * (1-positif(abs(DRBG))) + RVTOT + T2RV + max(0,TRCMABD + DRTNC + RCMNAB + RAVC + RTCAR + RCMPRIVM - max(0,RCMFR - DFRCMN) * (1-positif(abs(DRBG))) - RCM_I * positif(REPRCM - RCM_I) - REPRCM * positif_ou_nul(RCM_I - REPRCM)) * (1-positif(abs(DRBG))) + RMFN * (1-positif(abs(DRBG))) + (RFCG + DRCF) * (1-positif(abs(DRBG))) + PLOCNETF + max(0,NPLOCNETF) + (MIBNETPTOT + SPENETPF ) * (1-positif(abs(DRBG))) + (SPENETNPF + NOCEPIMP) * null(DALNP) * (1-positif(abs(DRBG))) + max(0,BAHQTOT) + min(0,BAHQTOT) * (1-positif(SHBA - SEUIL_IMPDEFBA)) + somme(i=V,C,P: BIPTAi+ BIHTAi + BNNSi + BNNAi)  * (1-positif(abs(DRBG))) + BICNPF * (1-positif(abs(DRBG))) + REPSOF * (1-positif(abs(DRBG))) - (((min(DABNCNP6,DABNCNP61731+0) * positif(ART1731BIS) + DABNCNP6 * (1 - ART1731BIS))*positif(BNCDF6) + min((min(DABNCNP6,DABNCNP61731+0) * positif(ART1731BIS) + DABNCNP6 * (1 - ART1731BIS)),NOCEPIMP+SPENETNPF) *null(BNCDF6)*positif(min(DABNCNP6,DABNCNP61731+0) * positif(ART1731BIS) + DABNCNP6 * (1 - ART1731BIS))) +(min(DABNCNP5,DABNCNP51731+0) * positif(ART1731BIS) + DABNCNP5 * (1 - ART1731BIS)) +(min(DABNCNP4,DABNCNP41731+0) * positif(ART1731BIS) + DABNCNP4 * (1 - ART1731BIS)) +(min(DABNCNP3,DABNCNP31731+0) * positif(ART1731BIS) + DABNCNP3 * (1 - ART1731BIS)) +(min(DABNCNP2,DABNCNP21731+0) * positif(ART1731BIS) + DABNCNP2 * (1 - ART1731BIS)) +(min(DABNCNP1,DABNCNP11731+0) * positif(ART1731BIS) + DABNCNP1 * (1 - ART1731BIS))) * null(BNCDF1 + BNCDF2 +BNCDF3 +BNCDF4 +BNCDF5 +BNCDF6) * (1-positif(abs(DRBG))) + (BPVRCM + PVTAXSB) * (1 - positif( IPVLOC ))* (1-positif(present(TAX1649)+present(RE168))) ",
          "linecol": [
            3094,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMPDEN1",
          "linecol": [
            3094,
            1
          ]
        },
        "linecol": [
          3094,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=0,1,2,3,4,5: (DEFAAi * (1 - positif(ART1731BIS) ))) * (1-positif(RNIDF)) + RDCSG + DPA + APERPV + APERPC + APERPP + DRFRP  * positif(RRFI)",
          "linecol": [
            3121,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMPDEN2",
          "linecol": [
            3121,
            1
          ]
        },
        "linecol": [
          3121,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "( ( somme(i=V,C,P: BN1Ai + BIH1i + BI1Ai + BI2Ai + BA1Ai ) + MIB_1AF + BA1AF + SPEPV + PVINVE+PVINCE+PVINPE + INVENTV + INVENTC + INVENTP + (BPTPVT + BPTPSJ)* (1 - positif( IPVLOC ))* (1-positif(present(TAX1649)+present(RE168))) + (BTP2 + BPTP4    + BTP40 + BTP18)* (1 - positif( IPVLOC ))* (1-positif(present(TAX1649)+present(RE168))) + RCM2FA ) * (1 - positif(IPVLOC)))",
          "linecol": [
            3126,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMPDEN3",
          "linecol": [
            3126,
            1
          ]
        },
        "linecol": [
          3126,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "2PRBV + 2PRBC + 2PRB1 + 2PRB2 + 2PRB3 + 2PRB4 + CODRVG + max(0,BAQTOT) * (1-positif(DEFBA6+DEFBA5+DEFBA4+DEFBA3+DEFBA2+DEFBA1)) + somme(i=V,C,1..4:PEBFi) ",
          "linecol": [
            3135,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMPDEN4",
          "linecol": [
            3135,
            1
          ]
        },
        "linecol": [
          3135,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RCMLIB",
          "linecol": [
            3138,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMPDEN5",
          "linecol": [
            3138,
            1
          ]
        },
        "linecol": [
          3138,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CESSASSV+CESSASSC + BPCAPTAXV+BPCAPTAXC",
          "linecol": [
            3139,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXMOYIMPDEN6",
          "linecol": [
            3139,
            1
          ]
        },
        "linecol": [
          3139,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "937",
      "linecol": [
        3092,
        7
      ]
    },
    "linecol": [
      3092,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3141,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3141,
                23
              ]
            }
          ],
          "linecol": [
            3141,
            16
          ]
        }
      ],
      "linecol": [
        3141,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IAD11 + ITP + REI + AVFISCOPTER",
          "linecol": [
            3142,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GGIRSEUL",
          "linecol": [
            3142,
            1
          ]
        },
        "linecol": [
          3142,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "940",
      "linecol": [
        3140,
        7
      ]
    },
    "linecol": [
      3140,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3144,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3144,
                23
              ]
            }
          ],
          "linecol": [
            3144,
            16
          ]
        }
      ],
      "linecol": [
        3144,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IDOM11 + ITP + REI + PIR",
          "linecol": [
            3145,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GGIDRS",
          "linecol": [
            3145,
            1
          ]
        },
        "linecol": [
          3145,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "941",
      "linecol": [
        3143,
        7
      ]
    },
    "linecol": [
      3143,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3147,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3147,
                23
              ]
            }
          ],
          "linecol": [
            3147,
            16
          ]
        }
      ],
      "linecol": [
        3147,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IAD11",
          "linecol": [
            3148,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GGIAIMP",
          "linecol": [
            3148,
            1
          ]
        },
        "linecol": [
          3148,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "942",
      "linecol": [
        3146,
        7
      ]
    },
    "linecol": [
      3146,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3150,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3150,
                23
              ]
            }
          ],
          "linecol": [
            3150,
            16
          ]
        }
      ],
      "linecol": [
        3150,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si ( positif(RE168+TAX1649+0) = 0) alors (si    ( V_REGCO = 2 ) alors (GGIAIMP - 0 + EPAV + CICA + CIGE ) sinon (max(0,GGIAIMP - CIRCMAVFT + EPAV + CICA + CIGE )) finsi) sinon (max(0,GGIAIMP - CIRCMAVFT)) finsi",
          "linecol": [
            3151,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GGINET",
          "linecol": [
            3151,
            1
          ]
        },
        "linecol": [
          3151,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "943",
      "linecol": [
        3149,
        7
      ]
    },
    "linecol": [
      3149,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3161,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3161,
                23
              ]
            }
          ],
          "linecol": [
            3161,
            16
          ]
        }
      ],
      "linecol": [
        3161,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( (10676 + (2850 * (NBPT - 1) * 2 ) ) * (1-null(V_REGCO - 5)) * (1-null(V_REGCO - 6)) * (1-null(V_REGCO - 7)) + (12632 + (3135 * ( min(NBPT , 1.5) - 1) * 2) + (2850 * ( max(0 , NBPT - 1.5)) * 2) ) * null(V_REGCO - 5) + (13209 + (3278 * ( min(NBPT , 1.5) - 1) * 2) + (2850 * ( max(0 , NBPT - 1.5)) * 2) ) * positif( null(V_REGCO - 6) + null(V_REGCO - 7)) )",
          "linecol": [
            3162,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SEUILCIRIRF",
          "linecol": [
            3162,
            1
          ]
        },
        "linecol": [
          3162,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null( (1-null( IND_TDR)) +  positif_ou_nul( SEUILCIRIRF - REVKIRE ) - 2) + 2 * (1 - null( (1- null( IND_TDR)) +  positif_ou_nul( SEUILCIRIRF - REVKIRE ) - 2))",
          "linecol": [
            3173,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRIRF",
          "linecol": [
            3173,
            1
          ]
        },
        "linecol": [
          3173,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "944",
      "linecol": [
        3160,
        7
      ]
    },
    "linecol": [
      3160,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3177,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3177,
                23
              ]
            }
          ],
          "linecol": [
            3177,
            16
          ]
        }
      ],
      "linecol": [
        3177,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( (13956 + (3726 * (NBPT - 1) * 2 ) ) * (1-null(V_REGCO - 5)) * (1-null(V_REGCO - 6)) * (1-null(V_REGCO - 7)) + (15268 + (4098 * ( min(NBPT , 1.5) - 1) * 2) + (3726 * ( max(0 , NBPT - 1.5)) * 2) ) * null(V_REGCO - 5) + (15994 + (4285 * ( min(NBPT , 1.5) - 1) * 2) + (3726 * ( max(0 , NBPT - 1.5)) * 2) ) * positif( null(V_REGCO - 6) + null(V_REGCO - 7)) )",
          "linecol": [
            3178,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SEUILCIIMSI",
          "linecol": [
            3178,
            1
          ]
        },
        "linecol": [
          3178,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null( (1-null( IND_TDR)) +  positif( SEUILCIIMSI - REVKIRE ) - 2) + 2 * (1 - null( (1-null( IND_TDR)) +  positif( SEUILCIIMSI - REVKIRE ) - 2))",
          "linecol": [
            3189,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIIMSI",
          "linecol": [
            3189,
            1
          ]
        },
        "linecol": [
          3189,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "945",
      "linecol": [
        3176,
        7
      ]
    },
    "linecol": [
      3176,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3193,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3193,
                23
              ]
            }
          ],
          "linecol": [
            3193,
            16
          ]
        }
      ],
      "linecol": [
        3193,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(min(0,MIB_NETNPCT) * positif(MIBNPDCT) * positif(DLMRN1) + min(0,SPENETNPCT) * positif(BNCNPDCT) * positif(BNCDF1)) * (-1)",
          "linecol": [
            3194,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPCT",
          "linecol": [
            3194,
            1
          ]
        },
        "linecol": [
          3194,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "946",
      "linecol": [
        3192,
        7
      ]
    },
    "linecol": [
      3192,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3198,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3198,
                22
              ]
            }
          ],
          "linecol": [
            3198,
            15
          ]
        }
      ],
      "linecol": [
        3198,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPENBH1 + PPENBH2 + PPENBH3 + PPENBH4",
          "linecol": [
            3200,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPENHPTOT",
          "linecol": [
            3200,
            1
          ]
        },
        "linecol": [
          3200,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(PPEPRIMEV + PPEPRIMETTEV) * ( 1 - V_CNR)",
          "linecol": [
            3202,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEPRIMEVT",
          "linecol": [
            3202,
            1
          ]
        },
        "linecol": [
          3202,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(PPEPRIMEC + PPEPRIMETTEC) * ( 1 - V_CNR)",
          "linecol": [
            3203,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEPRIMECT",
          "linecol": [
            3203,
            1
          ]
        },
        "linecol": [
          3203,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(somme( i=1,2,3,4,U,N:PPEPRIMEi)) * ( 1 - V_CNR)",
          "linecol": [
            3204,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEPRIMEPT",
          "linecol": [
            3204,
            1
          ]
        },
        "linecol": [
          3204,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_SALAVDEFV",
          "linecol": [
            3205,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPESALVTOT",
          "linecol": [
            3205,
            1
          ]
        },
        "linecol": [
          3205,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_SALAVDEFC",
          "linecol": [
            3206,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPESALCTOT",
          "linecol": [
            3206,
            1
          ]
        },
        "linecol": [
          3206,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4",
          "linecol": [
            3207,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPESALPTOT",
          "linecol": [
            3207,
            1
          ]
        },
        "linecol": [
          3207,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_RPROV * positif(PPETOTX + positif(PPESALVTOT) + present(PPEACV) + present(PPENJV))",
          "linecol": [
            3209,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPERPROV",
          "linecol": [
            3209,
            1
          ]
        },
        "linecol": [
          3209,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_RPROC * positif(PPETOTX + positif(PPESALCTOT) + present(PPEACC) + present(PPENJC))",
          "linecol": [
            3214,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPERPROC",
          "linecol": [
            3214,
            1
          ]
        },
        "linecol": [
          3214,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_RPROP * positif(PPETOTX + positif(PPESALPTOT) + present(PPEACP) + present(PPENJP))",
          "linecol": [
            3218,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPERPROP",
          "linecol": [
            3218,
            1
          ]
        },
        "linecol": [
          3218,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "950",
      "linecol": [
        3197,
        7
      ]
    },
    "linecol": [
      3197,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3223,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3223,
                22
              ]
            }
          ],
          "linecol": [
            3223,
            15
          ]
        }
      ],
      "linecol": [
        3223,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TSHALLOV + TSHALLOC + TSHALLO1 + TSHALLO2 + TSHALLO3 + TSHALLO4 + ALLOV + ALLOC + ALLO1 + ALLO2 + ALLO3 + ALLO4 + SALEXTV + SALEXTC + SALEXT1 + SALEXT2 + SALEXT3 + SALEXT4 + TSASSUV + TSASSUC + XETRANV + XETRANC + ELURASV + ELURASC + IPMOND + PRBRV + PRBRC + PRBR1 + PRBR2 + PRBR3 + PRBR4 + COD1AH + COD1BH + COD1CH + COD1DH + COD1EH + COD1FH + PCAPTAXV + PCAPTAXC + PALIV + PALIC + PALI1 + PALI2 + PALI3 + PALI4 + RVB1 + RVB2 + RVB3 + RVB4 + GLD1V + GLD2V + GLD3V + GLD1C + GLD2C + GLD3C + GLDGRATV + GLDGRATC + PENINV + PENINC + PENIN1 + PENIN2 + PENIN3 + PENIN4 + RCMABD + RCMTNC + RCMAV + RCMHAD + REGPRIV + RCMHAB + PPLIB + RCMIMPAT + RCMLIB + COD2FA + BPV40V + BPVRCM + BPCOPTV + BPCOSAV + BPCOSAC + PEA + GAINABDET + BPV18V + ABIMPPV + BPV18C + BPCOPTC + BPV40C + BPVSJ + BPVSK + GAINPEA + PVSURSI + PVIMPOS + PVIMMO + ABDETPLUS + PVEXOSEC + PVREPORT + PVTITRESOC + COD3SG + COD3SL + COD3UA + RFMIC + RFORDI + FEXV + FEXC + FEXP + BAFPVV + BAFPVC + BAFPVP + BAF1AV + BAF1AC + BAF1AP + BAEXV + BAEXC + BAEXP + BACREV + BACREC + BACREP + BA1AV + BA1AC + BA1AP + BAHEXV + BAHEXC + BAHEXP + BAHREV + BAHREC + BAHREP + BAFV + BAFC + BAFP + BAFORESTV + BAFORESTC + BAFORESTP + BAPERPV + BANOCGAV + BAPERPC + BANOCGAC + BAPERPP + BANOCGAP + MIBEXV + MIBEXC + MIBEXP + MIBVENV + MIBVENC + MIBVENP + MIBPRESV + MIBPRESC + MIBPRESP + MIBPVV + MIBPVC + MIBPVP + MIB1AV + MIB1AC + MIB1AP + BICEXV + BICEXC + BICEXP + BICNOV + BICNOC + BICNOP + BI1AV + BI1AC + BI1AP + BIHEXV + BIHEXC + BIHEXP + BIHNOV + BIHNOC + BIHNOP + MIBNPEXV + MIBNPEXC + MIBNPEXP + MIBNPVENV + MIBNPVENC + MIBNPVENP + MIBNPPRESV + MIBNPPRESC + MIBNPPRESP + MIBNPPVV + MIBNPPVC + MIBNPPVP + MIBNP1AV + MIBNP1AC + MIBNP1AP + BICNPEXV + BICNPEXC + BICNPEXP + BICREV + BICREC + BICREP + BI2AV + BI2AC + BI2AP + BICNPHEXV + BICNPHEXC + BICNPHEXP + BICHREV + BICHREC + BICHREP + LOCNPCGAV + LOCNPV + LOCNPCGAC + LOCNPC + LOCNPCGAPAC + LOCNPPAC + LOCPROCGAV + LOCPROV + LOCPROCGAC + LOCPROC + LOCPROCGAP + LOCPROP + MIBMEUV + MIBMEUC + MIBMEUP + MIBGITEV + MIBGITEC + MIBGITEP + LOCGITCV + LOCGITHCV + LOCGITCC + LOCGITHCC + LOCGITCP + LOCGITHCP + LOCGITV + LOCGITC + LOCGITP + AUTOBICVV + AUTOBICPV + AUTOBICVC + AUTOBICPC + AUTOBICVP + AUTOBICPP + BIPERPV + BIPERPC + BIPERPP + BNCPROEXV + BNCPROEXC + BNCPROC + BNCPROP + BNCPROPVV + BNCPROPVC + BNCPROPVP + BNCPRO1AV + BNCPRO1AC + BNCPRO1AP + BNCEXV + BNCEXC + BNCEXP + BNCREV + BNCREC + BNCREP + BN1AV + BN1AC + BN1AP + BNHEXV + BNHEXC + BNHEXP + BNHREV + BNHREC + BNHREP + BNCCRV + BNCCRC + BNCCRP + BNCNPV + BNCNPC + BNCNPP + BNCNPPVV + BNCNPPVC + BNCNPPVP + BNCNP1AV + BNCNP1AC + BNCNP1AP + ANOCEP + PVINVE + BNCCRFV + ANOVEP + PVINCE + BNCCRFC + ANOPEP + PVINPE + BNCCRFP + BNCAABV + BNCAABC + BNCAABP + BNCNPREXAAV + BNCNPREXV + BNCNPREXAAC + BNCNPREXC + BNCNPREXAAP + BNCNPREXP + BNCPROEXP + BNCPROV + XHONOAAV + XHONOV + XHONOAAC + XHONOC + XHONOAAP + XHONOP + CESSASSV + CESSASSC + INVENTV + INVENTC + INVENTP + AUTOBNCV + AUTOBNCC + AUTOBNCP + XSPENPV + XSPENPC + XSPENPP + REPSOF ",
          "linecol": [
            3226,
            4
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RBGTH",
          "linecol": [
            3225,
            1
          ]
        },
        "linecol": [
          3225,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "960",
      "linecol": [
        3222,
        7
      ]
    },
    "linecol": [
      3222,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3535,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3535,
                22
              ]
            }
          ],
          "linecol": [
            3535,
            15
          ]
        }
      ],
      "linecol": [
        3535,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "XETSNNV + XETSNNC",
          "linecol": [
            3537,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XETRAN",
          "linecol": [
            3537,
            1
          ]
        },
        "linecol": [
          3537,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "968",
      "linecol": [
        3534,
        7
      ]
    },
    "linecol": [
      3534,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3540,
                16
              ]
            }
          ],
          "linecol": [
            3540,
            16
          ]
        }
      ],
      "linecol": [
        3540,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TL_IR *positif(APPLI_OCEANS)",
          "linecol": [
            3542,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TLIR",
          "linecol": [
            3542,
            1
          ]
        },
        "linecol": [
          3542,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TL_TAXAGA *positif(APPLI_OCEANS)",
          "linecol": [
            3543,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TLTAXAGA",
          "linecol": [
            3543,
            1
          ]
        },
        "linecol": [
          3543,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "970",
      "linecol": [
        3539,
        7
      ]
    },
    "linecol": [
      3539,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3546,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3546,
                22
              ]
            }
          ],
          "linecol": [
            3546,
            15
          ]
        }
      ],
      "linecol": [
        3546,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      3548,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      3548,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      3548,
                      14
                    ]
                  }
                ],
                "linecol": [
                  3548,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  3548,
                  6
                ]
              },
              "linecol": [
                3548,
                6
              ]
            }
          ],
          "linecol": [
            3548,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "positif (present( ANOCEP ) + present( BA1Ai ) + present( BACDEi ) + present( BACREi ) + present( BAEXi ) + present( BAF1Ai ) + present( BAFi ) + present( BAFPVi ) + present( BAHDEi ) + present( BAHEXi ) + present( BAHREi ) + present( BAPERPi ) + present( BI1Ai ) + present( BI2Ai ) + present( BICDEi ) + present( BICDNi ) + present( BICEXi ) + present( BICHDEi ) + present( BICNOi ) + present( BIHDNi ) + present( BIHEXi ) + present( BIHNOi ) + present( BIPERPi ) + present( BN1Ai ) + present( BNCDEi ) + present( BNCEXi ) + present( BNCPRO1Ai ) + present( BNCPROi ) + present( BNCPMVCTV ) + present( BNCPRODEi ) + present( BNCPROEXi ) + present( BNCPROPVi ) + present( BNCREi ) + present( BNHDEi ) + present( BNHEXi ) + present( BNHREi ) + present( DAGRI6 ) + present( DAGRI5 ) + present( DAGRI4 ) + present( DAGRI3 ) + present( DAGRI2 ) + present( DAGRI1 ) + present( DEFBIC1 ) + present( DEFBIC2 ) + present( DEFBIC3 ) + present( DEFBIC4 ) + present( DEFBIC5 ) + present( DEFBIC6 ) + present( DNOCEP ) + present( FEXi ) + present( MIB1Ai ) + present( BICPMVCTV) + present( BICPMVCTC) + present( BICPMVCTP) + present( MIBDEi ) + present( MIBEXi ) + present( MIBPRESi ) + present( MIBPVi ) + present( MIBVENi ) + present( PVINVE ) + present( RCSi )   + 0 ) ",
            "linecol": [
              3549,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "INDRNSi",
            "linecol": [
              3549,
              1
            ]
          },
          "linecol": [
            3549,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          3548,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "980",
      "linecol": [
        3545,
        7
      ]
    },
    "linecol": [
      3545,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3610,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3610,
                22
              ]
            }
          ],
          "linecol": [
            3610,
            15
          ]
        }
      ],
      "linecol": [
        3610,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "LOYELEV",
          "linecol": [
            3611,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXLOY",
          "linecol": [
            3611,
            1
          ]
        },
        "linecol": [
          3611,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9800",
      "linecol": [
        3609,
        7
      ]
    },
    "linecol": [
      3609,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3613,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3613,
                22
              ]
            }
          ],
          "linecol": [
            3613,
            15
          ]
        }
      ],
      "linecol": [
        3613,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPCRP) *  null(IND61PS - 2) * (positif(PPETOTX) * null(IRE) * (  positif(IRESTITIR-PPETOTX) * min(NAPCRP,max(0,IRESTITIR - PPETOTX)) + null(IRESTITIR - PPETOTX) * min(NAPCRP,PPETOTX) + positif(PPETOTX - IRESTITIR) * min(NAPCRP,IRESTITIR)) + positif(PPETOTX)* positif(IRE) * (  positif(IRESTITIR - IRE - PPETOTX) * min(max(0,NAPCRP-COMPENSACI),PPETOTX) + null(IRESTITIR -IRE - PPETOTX) * min(max(0,NAPCRP-COMPENSACI),PPETOTX) + positif(PPETOTX + IRE - IRESTITIR) * (positif_ou_nul(PPETOTX - IRESTITIR)) * min(max(0,NAPCRP-COMPENSACI),IRESTITIR) + positif(IRESTITIR - PPETOTX) * min(max(0,NAPCRP-COMPENSACI),PPETOTX)) ) * positif(20 - V_NOTRAIT)  + positif(null(V_NOTRAIT - 26) + null(V_NOTRAIT - 36) + null(V_NOTRAIT - 46) + null(V_NOTRAIT - 56) + null(V_NOTRAIT - 66)) * max(0 , min(0 , TOTIRPSANT - V_ANTCR) - min(0 , TOTIRPS - NAPCR61 + NONMER) - COMPENSACI)",
          "linecol": [
            3614,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "COMPENSPPE",
          "linecol": [
            3614,
            1
          ]
        },
        "linecol": [
          3614,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9801",
      "linecol": [
        3612,
        7
      ]
    },
    "linecol": [
      3612,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3631,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3631,
                22
              ]
            }
          ],
          "linecol": [
            3631,
            15
          ]
        }
      ],
      "linecol": [
        3631,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(NAPCRP) *  null(IND61PS - 2) * (positif(IRE) * null(PPETOTX) * (  positif(IRESTITIR-IRE) * min(NAPCRP,max(0,IRESTITIR - IRE)) + null(IRESTITIR - IRE) * min(NAPCRP,IRE) + positif(IRE - IRESTITIR) * min(NAPCRP,IRESTITIR)) + positif(PPETOTX)* positif(IRE) * (  positif(IRESTITIR - IRE - PPETOTX) * min(NAPCRP,(IRESTITIR - IRE - PPETOTX)) + null(IRESTITIR - IRE - PPETOTX) * min(NAPCRP,IRE) + positif(PPETOTX + IRE - IRESTITIR) * (positif_ou_nul(PPETOTX - IRESTITIR)) * 0 + positif(IRESTITIR - PPETOTX) * min(NAPCRP,(IRESTITIR-PPETOTX))) ) * positif(20 - V_NOTRAIT) + positif(null(V_NOTRAIT - 26) + null(V_NOTRAIT - 36) + null(V_NOTRAIT - 46) + null(V_NOTRAIT - 56) + null(V_NOTRAIT - 66)) * max(0 , min(min(0 , TOTIRPSANT - V_ANTCR) - min(0 , TOTIRPS - NAPCR61 + NONMER) , RECUMIR - PPEREST2A))",
          "linecol": [
            3633,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "COMPENSACI",
          "linecol": [
            3633,
            1
          ]
        },
        "linecol": [
          3633,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(20 - V_NOTRAIT) * (null(IND61PS - 2) * positif(SEUIL_12 - (CSTOT +IRNET+TAXANET+TAXLOYNET+PCAPNET+HAUTREVNET-IRESTITIR)) * max(0,NAPCRP - IRESTITIR)) + positif(null(V_NOTRAIT - 26) + null(V_NOTRAIT - 36) + null(V_NOTRAIT - 46) + null(V_NOTRAIT - 56) + null(V_NOTRAIT - 66)) * max(0 , min(NONMER , NAPCR61 - V_ANTCR))",
          "linecol": [
            3648,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "COMPENSANV",
          "linecol": [
            3648,
            1
          ]
        },
        "linecol": [
          3648,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - INDCTX) * max(0 , max(0 , TOTIRPSANT - V_ANTCR) - max(0 , TOTIRPS - NAPCR61 + NONMER))",
          "linecol": [
            3653,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "COMPENSIR",
          "linecol": [
            3653,
            1
          ]
        },
        "linecol": [
          3653,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - INDCTX) * max(0 , V_ANTCR - NAPCR61) * positif(NAPT)",
          "linecol": [
            3655,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "COMPENSPS",
          "linecol": [
            3655,
            1
          ]
        },
        "linecol": [
          3655,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "980111",
      "linecol": [
        3630,
        7
      ]
    },
    "linecol": [
      3630,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                3658,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                3658,
                22
              ]
            }
          ],
          "linecol": [
            3658,
            15
          ]
        }
      ],
      "linecol": [
        3658,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRNIN_INR +TAXABASE +PCAPBASE +LOYBASE +CHRBASE",
          "linecol": [
            3659,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "B1507INR",
          "linecol": [
            3659,
            1
          ]
        },
        "linecol": [
          3659,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRNIN * positif(NMAJ1) + TAXASSUR * positif(NMAJTAXA1) + IPCAPTAXT * positif(NMAJPCAP1) + TAXLOY * positif(NMAJLOY1) + IHAUTREVT * positif(NMAJCHR1)",
          "linecol": [
            3660,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "B1507MAJO1",
          "linecol": [
            3660,
            1
          ]
        },
        "linecol": [
          3660,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRNIN * positif(NMAJ3) + TAXASSUR * positif(NMAJTAXA3) + IPCAPTAXT * positif(NMAJPCAP3) + TAXLOY * positif(NMAJLOY3) + IHAUTREVT * positif(NMAJCHR3)",
          "linecol": [
            3666,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "B1507MAJO3",
          "linecol": [
            3666,
            1
          ]
        },
        "linecol": [
          3666,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRNIN * positif(NMAJ4) + TAXASSUR * positif(NMAJTAXA4) + IPCAPTAXT * positif(NMAJPCAP4) + TAXLOY * positif(NMAJLOY4) + IHAUTREVT * positif(NMAJCHR4)",
          "linecol": [
            3672,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "B1507MAJO4",
          "linecol": [
            3672,
            1
          ]
        },
        "linecol": [
          3672,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "9820",
      "linecol": [
        3657,
        7
      ]
    },
    "linecol": [
      3657,
      1
    ]
  }
]
