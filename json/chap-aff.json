[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            22,
            15
          ]
        }
      ],
      "linecol": [
        22,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "0",
          "linecol": [
            24,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CONST0",
          "linecol": [
            24,
            1
          ]
        },
        "linecol": [
          24,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "1",
          "linecol": [
            25,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CONST1",
          "linecol": [
            25,
            1
          ]
        },
        "linecol": [
          25,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "2",
          "linecol": [
            26,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CONST2",
          "linecol": [
            26,
            1
          ]
        },
        "linecol": [
          26,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "3",
          "linecol": [
            27,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CONST3",
          "linecol": [
            27,
            1
          ]
        },
        "linecol": [
          27,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "4",
          "linecol": [
            28,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CONST4",
          "linecol": [
            28,
            1
          ]
        },
        "linecol": [
          28,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "10",
          "linecol": [
            29,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CONST10",
          "linecol": [
            29,
            1
          ]
        },
        "linecol": [
          29,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "20",
          "linecol": [
            30,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CONST20",
          "linecol": [
            30,
            1
          ]
        },
        "linecol": [
          30,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "40",
          "linecol": [
            31,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CONST40",
          "linecol": [
            31,
            1
          ]
        },
        "linecol": [
          31,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111011,
      "linecol": [
        21,
        7
      ]
    },
    "linecol": [
      21,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            34,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            34,
            22
          ]
        }
      ],
      "linecol": [
        34,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(IPVLOC)) * (1 - positif(RE168 + TAX1649)) * IND_REV",
          "linecol": [
            36,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0",
          "linecol": [
            36,
            1
          ]
        },
        "linecol": [
          36,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(RE168 + TAX1649)) * (1 - positif(ANNUL2042)) * IND_REV",
          "linecol": [
            38,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG01",
          "linecol": [
            38,
            1
          ]
        },
        "linecol": [
          38,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(RE168 + TAX1649))",
          "linecol": [
            40,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1",
          "linecol": [
            40,
            1
          ]
        },
        "linecol": [
          40,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(ANNUL2042))",
          "linecol": [
            42,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2",
          "linecol": [
            42,
            1
          ]
        },
        "linecol": [
          42,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(CMAJ + 0) + positif_ou_nul(MAJTX1 - 40) + positif_ou_nul(MAJTX4 - 40) + positif_ou_nul(MAJTXPCAP1 - 40) + positif_ou_nul(MAJTXPCAP4 - 40) + positif_ou_nul(MAJTXLOY1 - 40) + positif_ou_nul(MAJTXLOY4 - 40) + positif_ou_nul(MAJTXCHR1 - 40) + positif_ou_nul(MAJTXCHR4 - 40) + positif_ou_nul(MAJTXC1 - 40) + positif_ou_nul(MAJTXC4 - 40) + positif_ou_nul(MAJTXCVN1 - 40) + positif_ou_nul(MAJTXCVN4 - 40) + positif_ou_nul(MAJTXCDIS1 - 40) + positif_ou_nul(MAJTXCDIS4 - 40) + positif_ou_nul(MAJTXGLO1 - 40) + positif_ou_nul(MAJTXGLO4 - 40) + positif_ou_nul(MAJTXRSE11 - 40) + positif_ou_nul(MAJTXRSE14 - 40) + positif_ou_nul(MAJTXRSE51 - 40) + positif_ou_nul(MAJTXRSE54 - 40) + positif_ou_nul(MAJTXRSE21 - 40) + positif_ou_nul(MAJTXRSE24 - 40) + positif_ou_nul(MAJTXRSE31 - 40) + positif_ou_nul(MAJTXRSE34 - 40) + positif_ou_nul(MAJTXRSE41 - 40) + positif_ou_nul(MAJTXRSE44 - 40) + positif_ou_nul(MAJTXTAXA4 - 40))",
          "linecol": [
            44,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3",
          "linecol": [
            44,
            1
          ]
        },
        "linecol": [
          44,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1110,
      "linecol": [
        33,
        7
      ]
    },
    "linecol": [
      33,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            61,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            61,
            23
          ]
        }
      ],
      "linecol": [
        61,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(INDV * INDC * INDP) * (1 - ART1731BIS) * LIG0 * LIG2",
          "linecol": [
            64,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0010",
          "linecol": [
            64,
            1
          ]
        },
        "linecol": [
          64,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDV * (1 - INDC) * (1 - INDP)) * (1 - ART1731BIS) * LIG0 * LIG2",
          "linecol": [
            66,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0020",
          "linecol": [
            66,
            1
          ]
        },
        "linecol": [
          66,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDC * (1 - INDV) * (1 - INDP)) * (1 - ART1731BIS) * LIG0 * LIG2",
          "linecol": [
            68,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0030",
          "linecol": [
            68,
            1
          ]
        },
        "linecol": [
          68,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDP * (1 - INDV) * (1 - INDC)) * (1 - ART1731BIS) * LIG0 * LIG2",
          "linecol": [
            70,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0040",
          "linecol": [
            70,
            1
          ]
        },
        "linecol": [
          70,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDV * INDC * (1 - INDP)) * (1 - ART1731BIS) * LIG0 * LIG2",
          "linecol": [
            72,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0050",
          "linecol": [
            72,
            1
          ]
        },
        "linecol": [
          72,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDV * INDP * (1 - INDC)) * (1 - ART1731BIS) * LIG0 * LIG2",
          "linecol": [
            74,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0060",
          "linecol": [
            74,
            1
          ]
        },
        "linecol": [
          74,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDC * INDP * (1 - INDV)) * (1 - ART1731BIS) * LIG0 * LIG2",
          "linecol": [
            76,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0070",
          "linecol": [
            76,
            1
          ]
        },
        "linecol": [
          76,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDV * INDC * INDP) * ART1731BIS * LIG0 * LIG2",
          "linecol": [
            78,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG10YT",
          "linecol": [
            78,
            1
          ]
        },
        "linecol": [
          78,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDV * (1 - INDC) * (1 - INDP)) * ART1731BIS * LIG0 * LIG2",
          "linecol": [
            80,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG20YT",
          "linecol": [
            80,
            1
          ]
        },
        "linecol": [
          80,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDC * (1 - INDV) * (1 - INDP)) * ART1731BIS * LIG0 * LIG2",
          "linecol": [
            82,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG30YT",
          "linecol": [
            82,
            1
          ]
        },
        "linecol": [
          82,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDP * (1 - INDV) * (1 - INDC)) * ART1731BIS * LIG0 * LIG2",
          "linecol": [
            84,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG40YT",
          "linecol": [
            84,
            1
          ]
        },
        "linecol": [
          84,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDV * INDC * (1 - INDP)) * ART1731BIS * LIG0 * LIG2",
          "linecol": [
            86,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG50YT",
          "linecol": [
            86,
            1
          ]
        },
        "linecol": [
          86,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDV * INDP * (1 - INDC)) * ART1731BIS * LIG0 * LIG2",
          "linecol": [
            88,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG60YT",
          "linecol": [
            88,
            1
          ]
        },
        "linecol": [
          88,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(INDC * INDP * (1 - INDV)) * ART1731BIS * LIG0 * LIG2",
          "linecol": [
            90,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG70YT",
          "linecol": [
            90,
            1
          ]
        },
        "linecol": [
          90,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1110010,
      "linecol": [
        60,
        7
      ]
    },
    "linecol": [
      60,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            93,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            93,
            23
          ]
        }
      ],
      "linecol": [
        93,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(TSBNV + PRBV + BPCOSAV + GLDGRATV + positif(F10AV * null(TSBNV + PRBV + BPCOSAV + GLDGRATV)))",
          "linecol": [
            94,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG10V",
          "linecol": [
            94,
            1
          ]
        },
        "linecol": [
          94,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(TSBNC + PRBC + BPCOSAC + GLDGRATC + positif(F10AC * null(TSBNC + PRBC + BPCOSAC + GLDGRATC)))",
          "linecol": [
            95,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG10C",
          "linecol": [
            95,
            1
          ]
        },
        "linecol": [
          95,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(somme(i=1..4:TSBNi + PRBi) + positif(F10AP * null(somme(i=1..4:TSBNi + PRBi))))",
          "linecol": [
            96,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG10P",
          "linecol": [
            96,
            1
          ]
        },
        "linecol": [
          96,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIG10V + LIG10C + LIG10P)",
          "linecol": [
            97,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG10",
          "linecol": [
            97,
            1
          ]
        },
        "linecol": [
          97,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11110,
      "linecol": [
        92,
        7
      ]
    },
    "linecol": [
      92,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            99,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            99,
            23
          ]
        }
      ],
      "linecol": [
        99,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(T2RV) * (1 - positif(IPVLOC))",
          "linecol": [
            101,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1100",
          "linecol": [
            101,
            1
          ]
        },
        "linecol": [
          101,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RVTOT + LIG1100 + LIG910 + BRCMQ + RCMFR + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + RCMLIB + LIG29 + LIG30 + RFQ + 2REVF + 3REVF + LIG1130 + VLHAB + DFANT + ESFP + RE168 + TAX1649 + R1649 + PREREV) * (1 - positif(LIG0010 + LIG0020 + LIG0030 + LIG0040 + LIG0050 + LIG0060 + LIG0070)) * (1 - ART1731BIS)",
          "linecol": [
            103,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG899",
          "linecol": [
            103,
            1
          ]
        },
        "linecol": [
          103,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RVTOT + LIG1100 + LIG910 + BRCMQ + RCMFR + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + RCMLIB + LIG29 + LIG30 + RFQ + 2REVF + 3REVF + LIG1130 + VLHAB + DFANT + ESFP + RE168 + TAX1649 + R1649 + PREREV) * positif(LIG0010 + LIG0020 + LIG0030 + LIG0040 + LIG0050 + LIG0060 + LIG0070) * (1 - ART1731BIS)",
          "linecol": [
            108,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG900",
          "linecol": [
            108,
            1
          ]
        },
        "linecol": [
          108,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RVTOT + LIG1100 + LIG910 + BRCMQ + RCMFR + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + RCMLIB + LIG29 + LIG30 + RFQ + 2REVF + 3REVF + LIG1130 + VLHAB + DFANT + ESFP + RE168 + TAX1649 + R1649 + PREREV) * (1 - positif(LIG10YT + LIG20YT + LIG30YT + LIG40YT + LIG50YT + LIG60YT + LIG70YT)) * ART1731BIS",
          "linecol": [
            113,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG899YT",
          "linecol": [
            113,
            1
          ]
        },
        "linecol": [
          113,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RVTOT + LIG1100 + LIG910 + BRCMQ + RCMFR + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + RCMLIB + LIG29 + LIG30 + RFQ + 2REVF + 3REVF + LIG1130 + VLHAB + DFANT + ESFP + RE168 + TAX1649 + R1649 + PREREV) * positif(LIG10YT + LIG20YT + LIG30YT + LIG40YT + LIG50YT + LIG60YT + LIG70YT) * ART1731BIS",
          "linecol": [
            118,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG900YT",
          "linecol": [
            118,
            1
          ]
        },
        "linecol": [
          118,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11000,
      "linecol": [
        98,
        7
      ]
    },
    "linecol": [
      98,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            124,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            124,
            23
          ]
        }
      ],
      "linecol": [
        124,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_FORVA) * (1 - positif_ou_nul(BAFV)) * LIG0",
          "linecol": [
            126,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG4401",
          "linecol": [
            126,
            1
          ]
        },
        "linecol": [
          126,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_FORCA) * (1 - positif_ou_nul(BAFC)) * LIG0",
          "linecol": [
            128,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG4402",
          "linecol": [
            128,
            1
          ]
        },
        "linecol": [
          128,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_FORPA) * (1 - positif_ou_nul(BAFP)) * LIG0",
          "linecol": [
            130,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG4403",
          "linecol": [
            130,
            1
          ]
        },
        "linecol": [
          130,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111440,
      "linecol": [
        123,
        7
      ]
    },
    "linecol": [
      123,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            133,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            133,
            23
          ]
        }
      ],
      "linecol": [
        133,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(BACDEV)+ present(BACREV) + present(BAHDEV) +present(BAHREV) + present(BACDEC) +present(BACREC) + present(BAHDEC)+ present(BAHREC) + present(BACDEP)+ present(BACREP) + present(BAHDEP)+ present(BAHREP) + present(4BAHREV) + present(4BAHREC) + present(4BAHREP) + present(4BACREV) + present(4BACREC) + present(4BACREP) + present(BAFV) + present(BAFC) + present(BAFP) + present(BAFORESTV) + present(BAFORESTC) + present(BAFORESTP) + present(BAFPVV) + present(BAFPVC) + present(BAFPVP)) * (1 - positif(IPVLOC)) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            135,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG13",
          "linecol": [
            135,
            1
          ]
        },
        "linecol": [
          135,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11113,
      "linecol": [
        132,
        7
      ]
    },
    "linecol": [
      132,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            150,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            150,
            23
          ]
        }
      ],
      "linecol": [
        150,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(4BACREV + 4BAHREV)",
          "linecol": [
            152,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "4BAQLV",
          "linecol": [
            152,
            1
          ]
        },
        "linecol": [
          152,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(4BACREC + 4BAHREC)",
          "linecol": [
            153,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "4BAQLC",
          "linecol": [
            153,
            1
          ]
        },
        "linecol": [
          153,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(4BACREP + 4BAHREP)",
          "linecol": [
            154,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "4BAQLP",
          "linecol": [
            154,
            1
          ]
        },
        "linecol": [
          154,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111135,
      "linecol": [
        149,
        7
      ]
    },
    "linecol": [
      149,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            157,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            157,
            23
          ]
        }
      ],
      "linecol": [
        157,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(BAFV) + present(BAHREV) + present(BAHDEV) + present(BACREV) + present(BACDEV)+ present(BAFPVV)+present(BAFORESTV))",
          "linecol": [
            159,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG134V",
          "linecol": [
            159,
            1
          ]
        },
        "linecol": [
          159,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(BAFC) + present(BAHREC) + present(BAHDEC) + present(BACREC) + present(BACDEC)+ present(BAFPVC)+present(BAFORESTC))",
          "linecol": [
            160,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG134C",
          "linecol": [
            160,
            1
          ]
        },
        "linecol": [
          160,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(BAFP) + present(BAHREP) + present(BAHDEP) + present(BACREP) + present(BACDEP)+ present(BAFPVP)+present(BAFORESTP))",
          "linecol": [
            161,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG134P",
          "linecol": [
            161,
            1
          ]
        },
        "linecol": [
          161,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIG134V + LIG134C + LIG134P+present(DAGRI6)+present(DAGRI5)+present(DAGRI4)+present(DAGRI3)+present(DAGRI2)+present(DAGRI1)) * (1 - positif(IPVLOC)) * (1 - positif(abs(DEFIBA))) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            162,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG134",
          "linecol": [
            162,
            1
          ]
        },
        "linecol": [
          162,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(DBAIP) * positif(DAGRI1 + DAGRI2 + DAGRI3 + DAGRI4 + DAGRI5 + DAGRI6) * (1 - positif(IPVLOC)) * positif(abs(abs(BAHQTOT)+abs(BAQTOT)-(DAGRI6+DAGRI5+DAGRI4+DAGRI3+DAGRI2+DAGRI1))) * LIG1",
          "linecol": [
            165,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDBAIP",
          "linecol": [
            165,
            1
          ]
        },
        "linecol": [
          165,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111134,
      "linecol": [
        156,
        7
      ]
    },
    "linecol": [
      156,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            168,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            168,
            22
          ]
        }
      ],
      "linecol": [
        168,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(4BAQV + 4BAQC + 4BAQP) * (1 - positif(IPVLOC)) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            169,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG136",
          "linecol": [
            169,
            1
          ]
        },
        "linecol": [
          169,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111136,
      "linecol": [
        167,
        7
      ]
    },
    "linecol": [
      167,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            172,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            172,
            22
          ]
        }
      ],
      "linecol": [
        172,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "LIG_BICPV + LIG_BICPC + LIG_BICPP",
          "linecol": [
            181,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_BICP",
          "linecol": [
            181,
            1
          ]
        },
        "linecol": [
          181,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( present ( DEFBIC6 ) + present ( DEFBIC5 ) + present ( DEFBIC4 ) + present ( DEFBIC3 ) + present ( DEFBIC2 ) + present ( DEFBIC1 ) ) * LIG0 * LIG2",
          "linecol": [
            183,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_DEFNPI",
          "linecol": [
            183,
            1
          ]
        },
        "linecol": [
          183,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(MIBMEUV) + present(MIBMEUC) + present(MIBMEUP) + present(MIBGITEV) + present(MIBGITEC) + present(MIBGITEP) + present(LOCGITV) + present(LOCGITC) + present(LOCGITP)) * LIG0 * LIG2",
          "linecol": [
            193,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMLOC",
          "linecol": [
            193,
            1
          ]
        },
        "linecol": [
          193,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MLOCABV + MLOCABC + MLOCABP) * LIG0  * LIG2",
          "linecol": [
            198,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMLOCAB",
          "linecol": [
            198,
            1
          ]
        },
        "linecol": [
          198,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BICPMVCTV + BICPMVCTC + BICPMVCTP) * (1 - null(4 - V_REGCO)) * LIG0",
          "linecol": [
            200,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMIBMV",
          "linecol": [
            200,
            1
          ]
        },
        "linecol": [
          200,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCPMVCTV + BNCPMVCTC + BNCPMVCTP) * (1 - null(4 - V_REGCO)) * LIG0",
          "linecol": [
            202,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCMV",
          "linecol": [
            202,
            1
          ]
        },
        "linecol": [
          202,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LOCPROCGAV + LOCPROCGAC + LOCPROCGAP + LOCDEFPROCGAV + LOCDEFPROCGAC + LOCDEFPROCGAP + LOCPROV + LOCPROC + LOCPROP + LOCDEFPROV +LOCDEFPROC + LOCDEFPROP) * (1 - null(4 - V_REGCO)) * LIG0",
          "linecol": [
            204,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC",
          "linecol": [
            204,
            1
          ]
        },
        "linecol": [
          204,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LOCNPCGAV + LOCNPCGAC + LOCNPCGAPAC + LOCDEFNPCGAV + LOCDEFNPCGAC + LOCDEFNPCGAPAC + LOCNPV + LOCNPC + LOCNPPAC + LOCDEFNPV + LOCDEFNPC + LOCDEFNPPAC + LOCGITCV + LOCGITCC + LOCGITCP + LOCGITHCV + LOCGITHCC + LOCGITHCP) *  (1-null(4 - V_REGCO)) * LIG0",
          "linecol": [
            208,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNPLOC",
          "linecol": [
            208,
            1
          ]
        },
        "linecol": [
          208,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LOCNPCGAV + LOCNPCGAC + LOCNPCGAPAC + LOCDEFNPCGAV + LOCDEFNPCGAC + LOCDEFNPCGAPAC + LOCNPV + LOCNPC + LOCNPPAC + LOCDEFNPV + LOCDEFNPC + LOCDEFNPPAC + LNPRODEF10 + LNPRODEF9 + LNPRODEF8 + LNPRODEF7 + LNPRODEF6 + LNPRODEF5 + LNPRODEF4 + LNPRODEF3 + LNPRODEF2 + LNPRODEF1 + LOCGITCV + LOCGITCC + LOCGITCP + LOCGITHCV + LOCGITHCC + LOCGITHCP) *  (1-null(4 - V_REGCO)) * LIG0",
          "linecol": [
            213,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNPLOCF",
          "linecol": [
            213,
            1
          ]
        },
        "linecol": [
          213,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(TOTDEFLOCNP) *  (1-null(4 - V_REGCO))",
          "linecol": [
            220,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFNPLOC",
          "linecol": [
            220,
            1
          ]
        },
        "linecol": [
          220,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOCNPF) * positif(DEFRILOC) * (1 - PREM8_11)",
          "linecol": [
            222,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDFLOCNPF",
          "linecol": [
            222,
            1
          ]
        },
        "linecol": [
          222,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGNPLOC + LIGDEFNPLOC + LIGNPLOCF)",
          "linecol": [
            224,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCNSEUL",
          "linecol": [
            224,
            1
          ]
        },
        "linecol": [
          224,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "1 - positif(LIGNPLOC + LIGDEFNPLOC + LIGNPLOCF)",
          "linecol": [
            226,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCSEUL",
          "linecol": [
            226,
            1
          ]
        },
        "linecol": [
          226,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      173,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      173,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      173,
                      14
                    ]
                  }
                ],
                "linecol": [
                  173,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  173,
                  6
                ]
              },
              "linecol": [
                173,
                6
              ]
            }
          ],
          "linecol": [
            173,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "( present ( BICNOi ) + present (BICDNi ) + present (BIHNOi ) + present (BIHDNi ) ) * (1 - positif(ANNUL2042)) * LIG0",
            "linecol": [
              174,
              20
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "LIG_BICPi",
            "linecol": [
              174,
              1
            ]
          },
          "linecol": [
            174,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          173,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111590,
      "linecol": [
        171,
        7
      ]
    },
    "linecol": [
      171,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            229,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            229,
            21
          ]
        }
      ],
      "linecol": [
        229,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif( present (BICDEC) + present (BICDEP) + present (BICDEV) + present (BICHDEC) + present (BICHDEP) + present (BICHDEV) + present (BICHREC) + present (BICHREP) + present (BICHREV) + present (BICREC) + present (BICREP) + present (BICREV) + present ( DEFBIC6 ) + present ( DEFBIC5 ) + present ( DEFBIC4 ) + present ( DEFBIC3 ) + present ( DEFBIC2 ) + present ( DEFBIC1 ) ) * LIG0 * LIG2",
          "linecol": [
            232,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_BICNPF",
          "linecol": [
            231,
            1
          ]
        },
        "linecol": [
          231,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1115901,
      "linecol": [
        228,
        7
      ]
    },
    "linecol": [
      228,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            254,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            254,
            21
          ]
        }
      ],
      "linecol": [
        254,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (present(BNCV) + present(BNCC) + present(BNCP))",
          "linecol": [
            255,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_BNCNF",
          "linecol": [
            255,
            1
          ]
        },
        "linecol": [
          255,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(present(NOCEPV) + present(NOCEPC) + present(NOCEPP)) * LIG0 * LIG2",
          "linecol": [
            257,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNOCEP",
          "linecol": [
            257,
            1
          ]
        },
        "linecol": [
          257,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(present(NOCEPIMPV) + present(NOCEPIMPC) + present(NOCEPIMPP)) * LIG0 * LIG2",
          "linecol": [
            259,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNOCEPIMP",
          "linecol": [
            259,
            1
          ]
        },
        "linecol": [
          259,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(DABNCNP6) + present(DABNCNP5) + present(DABNCNP4) + present(DABNCNP3) + present(DABNCNP2) + present(DABNCNP1)) * LIG0 * LIG2",
          "linecol": [
            261,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDAB",
          "linecol": [
            261,
            1
          ]
        },
        "linecol": [
          261,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(DIDABNCNP) * positif(LIGDAB) * LIG0 * LIG2",
          "linecol": [
            265,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDIDAB",
          "linecol": [
            265,
            1
          ]
        },
        "linecol": [
          265,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFBNCNPF) * positif(DEFRIBNC) * null(PREM8_11)",
          "linecol": [
            268,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBNCNPF",
          "linecol": [
            268,
            1
          ]
        },
        "linecol": [
          268,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif (DEFBANIF) * positif(DEFRIBASUP + DEFRIGLOBSUP) * (1-PREM8_11)",
          "linecol": [
            269,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBANIF",
          "linecol": [
            269,
            1
          ]
        },
        "linecol": [
          269,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif (DEFBICNPF) * DEFRIBIC * (1-PREM8_11)",
          "linecol": [
            270,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBICNPF",
          "linecol": [
            270,
            1
          ]
        },
        "linecol": [
          270,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif (DEFRFNONI) * DEFRIRF * (1-PREM8_11)",
          "linecol": [
            271,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFRFNONI",
          "linecol": [
            271,
            1
          ]
        },
        "linecol": [
          271,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "( positif (LIGNOCEP) * (1 - positif(LIG3250) + null(BNCIF)) + (null(BNCIF) * positif(LIGBNCDF)) + null(BNCIF) * (1 - positif_ou_nul(NOCEPIMP+SPENETNPF-DABNCNP6 -DABNCNP5 -DABNCNP4 -DABNCNP3 -DABNCNP2 -DABNCNP1)) + positif (LIGDEFBNCNPF) + positif( present (DABNCNP6) + present (DABNCNP5) + present (DABNCNP4) + present (DABNCNP3) + present (DABNCNP2) + present (DABNCNP1) + present (BNCAADV) + present (DNOCEPC) + present (DNOCEPP) + present (BNCAADC) + present (BNCAADP) + present (DNOCEP) + present (BNCNPV) + present (BNCNPC) + present (BNCNPP) + present (BNCNPPVV) + present (BNCNPPVC) + present (BNCNPPVP) + present (BNCAABV) + present (ANOCEP) + present (BNCAABC) + present (ANOVEP) + present (BNCAABP) + present (ANOPEP) ) ) * (1 - positif(LIGSPENPNEG + LIGSPENPPOS)) * LIG0 * LIG2",
          "linecol": [
            273,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCIF",
          "linecol": [
            273,
            1
          ]
        },
        "linecol": [
          273,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11117,
      "linecol": [
        253,
        7
      ]
    },
    "linecol": [
      253,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            306,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            306,
            22
          ]
        }
      ],
      "linecol": [
        306,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(RCMABD) + present(RCMTNC) + present(RCMAV) + present(RCMHAD) + present(RCMHAB) + present(REGPRIV) + (1-present(BRCMQ)) *(present(RCMFR)) ) * LIG0 * LIG2",
          "linecol": [
            307,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG910",
          "linecol": [
            307,
            1
          ]
        },
        "linecol": [
          307,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 125,
      "linecol": [
        305,
        7
      ]
    },
    "linecol": [
      305,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            311,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            311,
            23
          ]
        }
      ],
      "linecol": [
        311,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(REPSOF)) * LIG0 * LIG2",
          "linecol": [
            312,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1130",
          "linecol": [
            312,
            1
          ]
        },
        "linecol": [
          312,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111130,
      "linecol": [
        310,
        7
      ]
    },
    "linecol": [
      310,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            314,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            314,
            22
          ]
        }
      ],
      "linecol": [
        314,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "INDREV1A8 *  positif_ou_nul(REVKIRE) * (1 - positif_ou_nul(IND_TDR)) * (1 - positif(ANNUL2042 + 0))",
          "linecol": [
            315,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1950",
          "linecol": [
            315,
            1
          ]
        },
        "linecol": [
          315,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111950,
      "linecol": [
        313,
        7
      ]
    },
    "linecol": [
      313,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            320,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            320,
            22
          ]
        }
      ],
      "linecol": [
        320,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(RFORDI) + present(RFDHIS) + present(RFDANT) + present(RFDORD)) * (1 - positif(IPVLOC)) * (1 - positif(LIG30)) * LIG1 * LIG2 * IND_REV",
          "linecol": [
            321,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG29",
          "linecol": [
            321,
            1
          ]
        },
        "linecol": [
          321,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11129,
      "linecol": [
        319,
        7
      ]
    },
    "linecol": [
      319,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            325,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            325,
            22
          ]
        }
      ],
      "linecol": [
        325,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(RFMIC) * (1 - positif(IPVLOC)) * LIG1 * LIG2",
          "linecol": [
            326,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG30",
          "linecol": [
            326,
            1
          ]
        },
        "linecol": [
          326,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(FONCI) + present(REAMOR)) * (1 - positif(IPVLOC)) * LIG1 * LIG2",
          "linecol": [
            327,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREVRF",
          "linecol": [
            327,
            1
          ]
        },
        "linecol": [
          327,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11130,
      "linecol": [
        324,
        7
      ]
    },
    "linecol": [
      324,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            329,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            329,
            22
          ]
        }
      ],
      "linecol": [
        329,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "INDREV1A8 * positif_ou_nul(DRBG) * LIG2",
          "linecol": [
            330,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG49",
          "linecol": [
            330,
            1
          ]
        },
        "linecol": [
          330,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11149,
      "linecol": [
        328,
        7
      ]
    },
    "linecol": [
      328,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            332,
            16
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            332,
            23
          ]
        }
      ],
      "linecol": [
        332,
        16
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(CHENF1) + present(CHENF2) + present(CHENF3) + present(CHENF4) + present(NCHENF1) + present(NCHENF2) + present(NCHENF3) + present(NCHENF4)) * LIG1 * LIG2",
          "linecol": [
            333,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG52",
          "linecol": [
            333,
            1
          ]
        },
        "linecol": [
          333,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11152,
      "linecol": [
        331,
        7
      ]
    },
    "linecol": [
      331,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            337,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            337,
            22
          ]
        }
      ],
      "linecol": [
        337,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(present(PAAV) + present(PAAP)) * positif(LIG52) * LIG1 * LIG2",
          "linecol": [
            338,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG58",
          "linecol": [
            338,
            1
          ]
        },
        "linecol": [
          338,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11158,
      "linecol": [
        336,
        7
      ]
    },
    "linecol": [
      336,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            340,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            340,
            22
          ]
        }
      ],
      "linecol": [
        340,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(present(PAAP) + present(PAAV)) * (1 - positif(LIG58)) * LIG1 * LIG2",
          "linecol": [
            341,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG585",
          "linecol": [
            341,
            1
          ]
        },
        "linecol": [
          341,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIG52 + LIG58 + LIG585 + present(CHRFAC) + present(CHNFAC) + present(CHRDED) + present(DPERPV) + present(DPERPC) + present(DPERPP) + LIGREPAR) * LIG1 * LIG2",
          "linecol": [
            342,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG65",
          "linecol": [
            342,
            1
          ]
        },
        "linecol": [
          342,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111585,
      "linecol": [
        339,
        7
      ]
    },
    "linecol": [
      339,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            348,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            348,
            22
          ]
        }
      ],
      "linecol": [
        348,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "present(CHRFAC) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            349,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDPREC",
          "linecol": [
            349,
            1
          ]
        },
        "linecol": [
          349,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(positif(20-V_NOTRAIT+0) * positif(DFACC) + (1 - positif(20-V_NOTRAIT+0)) * present(DFACC)) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            351,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDFACC",
          "linecol": [
            351,
            1
          ]
        },
        "linecol": [
          351,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111555,
      "linecol": [
        347,
        7
      ]
    },
    "linecol": [
      347,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            354,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            354,
            22
          ]
        }
      ],
      "linecol": [
        354,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(ABMAR) + (1 - positif(RI1)) * positif(V_0DN)) * LIG1 * LIG2",
          "linecol": [
            355,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1390",
          "linecol": [
            355,
            1
          ]
        },
        "linecol": [
          355,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111390,
      "linecol": [
        353,
        7
      ]
    },
    "linecol": [
      353,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            357,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            357,
            22
          ]
        }
      ],
      "linecol": [
        357,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "INDREV1A8 * (1 - positif(abs(RNIDF))) * LIG2",
          "linecol": [
            358,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG68",
          "linecol": [
            358,
            1
          ]
        },
        "linecol": [
          358,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11168,
      "linecol": [
        356,
        7
      ]
    },
    "linecol": [
      356,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            360,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            360,
            21
          ]
        }
      ],
      "linecol": [
        360,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif( positif(CARTSV) + positif(CARTSC) + positif(CARTSP1) + positif(CARTSP2)+ positif(CARTSP3)+ positif(CARTSP4) + positif(REMPLAV) + positif(REMPLAC) + positif(REMPLAP1) + positif(REMPLAP2)+ positif(REMPLAP3)+ positif(REMPLAP4) + positif(PEBFV) + positif(PEBFC) + positif(PEBF1) + positif(PEBF2)+ positif(PEBF3)+ positif(PEBF4) + positif(CARPEV) + positif(CARPEC) + positif(CARPEP1) + positif(CARPEP2)+ positif(CARPEP3)+ positif(CARPEP4) + positif(CODRAZ) + positif(CODRBZ) + positif(CODRCZ) + positif(CODRDZ) + positif(CODREZ) + positif(CODRFZ) + positif(PENSALV) + positif(PENSALC) + positif(PENSALP1) + positif(PENSALP2)+ positif(PENSALP3)+ positif(PENSALP4) + positif(RENTAX) + positif(RENTAX5) + positif(RENTAX6) + positif(RENTAX7) + positif(REVACT) + positif(REVPEA) + positif(PROVIE) + positif(DISQUO) + positif(RESTUC) + positif(INTERE) + positif(FONCI) + positif(REAMOR) + positif(4BACREV) + positif(4BACREC)+positif(4BACREP)+positif(4BAHREV)+positif(4BAHREC)+positif(4BAHREP) + positif(GLD1V) + positif(GLD1C) + positif(GLD2V) + positif(GLD2C) + positif(GLD3V) + positif(GLD3C) + positif(CODDAJ) + positif(CODEAJ) + positif(CODDBJ)+ positif(CODEBJ) + positif(CODRVG) ) * LIG1 * LIG2 * (1 - null(4-V_REGCO))",
          "linecol": [
            361,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTTPVQ",
          "linecol": [
            361,
            1
          ]
        },
        "linecol": [
          361,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111420,
      "linecol": [
        359,
        7
      ]
    },
    "linecol": [
      359,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            378,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            378,
            22
          ]
        }
      ],
      "linecol": [
        378,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPTP3) * LIG0 * LIG2",
          "linecol": [
            380,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1430",
          "linecol": [
            380,
            1
          ]
        },
        "linecol": [
          380,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPTP18) * LIG0 * LIG2",
          "linecol": [
            382,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1431",
          "linecol": [
            382,
            1
          ]
        },
        "linecol": [
          382,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPTP19) * LIG0 * LIG2",
          "linecol": [
            384,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1432",
          "linecol": [
            384,
            1
          ]
        },
        "linecol": [
          384,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111721,
      "linecol": [
        377,
        7
      ]
    },
    "linecol": [
      377,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            386,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            386,
            22
          ]
        }
      ],
      "linecol": [
        386,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "V_EAD * positif(BPTPD) * LIG0 * LIG2",
          "linecol": [
            387,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG815",
          "linecol": [
            387,
            1
          ]
        },
        "linecol": [
          387,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "V_EAG * positif(BPTPG) * LIG0 * LIG2",
          "linecol": [
            388,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG816",
          "linecol": [
            388,
            1
          ]
        },
        "linecol": [
          388,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEA+0) * LIG0 * LIG2",
          "linecol": [
            389,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTXF225",
          "linecol": [
            389,
            1
          ]
        },
        "linecol": [
          389,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPTP24) * LIG0 * LIG2",
          "linecol": [
            390,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTXF24",
          "linecol": [
            390,
            1
          ]
        },
        "linecol": [
          390,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(BPCOPTV + BPCOPTC + BPVSK) * LIG0  * LIG2",
          "linecol": [
            391,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTXF30",
          "linecol": [
            391,
            1
          ]
        },
        "linecol": [
          391,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPV40V + BPV40C + 0) * LIG0 * LIG2",
          "linecol": [
            392,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTXF40",
          "linecol": [
            392,
            1
          ]
        },
        "linecol": [
          392,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111722,
      "linecol": [
        385,
        7
      ]
    },
    "linecol": [
      385,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            395,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            395,
            22
          ]
        }
      ],
      "linecol": [
        395,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPTPDIV) * positif(PVTAXSB) * positif(V_EAD + 0) * LIG0 * LIG2",
          "linecol": [
            397,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCESDOM",
          "linecol": [
            397,
            1
          ]
        },
        "linecol": [
          397,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPTPDIV) * positif(PVTAXSB) * positif(V_EAG + 0) * LIG0 * LIG2",
          "linecol": [
            399,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCESDOMG",
          "linecol": [
            399,
            1
          ]
        },
        "linecol": [
          399,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111723,
      "linecol": [
        394,
        7
      ]
    },
    "linecol": [
      394,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            402,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            402,
            23
          ]
        }
      ],
      "linecol": [
        402,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(RDDOUP) + present(DONAUTRE) + present(REPDON03) + present(REPDON04) + present(REPDON05) + present(REPDON06) + present(REPDON07) + present(COD7UH) + positif(EXCEDANTA)) * LIG1 * LIG2",
          "linecol": [
            404,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG81",
          "linecol": [
            404,
            1
          ]
        },
        "linecol": [
          404,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11181,
      "linecol": [
        401,
        7
      ]
    },
    "linecol": [
      401,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            410,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            410,
            22
          ]
        }
      ],
      "linecol": [
        410,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif((positif(IPMOND) * positif(present(IPTEFP)+positif(VARIPTEFP)*present(DEFZU))) + positif(INDTEFF) * positif(TEFFREVTOT)) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * (1 - positif(DEFRIMOND)) * LIG1 * LIG2",
          "linecol": [
            412,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1500",
          "linecol": [
            412,
            1
          ]
        },
        "linecol": [
          412,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif((positif(IPMOND) * present(IPTEFN)) + positif(INDTEFF) * (1 - positif(TEFFREVTOT))) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * (1 - positif(DEFRIMOND)) * LIG1 * LIG2",
          "linecol": [
            415,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1510",
          "linecol": [
            415,
            1
          ]
        },
        "linecol": [
          415,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif((positif(IPMOND) * positif(present(IPTEFP)+positif(VARIPTEFP)*present(DEFZU))) + positif(INDTEFF) * positif(TEFFREVTOT)) * positif(positif(max(0,IPTEFP+DEFZU-IPTEFN))+positif(max(0,RMOND+DEFZU-DMOND)))* (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * positif(DEFRIMOND) * LIG1 * LIG2",
          "linecol": [
            418,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1500YT",
          "linecol": [
            418,
            1
          ]
        },
        "linecol": [
          418,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(null(max(0,RMOND+DEFZU-DMOND))+null(max(0,IPTEFP+DEFZU-IPTEFN))) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * positif(DEFRIMOND) * LIG1 * LIG2",
          "linecol": [
            421,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1510YT",
          "linecol": [
            421,
            1
          ]
        },
        "linecol": [
          421,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111500,
      "linecol": [
        409,
        7
      ]
    },
    "linecol": [
      409,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            424,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            424,
            22
          ]
        }
      ],
      "linecol": [
        424,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - present(IND_TDR)) * (1 - INDTXMIN) * (1 - INDTXMOY) * V_CR2 * LIG2",
          "linecol": [
            425,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1522",
          "linecol": [
            425,
            1
          ]
        },
        "linecol": [
          425,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111522,
      "linecol": [
        423,
        7
      ]
    },
    "linecol": [
      423,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            427,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            427,
            22
          ]
        }
      ],
      "linecol": [
        427,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - present(IND_TDR)) * null(V_REGCO - 4) * LIG2",
          "linecol": [
            428,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1523",
          "linecol": [
            428,
            1
          ]
        },
        "linecol": [
          428,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111523,
      "linecol": [
        426,
        7
      ]
    },
    "linecol": [
      426,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            430,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            430,
            22
          ]
        }
      ],
      "linecol": [
        430,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - INDTXMIN) * (1 - INDTXMOY) * (1 - (LIG1500+ LIG1500YT)) * (1 - (LIG1510+ LIG1510YT)) * INDREV1A8 * LIG2",
          "linecol": [
            431,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG75",
          "linecol": [
            431,
            1
          ]
        },
        "linecol": [
          431,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - present(IND_TDR)) * INDTXMIN * positif(IND_REV) * LIG2",
          "linecol": [
            433,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1545",
          "linecol": [
            433,
            1
          ]
        },
        "linecol": [
          433,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - present(IND_TDR)) * INDTXMOY * LIG2",
          "linecol": [
            435,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1760",
          "linecol": [
            435,
            1
          ]
        },
        "linecol": [
          435,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRODOM + PROGUY) * (1 - positif(V_EAD + V_EAG)) * LIG2",
          "linecol": [
            437,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1546",
          "linecol": [
            437,
            1
          ]
        },
        "linecol": [
          437,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - present(IND_TDR)) * INDTXMOY * LIG2",
          "linecol": [
            439,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1550",
          "linecol": [
            439,
            1
          ]
        },
        "linecol": [
          439,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - present(IND_TDR)) * (1 - INDTXMIN) * positif(LIG1500 + LIG1510 + LIG1500YT + LIG1510YT) * LIG2",
          "linecol": [
            441,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG74",
          "linecol": [
            441,
            1
          ]
        },
        "linecol": [
          441,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11175,
      "linecol": [
        429,
        7
      ]
    },
    "linecol": [
      429,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            444,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            444,
            22
          ]
        }
      ],
      "linecol": [
        444,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(RDREP) + present(DONETRAN)) * LIG1 * LIG2",
          "linecol": [
            445,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG80",
          "linecol": [
            445,
            1
          ]
        },
        "linecol": [
          445,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11180,
      "linecol": [
        443,
        7
      ]
    },
    "linecol": [
      443,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            447,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            447,
            23
          ]
        }
      ],
      "linecol": [
        447,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(RSOCREPRISE)) * LIG1 * LIG2",
          "linecol": [
            448,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRSOCREPR",
          "linecol": [
            448,
            1
          ]
        },
        "linecol": [
          448,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11188,
      "linecol": [
        446,
        7
      ]
    },
    "linecol": [
      446,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            450,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            450,
            23
          ]
        }
      ],
      "linecol": [
        450,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(RECOMP) * LIG2",
          "linecol": [
            451,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1740",
          "linecol": [
            451,
            1
          ]
        },
        "linecol": [
          451,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111740,
      "linecol": [
        449,
        7
      ]
    },
    "linecol": [
      449,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            453,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            453,
            23
          ]
        }
      ],
      "linecol": [
        453,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(RDCOM + NBACT) * LIG1 * LIG2",
          "linecol": [
            454,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1780",
          "linecol": [
            454,
            1
          ]
        },
        "linecol": [
          454,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111780,
      "linecol": [
        452,
        7
      ]
    },
    "linecol": [
      452,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            456,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            456,
            22
          ]
        }
      ],
      "linecol": [
        456,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIG80 + LIGFIPC + LIGFIPDOM + present(DAIDE) + LIGDUFLOT + LIGPINEL + LIG7CY + LIGREDAGRI + LIGFORET + LIGRESTIMO + LIGCINE + LIGRSOCREPR + LIGCOTFOR + present(PRESCOMP2000) + present(RDPRESREPORT) + present(FCPI) + present(DSOUFIP) + LIGRIRENOV + present(DFOREST) + present(DHEBE) + present(DSURV) + LIGLOGDOM + LIGREPTOUR + LIGLOCHOTR + LIGREPHA + LIGCREAT + LIG1780 + LIG2040 + LIG81 + LIGLOGSOC + LIGDOMSOC1 + somme (i=A,B,E,M,C,D,S,F,Z,N,T,X : LIGCELLi) + LIGCELMG + LIGCELMH + somme (i=A,B,D,E,F,H,G,L,M,S,R,U,T,Z,X,W,V : LIGCELHi) + somme (i=U,X,T,S,W,P,L,V,K,J : LIGCELGi) + somme (i=A,B,C,D,E,F,G,H,I,J,K,L : LIGCELYi) + LIGCELHNO + LIGCELHJK + LIGCELNQ + LIGCELCOM + LIGCELNBGL + LIGCEL + LIGCELJP + LIGCELJBGL + LIGCELJOQR + LIGCEL2012 + LIGCELFD + LIGCELFABC + LIGILMPA + LIGILMPB + LIGILMPC + LIGILMPD + LIGILMPE + LIGILMOA + LIGILMOB + LIGILMOC + LIGILMOD + LIGILMOE + LIGREDMEUB + LIGREDREP + LIGILMIX + LIGILMIY + LIGINVRED + LIGILMIH  + LIGILMJC + LIGILMIZ + LIGILMJI + LIGILMJS + LIGMEUBLE + LIGPROREP + LIGREPNPRO + LIGMEUREP + LIGILMIC + LIGILMIB + LIGILMIA + LIGILMJY + LIGILMJX + LIGILMJW + LIGILMJV + LIGRESIMEUB + LIGRESINEUV + LIGRESIVIEU + LIGLOCIDEFG + LIGCODJTJU + LIGCODOU + present(DNOUV) + LIGLOCENT + LIGCOLENT + LIGRIDOMPRO + LIGPATNAT1 + LIGPATNAT2 + LIGPATNAT3+LIGPATNAT4) * LIG1 * LIG2",
          "linecol": [
            457,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG98B",
          "linecol": [
            457,
            1
          ]
        },
        "linecol": [
          457,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIG98B * (1 - positif(RIDEFRI)) * LIG1 * LIG2",
          "linecol": [
            485,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRED",
          "linecol": [
            485,
            1
          ]
        },
        "linecol": [
          485,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIG98B * positif(RIDEFRI) * LIG1 * LIG2",
          "linecol": [
            487,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREDYT",
          "linecol": [
            487,
            1
          ]
        },
        "linecol": [
          487,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111981,
      "linecol": [
        455,
        7
      ]
    },
    "linecol": [
      455,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            490,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            490,
            23
          ]
        }
      ],
      "linecol": [
        490,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(ABADO + ABAGU + RECOMP) * LIG2",
          "linecol": [
            492,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1820",
          "linecol": [
            492,
            1
          ]
        },
        "linecol": [
          492,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1111820,
      "linecol": [
        489,
        7
      ]
    },
    "linecol": [
      489,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            495,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            495,
            23
          ]
        }
      ],
      "linecol": [
        495,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETIR)",
          "linecol": [
            497,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG106",
          "linecol": [
            497,
            1
          ]
        },
        "linecol": [
          497,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETTAXA)",
          "linecol": [
            498,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINRTAX",
          "linecol": [
            498,
            1
          ]
        },
        "linecol": [
          498,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETIR22)",
          "linecol": [
            499,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG10622",
          "linecol": [
            499,
            1
          ]
        },
        "linecol": [
          499,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETTAXA22)",
          "linecol": [
            500,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINRTAX22",
          "linecol": [
            500,
            1
          ]
        },
        "linecol": [
          500,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETCS22 + RETPS22 + RETRD22 + RETCVN22)",
          "linecol": [
            501,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_INT22",
          "linecol": [
            501,
            1
          ]
        },
        "linecol": [
          501,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETPCAP)",
          "linecol": [
            503,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINRPCAP",
          "linecol": [
            503,
            1
          ]
        },
        "linecol": [
          503,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETPCAP22)",
          "linecol": [
            504,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINRPCAP2",
          "linecol": [
            504,
            1
          ]
        },
        "linecol": [
          504,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETLOY)",
          "linecol": [
            505,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINRLOY",
          "linecol": [
            505,
            1
          ]
        },
        "linecol": [
          505,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETLOY22)",
          "linecol": [
            506,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINRLOY2",
          "linecol": [
            506,
            1
          ]
        },
        "linecol": [
          506,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETHAUTREV)",
          "linecol": [
            508,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINRHAUT",
          "linecol": [
            508,
            1
          ]
        },
        "linecol": [
          508,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETCHR22)",
          "linecol": [
            509,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINRHAUT2",
          "linecol": [
            509,
            1
          ]
        },
        "linecol": [
          509,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111106,
      "linecol": [
        494,
        7
      ]
    },
    "linecol": [
      494,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            511,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            511,
            22
          ]
        }
      ],
      "linecol": [
        511,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJ1)",
          "linecol": [
            513,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_172810",
          "linecol": [
            513,
            1
          ]
        },
        "linecol": [
          513,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJTAXA1)",
          "linecol": [
            515,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTAXA17281",
          "linecol": [
            515,
            1
          ]
        },
        "linecol": [
          515,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJPCAP1)",
          "linecol": [
            517,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPCAP17281",
          "linecol": [
            517,
            1
          ]
        },
        "linecol": [
          517,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJCHR1)",
          "linecol": [
            519,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCHR17281",
          "linecol": [
            519,
            1
          ]
        },
        "linecol": [
          519,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJ1)",
          "linecol": [
            521,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_NMAJ1",
          "linecol": [
            521,
            1
          ]
        },
        "linecol": [
          521,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJ3)",
          "linecol": [
            522,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_NMAJ3",
          "linecol": [
            522,
            1
          ]
        },
        "linecol": [
          522,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJ4)",
          "linecol": [
            523,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_NMAJ4",
          "linecol": [
            523,
            1
          ]
        },
        "linecol": [
          523,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJTAXA1)",
          "linecol": [
            525,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJTAXA1",
          "linecol": [
            525,
            1
          ]
        },
        "linecol": [
          525,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJTAXA3)",
          "linecol": [
            526,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJTAXA3",
          "linecol": [
            526,
            1
          ]
        },
        "linecol": [
          526,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJTAXA4)",
          "linecol": [
            527,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJTAXA4",
          "linecol": [
            527,
            1
          ]
        },
        "linecol": [
          527,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJPCAP1)",
          "linecol": [
            529,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJPCAP1",
          "linecol": [
            529,
            1
          ]
        },
        "linecol": [
          529,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJPCAP3)",
          "linecol": [
            530,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJPCAP3",
          "linecol": [
            530,
            1
          ]
        },
        "linecol": [
          530,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJPCAP4)",
          "linecol": [
            531,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJPCAP4",
          "linecol": [
            531,
            1
          ]
        },
        "linecol": [
          531,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJLOY1)",
          "linecol": [
            532,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJLOY1",
          "linecol": [
            532,
            1
          ]
        },
        "linecol": [
          532,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJLOY3)",
          "linecol": [
            533,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJLOY3",
          "linecol": [
            533,
            1
          ]
        },
        "linecol": [
          533,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJLOY4)",
          "linecol": [
            534,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJLOY4",
          "linecol": [
            534,
            1
          ]
        },
        "linecol": [
          534,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJCHR1)",
          "linecol": [
            536,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJCHR1",
          "linecol": [
            536,
            1
          ]
        },
        "linecol": [
          536,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJCHR3)",
          "linecol": [
            537,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJCHR3",
          "linecol": [
            537,
            1
          ]
        },
        "linecol": [
          537,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TYPE2 * positif(NMAJCHR4)",
          "linecol": [
            538,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJCHR4",
          "linecol": [
            538,
            1
          ]
        },
        "linecol": [
          538,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111107,
      "linecol": [
        510,
        7
      ]
    },
    "linecol": [
      510,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            541,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            541,
            22
          ]
        }
      ],
      "linecol": [
        541,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(IPSOUR + REGCI + LIGPVETR + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGCICAP + LIGCI8XV + LIGCIGLO + LIGREGCI + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO  + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + INDLIGPPE ) * LIG1 * LIG2",
          "linecol": [
            542,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG109",
          "linecol": [
            542,
            1
          ]
        },
        "linecol": [
          542,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REGCI + LIGPVETR + LIGCICAP + LIGREGCI + LIGCI8XV + LIGCIGLO + 0) * (1 - positif(IPSOUR + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + 0)) ",
          "linecol": [
            554,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCRED1",
          "linecol": [
            554,
            1
          ]
        },
        "linecol": [
          554,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(REGCI + LIGPVETR + LIGCICAP + LIGREGCI + LIGCI8XV + LIGCIGLO + 0)) * positif(IPSOUR + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + 0) ",
          "linecol": [
            561,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCRED2",
          "linecol": [
            561,
            1
          ]
        },
        "linecol": [
          561,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REGCI + LIGPVETR + LIGCICAP + LIGREGCI + LIGCI8XV + LIGCIGLO + 0) * positif(IPSOUR + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + 0) ",
          "linecol": [
            568,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCRED3",
          "linecol": [
            568,
            1
          ]
        },
        "linecol": [
          568,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11119,
      "linecol": [
        540,
        7
      ]
    },
    "linecol": [
      540,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            575,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            575,
            22
          ]
        }
      ],
      "linecol": [
        575,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(CIIMPPRO) + present(CIIMPPRO2)) * LIG1 * LIG2",
          "linecol": [
            577,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPVETR",
          "linecol": [
            577,
            1
          ]
        },
        "linecol": [
          577,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(PRELIBXT) * LIG1 * LIG2",
          "linecol": [
            578,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCICAP",
          "linecol": [
            578,
            1
          ]
        },
        "linecol": [
          578,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(REGCI) + present(COD8XY)) * positif(CICHR) * LIG1 * LIG2",
          "linecol": [
            579,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREGCI",
          "linecol": [
            579,
            1
          ]
        },
        "linecol": [
          579,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(COD8XV) * LIG1 * LIG2",
          "linecol": [
            580,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCI8XV",
          "linecol": [
            580,
            1
          ]
        },
        "linecol": [
          580,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(COD8XF) + present(COD8XG) + present(COD8XH)) * LIG1 * LIG2",
          "linecol": [
            581,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCIGLO",
          "linecol": [
            581,
            1
          ]
        },
        "linecol": [
          581,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(CIAQCUL) * LIG1 * LIG2",
          "linecol": [
            583,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCULTURE",
          "linecol": [
            583,
            1
          ]
        },
        "linecol": [
          583,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(RDMECENAT) * LIG1 * LIG2",
          "linecol": [
            584,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMECENAT",
          "linecol": [
            584,
            1
          ]
        },
        "linecol": [
          584,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(CIINVCORSE) + present(IPREPCORSE) + present(CICORSENOW)) * LIG1 * LIG2",
          "linecol": [
            585,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCORSE",
          "linecol": [
            585,
            1
          ]
        },
        "linecol": [
          585,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DIAVF2) * LIG1 * LIG2",
          "linecol": [
            586,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2305",
          "linecol": [
            586,
            1
          ]
        },
        "linecol": [
          586,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD8UW + COD8TL) * LIG1 * LIG2",
          "linecol": [
            587,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGEMPLOI",
          "linecol": [
            587,
            1
          ]
        },
        "linecol": [
          587,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD2CK) * LIG1 * LIG2",
          "linecol": [
            588,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCI2CK",
          "linecol": [
            588,
            1
          ]
        },
        "linecol": [
          588,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(RCMLIB) * LIG0 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            589,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBPLIB",
          "linecol": [
            589,
            1
          ]
        },
        "linecol": [
          589,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RDTECH + RDEQPAHA) * LIG1 * LIG2",
          "linecol": [
            590,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCIGE",
          "linecol": [
            590,
            1
          ]
        },
        "linecol": [
          590,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DDEVDUR) * LIG1 * LIG2",
          "linecol": [
            591,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEVDUR",
          "linecol": [
            591,
            1
          ]
        },
        "linecol": [
          591,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BAILOC98) * LIG1 * LIG2",
          "linecol": [
            592,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCICA",
          "linecol": [
            592,
            1
          ]
        },
        "linecol": [
          592,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DGARD) * LIG1 * LIG2",
          "linecol": [
            593,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCIGARD",
          "linecol": [
            593,
            1
          ]
        },
        "linecol": [
          593,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(RDSYVO) + present(RDSYCJ) + present(RDSYPP) ) * LIG1 * LIG2",
          "linecol": [
            594,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG82",
          "linecol": [
            594,
            1
          ]
        },
        "linecol": [
          594,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRETUD+PRETUDANT) * LIG1 * LIG2",
          "linecol": [
            595,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPRETUD",
          "linecol": [
            595,
            1
          ]
        },
        "linecol": [
          595,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(CREAIDE) * LIG1 * LIG2",
          "linecol": [
            596,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSALDOM",
          "linecol": [
            596,
            1
          ]
        },
        "linecol": [
          596,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BDCIFORET) * LIG1 * LIG2",
          "linecol": [
            597,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCIFORET",
          "linecol": [
            597,
            1
          ]
        },
        "linecol": [
          597,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(PREHABT) + present(PREHABT1) + present(PREHABT2) + present(PREHABTN) + present(PREHABTN1) + present(PREHABTN2) + present(PREHABTVT) ) * LIG1 * LIG2",
          "linecol": [
            598,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGHABPRIN",
          "linecol": [
            598,
            1
          ]
        },
        "linecol": [
          598,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CREFAM) * LIG1 * LIG2",
          "linecol": [
            601,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCREFAM",
          "linecol": [
            601,
            1
          ]
        },
        "linecol": [
          601,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CREAPP) * LIG1 * LIG2",
          "linecol": [
            602,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCREAPP",
          "linecol": [
            602,
            1
          ]
        },
        "linecol": [
          602,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CREAGRIBIO) * LIG1 * LIG2",
          "linecol": [
            603,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCREBIO",
          "linecol": [
            603,
            1
          ]
        },
        "linecol": [
          603,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRESINTER) * LIG1 * LIG2",
          "linecol": [
            604,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPRESINT",
          "linecol": [
            604,
            1
          ]
        },
        "linecol": [
          604,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CREPROSP) * LIG1 * LIG2",
          "linecol": [
            605,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCREPROSP",
          "linecol": [
            605,
            1
          ]
        },
        "linecol": [
          605,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CREINTERESSE) * LIG1 * LIG2",
          "linecol": [
            606,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINTER",
          "linecol": [
            606,
            1
          ]
        },
        "linecol": [
          606,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CRERESTAU) * LIG1 * LIG2",
          "linecol": [
            607,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRESTAU",
          "linecol": [
            607,
            1
          ]
        },
        "linecol": [
          607,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CRECONGAGRI) * LIG1 * LIG2",
          "linecol": [
            608,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCONGA",
          "linecol": [
            608,
            1
          ]
        },
        "linecol": [
          608,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CREARTS) * LIG1 * LIG2",
          "linecol": [
            609,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMETART",
          "linecol": [
            609,
            1
          ]
        },
        "linecol": [
          609,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CREFORMCHENT) * LIG1 * LIG2",
          "linecol": [
            610,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCREFORM",
          "linecol": [
            610,
            1
          ]
        },
        "linecol": [
          610,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LOYIMP) * LIG1 * LIG2",
          "linecol": [
            611,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOYIMP",
          "linecol": [
            611,
            1
          ]
        },
        "linecol": [
          611,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(AUTOVERSLIB) * LIG1 * LIG2",
          "linecol": [
            612,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGVERSLIB",
          "linecol": [
            612,
            1
          ]
        },
        "linecol": [
          612,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DTEC) * LIG1 * LIG2",
          "linecol": [
            613,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCITEC",
          "linecol": [
            613,
            1
          ]
        },
        "linecol": [
          613,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCREAT + DCREATHANDI) * LIG1 * LIG2",
          "linecol": [
            615,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCREAT",
          "linecol": [
            615,
            1
          ]
        },
        "linecol": [
          615,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11120,
      "linecol": [
        574,
        7
      ]
    },
    "linecol": [
      574,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            617,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            617,
            22
          ]
        }
      ],
      "linecol": [
        617,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(NRINET) + present(NRBASE)) * LIG1 * LIG2",
          "linecol": [
            619,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNRBASE",
          "linecol": [
            619,
            1
          ]
        },
        "linecol": [
          619,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(IMPRET) + present(BASRET)) * LIG1 * LIG2",
          "linecol": [
            620,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBASRET",
          "linecol": [
            620,
            1
          ]
        },
        "linecol": [
          620,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112030,
      "linecol": [
        616,
        7
      ]
    },
    "linecol": [
      616,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            622,
            16
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            622,
            23
          ]
        }
      ],
      "linecol": [
        622,
        16
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(AVFISCOPTER) * LIG1 * LIG2",
          "linecol": [
            623,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGAVFISC",
          "linecol": [
            623,
            1
          ]
        },
        "linecol": [
          623,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112332,
      "linecol": [
        621,
        7
      ]
    },
    "linecol": [
      621,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            625,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            625,
            22
          ]
        }
      ],
      "linecol": [
        625,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(DNBE + RNBE + RRETU) * LIG1 * LIG2",
          "linecol": [
            626,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2040",
          "linecol": [
            626,
            1
          ]
        },
        "linecol": [
          626,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112040,
      "linecol": [
        624,
        7
      ]
    },
    "linecol": [
      624,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            628,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            628,
            22
          ]
        }
      ],
      "linecol": [
        628,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(V_BTCSGDED) + present(DCSG) + present(RCMSOC)) * LIG1 * LIG2",
          "linecol": [
            629,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRDCSG",
          "linecol": [
            629,
            1
          ]
        },
        "linecol": [
          629,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112041,
      "linecol": [
        627,
        7
      ]
    },
    "linecol": [
      627,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            631,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            631,
            22
          ]
        }
      ],
      "linecol": [
        631,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif((present(CESSASSV) + present(CESSASSC)) * INDREV1A8IR + TAXANTAFF) * (1 - positif(ANNUL2042 + 0)) * LIG1",
          "linecol": [
            633,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTAXANET",
          "linecol": [
            633,
            1
          ]
        },
        "linecol": [
          633,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif((present(PCAPTAXV) + present(PCAPTAXC)) * INDREV1A8IR + PCAPANTAFF) * (1 - positif(ANNUL2042 + 0)) * LIG1",
          "linecol": [
            635,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPCAPNET",
          "linecol": [
            635,
            1
          ]
        },
        "linecol": [
          635,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(present(LOYELEV) * INDREV1A8IR + TAXLOYANTAFF) * (1 - positif(ANNUL2042 + 0)) * LIG1",
          "linecol": [
            637,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOYNET",
          "linecol": [
            637,
            1
          ]
        },
        "linecol": [
          637,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BHAUTREV * INDREV1A8IR + HAUTREVANTAF) * (1 - positif(ANNUL2042 + 0)) * LIG1",
          "linecol": [
            639,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGHAUTNET",
          "linecol": [
            639,
            1
          ]
        },
        "linecol": [
          639,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGTAXANET + LIGPCAPNET + LIGLOYNET + LIGHAUTNET) * (1 - positif(ANNUL2042 + 0))",
          "linecol": [
            641,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_IRNET",
          "linecol": [
            641,
            1
          ]
        },
        "linecol": [
          641,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IRNET * LIG_IRNET + LIGTAXANET + LIGPCAPNET + LIGLOYNET + LIGHAUTNET) * (1 - positif(ANNUL2042 + 0))",
          "linecol": [
            643,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIRNET",
          "linecol": [
            643,
            1
          ]
        },
        "linecol": [
          643,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111117,
      "linecol": [
        630,
        7
      ]
    },
    "linecol": [
      630,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            646,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            646,
            22
          ]
        }
      ],
      "linecol": [
        646,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(ANNUL2042)",
          "linecol": [
            647,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGANNUL",
          "linecol": [
            647,
            1
          ]
        },
        "linecol": [
          647,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112135,
      "linecol": [
        645,
        7
      ]
    },
    "linecol": [
      645,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            650,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            650,
            22
          ]
        }
      ],
      "linecol": [
        650,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_NOTRAIT - 20) * positif(IDEGR) * positif(IREST - SEUIL_8) * TYPE2",
          "linecol": [
            651,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2053",
          "linecol": [
            651,
            1
          ]
        },
        "linecol": [
          651,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112050,
      "linecol": [
        649,
        7
      ]
    },
    "linecol": [
      649,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            654,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            654,
            21
          ]
        }
      ],
      "linecol": [
        654,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(20 - V_NOTRAIT)) * positif (RECUMBIS)",
          "linecol": [
            655,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2051",
          "linecol": [
            655,
            1
          ]
        },
        "linecol": [
          655,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_NOTRAIT - 20)",
          "linecol": [
            658,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBLOC",
          "linecol": [
            658,
            1
          ]
        },
        "linecol": [
          658,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(null(V_NOTRAIT - 26) + null(V_NOTRAIT - 36) + null(V_NOTRAIT - 46) + null(V_NOTRAIT - 56) + null(V_NOTRAIT - 66))",
          "linecol": [
            660,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSUP",
          "linecol": [
            660,
            1
          ]
        },
        "linecol": [
          660,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(TOTIRPSANT) * positif(SEUIL_8 - RECUM) * positif(null(V_NOTRAIT - 23) + null(V_NOTRAIT - 33) + null(V_NOTRAIT - 43) + null(V_NOTRAIT - 53) + null(V_NOTRAIT - 63))",
          "linecol": [
            662,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEG",
          "linecol": [
            662,
            1
          ]
        },
        "linecol": [
          662,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(TOTIRPSANT + 0)) * positif_ou_nul(RECUM - SEUIL_8) * positif(null(V_NOTRAIT - 23) + null(V_NOTRAIT - 33) + null(V_NOTRAIT - 43) + null(V_NOTRAIT - 53) + null(V_NOTRAIT - 63))",
          "linecol": [
            665,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRES",
          "linecol": [
            665,
            1
          ]
        },
        "linecol": [
          665,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(TOTIRPSANT + 0) * positif_ou_nul(RECUM - SEUIL_8) * positif(null(V_NOTRAIT - 23) + null(V_NOTRAIT - 33) + null(V_NOTRAIT - 43) + null(V_NOTRAIT - 53) + null(V_NOTRAIT - 63))",
          "linecol": [
            668,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEGRES",
          "linecol": [
            668,
            1
          ]
        },
        "linecol": [
          668,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif((1 - null(NAPTEMP)) + null(NAPTEMP) * null(NAPTIR) * null(NAPCRP))",
          "linecol": [
            671,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNEMP",
          "linecol": [
            671,
            1
          ]
        },
        "linecol": [
          671,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "1 - LIGNEMP",
          "linecol": [
            673,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGEMP",
          "linecol": [
            673,
            1
          ]
        },
        "linecol": [
          673,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(V_ANTREIR + 0)) * (1 - APPLI_OCEANS)",
          "linecol": [
            675,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2052",
          "linecol": [
            675,
            1
          ]
        },
        "linecol": [
          675,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "( APPLI_ILIAD * (1 - positif(20 - V_NOTRAIT)) * positif(V_TAXANT + LIGTAXANET * positif(TAXANET)) ) * (1 - positif(LIG2051)) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            677,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTAXANT",
          "linecol": [
            677,
            1
          ]
        },
        "linecol": [
          677,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "( APPLI_ILIAD * (1 - positif(20 - V_NOTRAIT)) * positif(V_PCAPANT + LIGPCAPNET * positif(PCAPNET)) ) * (1 - positif(LIG2051)) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            681,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPCAPANT",
          "linecol": [
            681,
            1
          ]
        },
        "linecol": [
          681,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "( APPLI_ILIAD * (1 - positif(20 - V_NOTRAIT)) * positif(V_TAXLOYANT + LIGLOYNET * positif(TAXLOYNET)) ) * (1 - positif(LIG2051)) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            684,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOYANT",
          "linecol": [
            684,
            1
          ]
        },
        "linecol": [
          684,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "( APPLI_ILIAD * (1 - positif(20 - V_NOTRAIT)) * positif(V_CHRANT + LIGHAUTNET * positif(HAUTREVNET)) ) * (1 - positif(LIG2051)) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            688,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGHAUTANT",
          "linecol": [
            688,
            1
          ]
        },
        "linecol": [
          688,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_ANTREIR + 0) * (1 - positif(V_ANTCR)) * (1 - APPLI_OCEANS)",
          "linecol": [
            692,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGANTREIR",
          "linecol": [
            692,
            1
          ]
        },
        "linecol": [
          692,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_ANTREIR + 0) * positif(V_ANTCR + 0) * (1 - APPLI_OCEANS)",
          "linecol": [
            694,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNANTREIR",
          "linecol": [
            694,
            1
          ]
        },
        "linecol": [
          694,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_NONMERANT + 0) * (1 - APPLI_OCEANS)",
          "linecol": [
            696,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNONREC",
          "linecol": [
            696,
            1
          ]
        },
        "linecol": [
          696,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_NONRESTANT + 0) * (1 - APPLI_OCEANS)",
          "linecol": [
            698,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNONREST",
          "linecol": [
            698,
            1
          ]
        },
        "linecol": [
          698,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIGSUP * (positif(NAPT + 0) + null(IINETCALC))",
          "linecol": [
            700,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIINET",
          "linecol": [
            700,
            1
          ]
        },
        "linecol": [
          700,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIGSUP * null(NAPT) * positif(IINETCALC + 0)",
          "linecol": [
            702,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIINETC",
          "linecol": [
            702,
            1
          ]
        },
        "linecol": [
          702,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGDEG + LIGDEGRES) * (positif_ou_nul(IDEGR - SEUIL_8) + null(IDEGR))",
          "linecol": [
            704,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIDEGR",
          "linecol": [
            704,
            1
          ]
        },
        "linecol": [
          704,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGDEG + LIGDEGRES) * positif(SEUIL_8 - IDEGR) * positif(IDEGR + 0)",
          "linecol": [
            706,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIDEGRC",
          "linecol": [
            706,
            1
          ]
        },
        "linecol": [
          706,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGRES + LIGDEGRES) * (positif_ou_nul(IREST - SEUIL_8) + null(IREST))",
          "linecol": [
            708,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIREST",
          "linecol": [
            708,
            1
          ]
        },
        "linecol": [
          708,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGRES + LIGDEGRES) * positif(SEUIL_8 - IREST) * positif(IREST + 0)",
          "linecol": [
            710,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIRESTC",
          "linecol": [
            710,
            1
          ]
        },
        "linecol": [
          710,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIGIINETC * positif(V_ANTRE - V_NONRESTANT + 0)",
          "linecol": [
            712,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMRR",
          "linecol": [
            712,
            1
          ]
        },
        "linecol": [
          712,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIGIINETC * (1 - positif(V_ANTRE - V_NONRESTANT))",
          "linecol": [
            714,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMRS",
          "linecol": [
            714,
            1
          ]
        },
        "linecol": [
          714,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGIDEGRC + LIGIRESTC)",
          "linecol": [
            716,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRESINF",
          "linecol": [
            716,
            1
          ]
        },
        "linecol": [
          716,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112051,
      "linecol": [
        653,
        7
      ]
    },
    "linecol": [
      653,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            719,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            719,
            22
          ]
        }
      ],
      "linecol": [
        719,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(NATIMP - 71) * LIG2",
          "linecol": [
            721,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2080",
          "linecol": [
            721,
            1
          ]
        },
        "linecol": [
          721,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112080,
      "linecol": [
        718,
        7
      ]
    },
    "linecol": [
      718,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            724,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            724,
            22
          ]
        }
      ],
      "linecol": [
        724,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(NATIMP - 71) * positif(TAXADEG) * LIG2",
          "linecol": [
            726,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTAXADEG",
          "linecol": [
            726,
            1
          ]
        },
        "linecol": [
          726,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(NATIMP - 71) * positif(PCAPDEG) * LIG2",
          "linecol": [
            728,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPCAPDEG",
          "linecol": [
            728,
            1
          ]
        },
        "linecol": [
          728,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(NATIMP - 71) * positif(TAXLOYDEG) * LIG2",
          "linecol": [
            730,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOYDEG",
          "linecol": [
            730,
            1
          ]
        },
        "linecol": [
          730,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(NATIMP - 71) * positif(HAUTREVDEG) * LIG2",
          "linecol": [
            732,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGHAUTDEG",
          "linecol": [
            732,
            1
          ]
        },
        "linecol": [
          732,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112081,
      "linecol": [
        723,
        7
      ]
    },
    "linecol": [
      723,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            735,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            735,
            23
          ]
        }
      ],
      "linecol": [
        735,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "si (  (V_NOTRAIT+0 = 23) ou (V_NOTRAIT+0 = 33) ou (V_NOTRAIT+0 = 43) ou (V_NOTRAIT+0 = 53) ou (V_NOTRAIT+0 = 63) ) alors (1) sinon (0) finsi",
          "linecol": [
            737,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDCTX",
          "linecol": [
            737,
            1
          ]
        },
        "linecol": [
          737,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "si (  (V_NOTRAIT+0 = 14) ou (V_NOTRAIT+0 = 16) ou (V_NOTRAIT+0 = 26) ou (V_NOTRAIT+0 = 36) ou (V_NOTRAIT+0 = 46) ou (V_NOTRAIT+0 = 56) ou (V_NOTRAIT+0 = 66) ) alors (1) sinon (0) finsi",
          "linecol": [
            747,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDIS",
          "linecol": [
            747,
            1
          ]
        },
        "linecol": [
          747,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "si ( ( ( (V_CR2 + 0 = 0) et NATIMP = 1 et (IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + NRINET - NAPTOTA + NAPCR >= SEUIL_12)) ou ((V_CR2 + 0 = 1) et (NATIMP = 1 ou  NATIMP = 0)) ou ((V_REGCO + 0 = 3) et ((NRINET +0 < 12) et (CSTOTSSPENA < 61))) ) et LIG2141 + 0 = 0 ) alors ((((1 - INDCTX) * INDREV1A8 * (1 - (positif(IRANT)*null(NAPT)) ) * LIG2) + null(IINET + NAPTOTA) * null(INDREV1A8)) * positif(IND_REV) * positif(20 - V_NOTRAIT)) finsi",
          "linecol": [
            760,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2140",
          "linecol": [
            760,
            1
          ]
        },
        "linecol": [
          760,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "si (( ((V_CR2+0=0) et NATIMP=1 et (IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + NRINET - NAPTOTA + NAPCR >= SEUIL_12)) ou ((V_CR2+0=1) et (NATIMP=1 ou  NATIMP=0))) et LIG2141 + 0 = 0 ) alors ((((1 - INDCTX) * INDREV1A8 * (1 - (positif(IRANT)*null(NAPT)) ) * LIG2) + null(IINET + NAPTOTA) * null(INDREV1A8)) * positif(IND_REV) * positif(20 - V_NOTRAIT)) finsi",
          "linecol": [
            771,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG21401",
          "linecol": [
            771,
            1
          ]
        },
        "linecol": [
          771,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "si (( ((V_CR2+0=0) et NATIMP=1 et (IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + NRINET - NAPTOTA + NAPCR >= SEUIL_12)) ou ((V_CR2+0=1) et (NATIMP=1 ou  NATIMP=0))) et LIG2141 + 0 = 0 ) alors ((((1 - INDCTX) * INDREV1A8 * (1 - (positif(IRANT)*null(NAPT)) ) * LIG2) + null(IINET + NAPTOTA) * null(INDREV1A8)) * positif(IND_REV) * positif(V_NOTRAIT - 20)) finsi",
          "linecol": [
            779,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG21402",
          "linecol": [
            779,
            1
          ]
        },
        "linecol": [
          779,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112140,
      "linecol": [
        734,
        7
      ]
    },
    "linecol": [
      734,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            789,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            789,
            23
          ]
        }
      ],
      "linecol": [
        789,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "null(IAN + RPEN - IAVT + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - IRANT) * positif(IRANT) * (1 - positif(LIG2501)) * null(V_IND_TRAIT - 4) * (1 - positif(NRINET + 0))",
          "linecol": [
            791,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2141",
          "linecol": [
            791,
            1
          ]
        },
        "linecol": [
          791,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 112141,
      "linecol": [
        788,
        7
      ]
    },
    "linecol": [
      788,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            798,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            798,
            23
          ]
        }
      ],
      "linecol": [
        798,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (IINET) * (1 - LIGPS) * positif(ANNUL2042) * TYPE2",
          "linecol": [
            800,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNETAREC",
          "linecol": [
            800,
            1
          ]
        },
        "linecol": [
          800,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif (IINET) * LIGPS * positif(ANNUL2042) * TYPE2",
          "linecol": [
            802,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNETARECS",
          "linecol": [
            802,
            1
          ]
        },
        "linecol": [
          802,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 112145,
      "linecol": [
        797,
        7
      ]
    },
    "linecol": [
      797,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            805,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            805,
            23
          ]
        }
      ],
      "linecol": [
        805,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - INDCTX) * positif(IREST) * (1 - positif(LIG2140)) * (1 - positif(IND_REST50)) * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            807,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2150",
          "linecol": [
            807,
            1
          ]
        },
        "linecol": [
          807,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112150,
      "linecol": [
        804,
        7
      ]
    },
    "linecol": [
      804,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            815,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            815,
            23
          ]
        }
      ],
      "linecol": [
        815,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "INDCTX * positif(IREST) * positif_ou_nul(IREST - SEUIL_8) * (1 - positif(IND_REST50))",
          "linecol": [
            817,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2161",
          "linecol": [
            817,
            1
          ]
        },
        "linecol": [
          817,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "INDCTX * positif(IREST) * positif ( positif(IND_REST50) + positif(IDEGR) )",
          "linecol": [
            822,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2368",
          "linecol": [
            822,
            1
          ]
        },
        "linecol": [
          822,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112160,
      "linecol": [
        814,
        7
      ]
    },
    "linecol": [
      814,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            828,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            828,
            23
          ]
        }
      ],
      "linecol": [
        828,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - INDCTX) * positif(IREST) * (1 - positif(LIG2140)) * positif(IND_REST50) * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            830,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2171",
          "linecol": [
            830,
            1
          ]
        },
        "linecol": [
          830,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112171,
      "linecol": [
        827,
        7
      ]
    },
    "linecol": [
      827,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            838,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            838,
            23
          ]
        }
      ],
      "linecol": [
        838,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_ANTRE+V_ANTCR) * null(IINET)* positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT) * (1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT - SEUIL_12)) * null(IDRS2 - IDEC + IREP) * (1 - LIGPS) * (1 - INDCTX)",
          "linecol": [
            840,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTROP",
          "linecol": [
            840,
            1
          ]
        },
        "linecol": [
          840,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_ANTRE+V_ANTCR) * null(IINET)* positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT) * (1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT - SEUIL_12)) * null(IDRS2 - IDEC + IREP) * LIGPS * (1 - INDCTX)",
          "linecol": [
            847,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTROPS",
          "linecol": [
            847,
            1
          ]
        },
        "linecol": [
          847,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_ANTRE+V_ANTCR) * null(IINET)* positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT) * (1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT - SEUIL_12)) * (1 - positif(LIGTROP)) * (1 - LIGPS) * (1 - INDCTX)",
          "linecol": [
            854,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTROPREST",
          "linecol": [
            854,
            1
          ]
        },
        "linecol": [
          854,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_ANTRE+V_ANTCR) * null(IINET)* positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT) * (1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT - SEUIL_12)) * (1 - positif(LIGTROP)) * LIGPS * (1 - INDCTX)",
          "linecol": [
            861,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTROPRESTS",
          "linecol": [
            861,
            1
          ]
        },
        "linecol": [
          861,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11121710,
      "linecol": [
        837,
        7
      ]
    },
    "linecol": [
      837,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            869,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            869,
            22
          ]
        }
      ],
      "linecol": [
        869,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(IND_REST50) * positif(IREST) + positif(RECUM) * (1 - positif_ou_nul(RECUM - SEUIL_8))) * positif(SEUIL_8 - IRESTIT) * null(LIGRESINF)",
          "linecol": [
            871,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRESINF50",
          "linecol": [
            871,
            1
          ]
        },
        "linecol": [
          871,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113210,
      "linecol": [
        868,
        7
      ]
    },
    "linecol": [
      868,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            876,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            876,
            21
          ]
        }
      ],
      "linecol": [
        876,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(positif(IDEGR) * positif_ou_nul(IDEGR - SEUIL_8) * (1 - LIGPS) * TYPE2)",
          "linecol": [
            877,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2200",
          "linecol": [
            877,
            1
          ]
        },
        "linecol": [
          877,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(positif(IDEGR) * positif_ou_nul(IDEGR - SEUIL_8) * LIGPS * TYPE2)",
          "linecol": [
            879,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2200S",
          "linecol": [
            879,
            1
          ]
        },
        "linecol": [
          879,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112200,
      "linecol": [
        875,
        7
      ]
    },
    "linecol": [
      875,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            882,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            882,
            22
          ]
        }
      ],
      "linecol": [
        882,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(IDEGR) * (1 - positif_ou_nul(IDEGR - SEUIL_8)) * (1 - LIGPS) * LIG2",
          "linecol": [
            883,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2205",
          "linecol": [
            883,
            1
          ]
        },
        "linecol": [
          883,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IDEGR) * (1 - positif_ou_nul(IDEGR - SEUIL_8)) * LIGPS * LIG2",
          "linecol": [
            885,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2205S",
          "linecol": [
            885,
            1
          ]
        },
        "linecol": [
          885,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112205,
      "linecol": [
        881,
        7
      ]
    },
    "linecol": [
      881,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            888,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            888,
            22
          ]
        }
      ],
      "linecol": [
        888,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "si ((CODINI=3 ou CODINI=5 ou CODINI=13) et ((IAVIM +NAPCRPAVIM)- TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES) = 0 et  V_CR2 = 0) alors (1 - INDCTX) finsi",
          "linecol": [
            889,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_NIRED",
          "linecol": [
            889,
            1
          ]
        },
        "linecol": [
          889,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112301,
      "linecol": [
        887,
        7
      ]
    },
    "linecol": [
      887,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            895,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            895,
            22
          ]
        }
      ],
      "linecol": [
        895,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "si (CODINI=8 et NATIMP=0 et V_CR2 = 0) alors (1 - INDCTX) finsi",
          "linecol": [
            896,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_IRNMR",
          "linecol": [
            896,
            1
          ]
        },
        "linecol": [
          896,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112905,
      "linecol": [
        894,
        7
      ]
    },
    "linecol": [
      894,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            900,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            900,
            22
          ]
        }
      ],
      "linecol": [
        900,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "si ( ((CODINI+0=9 et NATIMP+0=0) ou (CODINI +0= 99)) et V_CR2=0 et  (IRNET +TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES + NAPCR < SEUIL_12) et  ((IAVIM+NAPCRPAVIM) >= SEUIL_61)) alors ((1 - positif(INDCTX)) * (1 - positif(IREST))) finsi",
          "linecol": [
            903,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_IRINF80",
          "linecol": [
            903,
            1
          ]
        },
        "linecol": [
          903,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112310,
      "linecol": [
        899,
        7
      ]
    },
    "linecol": [
      899,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            912,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            912,
            23
          ]
        }
      ],
      "linecol": [
        912,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "null(IRNETBIS) * null(NRINET + 0) * null(NATIMP +0) * null(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + NAPCRP + 0) * (1 - positif(IREP)) * (1 - positif(IPROP)) * (1 - positif(IRESTIT)) * (1 - positif(IDEGR)) * (1 - positif(LIGIDB)) * (1 - positif(LIGNIRI)) * (1 - positif(LIG80F)) * (1 - positif(LIG400RI)) * (1 - positif(LIG400F)) * (1 - positif(LIGAUCUN)) * (1 - positif(LIG2141)) * (1 - positif(LIG2501)) * (1 - positif(LIG8FV)) * (1 - positif(LIGNIDB)) * (1 - null(V_REGCO-2 +0)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            914,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNIIR",
          "linecol": [
            914,
            1
          ]
        },
        "linecol": [
          914,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "null(IDRS3 - IDEC) * null(IBM23) * (1 - positif(IRE)) * null(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES + NAPCRP) * (1 - null(V_REGCO-2)) * (1 - positif(LIG2501)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET - SEUIL_12)) * (1 - positif(NRINET - SEUIL_12)) * positif(1 + null(3 - INDIRPS)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            940,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNIIRDEG",
          "linecol": [
            940,
            1
          ]
        },
        "linecol": [
          940,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123101,
      "linecol": [
        911,
        7
      ]
    },
    "linecol": [
      911,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            955,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            955,
            23
          ]
        }
      ],
      "linecol": [
        955,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "null(IDOM11 - DEC11) * (1 - positif(IBM23)) * positif_ou_nul(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + NAPCRP - SEUIL_61) * positif_ou_nul(NAPTIR + NAPCRP - SEUIL_12) * (1 - positif(LIGNIDB)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * (1 - null(V_REGCO - 2)) * LIG2",
          "linecol": [
            957,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCBAIL",
          "linecol": [
            957,
            1
          ]
        },
        "linecol": [
          957,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - SEUIL_61) * null(IDRS2-IDEC+IREP) * positif_ou_nul(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET - SEUIL_12) * (1 - positif(LIG0TSUP)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * positif(V_NOTRAIT - 20) * (1 - positif(INDCTX)) * LIG2",
          "linecol": [
            969,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNITSUP",
          "linecol": [
            969,
            1
          ]
        },
        "linecol": [
          969,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) * positif_ou_nul(IRB2 - SEUIL_61) * positif_ou_nul(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET - SEUIL_12) * null(INDNIRI) * (1 - positif(IBM23)) * positif(1 - null(2-V_REGCO)) * INDREV1A8 * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * positif(INDCTX) * LIG2",
          "linecol": [
            980,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNITDEG",
          "linecol": [
            980,
            1
          ]
        },
        "linecol": [
          980,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123102,
      "linecol": [
        954,
        7
      ]
    },
    "linecol": [
      954,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            993,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            993,
            23
          ]
        }
      ],
      "linecol": [
        993,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "null(IDOM11 - DEC11) * positif(SEUIL_61 - TAXASSUR - IPCAPTAXTOT - TAXLOY - CHRAPRES) * positif(SEUIL_61 - NAPCRP) * positif(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + NAPCRP) * null(IRNETBIS) * (1 - positif(IRESTIT)) * (1 - positif(IREP)) * (1 - positif(IPROP)) * (1 - positif(LIG80F)) * (1 - positif(LIG400RI)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(NRINET)) * (1 - positif(IMPRET)) * (1 - null(V_REGCO - 2)) * LIG2",
          "linecol": [
            995,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNIDB",
          "linecol": [
            995,
            1
          ]
        },
        "linecol": [
          995,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "INDREV1A8 * positif(REVFONC) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * positif(V_NOTRAIT - 20) * (1 - positif(INDCTX)) * LIG2",
          "linecol": [
            1012,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREVSUP",
          "linecol": [
            1012,
            1
          ]
        },
        "linecol": [
          1012,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "INDREV1A8 * positif(REVFONC) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * positif(INDCTX) * LIG2",
          "linecol": [
            1022,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREVDEG",
          "linecol": [
            1022,
            1
          ]
        },
        "linecol": [
          1022,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123103,
      "linecol": [
        992,
        7
      ]
    },
    "linecol": [
      992,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1032,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1032,
            23
          ]
        }
      ],
      "linecol": [
        1032,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "INDNIRI * null(IRNETBIS) * null(NATIMP) * null(NAPCRP) * (1 - positif(IRE)) * (1 - positif(LIGIDB)) * (1 - positif(IREP)) * (1 - positif(IPROP)) * (1 - positif(AVFISCOPTER)) * (1 - null(V_REGCO-2)) * (1 - positif(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            1034,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNIRI",
          "linecol": [
            1034,
            1
          ]
        },
        "linecol": [
          1034,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123104,
      "linecol": [
        1031,
        7
      ]
    },
    "linecol": [
      1031,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1053,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1053,
            23
          ]
        }
      ],
      "linecol": [
        1053,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "INDNIRI * null(IBM23) * positif(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + NAPCRP) * positif(SEUIL_61 - TAXASSUR - IPCAPTAXTOT - TAXLOY - CHRAPRES) * positif(SEUIL_61 - NAPCRP) * (1 - positif(IRESTIT)) * (1 - positif(IREP)) * (1 - positif(IPROP)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * LIG2",
          "linecol": [
            1055,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIDB",
          "linecol": [
            1055,
            1
          ]
        },
        "linecol": [
          1055,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123105,
      "linecol": [
        1052,
        7
      ]
    },
    "linecol": [
      1052,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1071,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1071,
            23
          ]
        }
      ],
      "linecol": [
        1071,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDNIRI * null(IBM23) * (positif_ou_nul(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES - SEUIL_61) + positif_ou_nul(NAPCRP - SEUIL_61)) * positif_ou_nul(NAPTIR + NAPCRP - SEUIL_12) * (1 - positif(IREP)) * (1 - positif(IPROP)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * LIG2 )",
          "linecol": [
            1073,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRIDB",
          "linecol": [
            1073,
            1
          ]
        },
        "linecol": [
          1073,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "INDNIRI * null(IRNETBIS) * positif_ou_nul(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - SEUIL_61) * (1 - positif(IREP)) * (1 - positif(IPROP)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * positif(V_NOTRAIT - 20) * (1 - positif(INDCTX)) * LIG2",
          "linecol": [
            1088,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0TSUP",
          "linecol": [
            1088,
            1
          ]
        },
        "linecol": [
          1088,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "INDNIRI * null(IRNETBIS) * positif_ou_nul(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - SEUIL_61) * (1 - positif(IREP)) * (1 - positif(IPROP)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * positif(INDCTX) * LIG2",
          "linecol": [
            1100,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG0TDEG",
          "linecol": [
            1100,
            1
          ]
        },
        "linecol": [
          1100,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123106,
      "linecol": [
        1070,
        7
      ]
    },
    "linecol": [
      1070,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1112,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1112,
            23
          ]
        }
      ],
      "linecol": [
        1112,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(IAVIM) * positif(SEUIL_61 - IAVIM) * positif(SEUIL_61 - NAPTIR) * positif_ou_nul(NAPCRP - SEUIL_61) * (positif(IINET) * positif(20 - V_NOTRAIT) + positif(V_NOTRAIT - 20)) * (1 - positif(LIG400RI)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGNIDB)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * LIG2",
          "linecol": [
            1114,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPSNIR",
          "linecol": [
            1114,
            1
          ]
        },
        "linecol": [
          1114,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif((positif_ou_nul(IAVIM - SEUIL_61) * positif_ou_nul(NAPTIR - SEUIL_12)) * positif(IBM23) + positif(IRESTIT + 0)) * positif(SEUIL_61 - NAPCRP) * positif(NAPCRP) * (1 - positif(LIG400RI)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGNIDB)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * LIG2",
          "linecol": [
            1128,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIRNPS",
          "linecol": [
            1128,
            1
          ]
        },
        "linecol": [
          1128,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "INDNMR1 * positif(IAMD2) * (1 - INDNIRI) * positif_ou_nul(NAPTIR) * (1 - positif(LIG400RI)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGNIDB)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            1141,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG400F",
          "linecol": [
            1141,
            1
          ]
        },
        "linecol": [
          1141,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IAVIM + NAPCRPAVIM) * positif (SEUIL_61 - (IAVIM + NAPCRPAVIM)) * null(ITRED) * positif (IRNET) * (1 - positif(IRNET - SEUIL_61)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET - SEUIL_12)) * (1 - positif(NRINET - SEUIL_12)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            1153,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG400DEG",
          "linecol": [
            1153,
            1
          ]
        },
        "linecol": [
          1153,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123111,
      "linecol": [
        1111,
        7
      ]
    },
    "linecol": [
      1111,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1167,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1167,
            23
          ]
        }
      ],
      "linecol": [
        1167,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "INDNMR1 * positif(ITRED) * (1 - null(IRB)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            1169,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG400RI",
          "linecol": [
            1169,
            1
          ]
        },
        "linecol": [
          1169,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IBM23) * positif(ITRED) * positif(IAVIM + NAPCRPAVIM) * positif(SEUIL_61 - (IAVIM + NAPCRPAVIM)) * (1 - positif(INDNMR2)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            1178,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG61NRSUP",
          "linecol": [
            1178,
            1
          ]
        },
        "linecol": [
          1178,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ITRED) * positif(IAVIM) * positif(SEUIL_61 - IAVIM) * (1 - positif(INDNMR2)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * positif(INDCTX) * LIG2",
          "linecol": [
            1191,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG61DEG",
          "linecol": [
            1191,
            1
          ]
        },
        "linecol": [
          1191,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123112,
      "linecol": [
        1166,
        7
      ]
    },
    "linecol": [
      1166,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1203,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1203,
            23
          ]
        }
      ],
      "linecol": [
        1203,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif((positif(SEUIL_12 - NAPTIR) * positif(NAPTIR) * positif(SEUIL_61 - NAPCRP) * positif_ou_nul(IAVIM - SEUIL_61) + positif(SEUIL_12 - (NAPCRP + NAPTIR)) * positif(NAPCRP + NAPTIR) * positif_ou_nul(NAPCRP - SEUIL_61)) * (1 - positif (IRANT)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * positif(20 - V_NOTRAIT) * (1 - null(V_REGCO - 2)) * LIG2) ",
          "linecol": [
            1206,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG80F",
          "linecol": [
            1206,
            1
          ]
        },
        "linecol": [
          1206,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123113,
      "linecol": [
        1202,
        7
      ]
    },
    "linecol": [
      1202,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1217,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1217,
            23
          ]
        }
      ],
      "linecol": [
        1217,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif((positif_ou_nul(IAVIM - SEUIL_61) + positif_ou_nul(NAPCRP - SEUIL_61)) * null(TOTNET) * null(NAPT) * (1 - positif(IREST)) * (1 - positif(LIG80F)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * (1 - positif(NRINET)) * (1 - null(V_REGCO - 2)) * positif(20 - V_NOTRAIT) * LIG2 )",
          "linecol": [
            1220,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGAUCUN",
          "linecol": [
            1220,
            1
          ]
        },
        "linecol": [
          1220,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123114,
      "linecol": [
        1216,
        7
      ]
    },
    "linecol": [
      1216,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1236,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1236,
            23
          ]
        }
      ],
      "linecol": [
        1236,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (IRANT) * positif (SEUIL_12 - TOTNET ) * positif( TOTNET) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(null(2-V_REGCO) + (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))) * positif(NRINET-SEUIL_12)) * (1 - positif(IMPRET - SEUIL_12)) * (1 - positif(NRINET - SEUIL_12)) * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            1238,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG12ANT",
          "linecol": [
            1238,
            1
          ]
        },
        "linecol": [
          1238,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123115,
      "linecol": [
        1235,
        7
      ]
    },
    "linecol": [
      1235,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1250,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1250,
            23
          ]
        }
      ],
      "linecol": [
        1250,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(IRPSCUM) * positif(SEUIL_12 - IRPSCUM) * positif(V_NOTRAIT - 20) * (1 - null(2-V_REGCO)) * (1 - positif(IMPRET - SEUIL_12)) * (1 - positif(NRINET - SEUIL_12))",
          "linecol": [
            1252,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG12NMR",
          "linecol": [
            1252,
            1
          ]
        },
        "linecol": [
          1252,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123116,
      "linecol": [
        1249,
        7
      ]
    },
    "linecol": [
      1249,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1260,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1260,
            23
          ]
        }
      ],
      "linecol": [
        1260,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "null(IAD11) * positif(IRESTIT) * (1 - positif(INDNIRI)) * (1 - positif(IREP)) * (1 - positif(IPROP)) * (1 - positif_ou_nul(NAPTIR)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * positif(1 + null(3 - INDIRPS)) * LIG2",
          "linecol": [
            1262,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNIIRAF",
          "linecol": [
            1262,
            1
          ]
        },
        "linecol": [
          1262,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123117,
      "linecol": [
        1259,
        7
      ]
    },
    "linecol": [
      1259,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1274,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1274,
            23
          ]
        }
      ],
      "linecol": [
        1274,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "INDNIRI * null(IBM23) * positif(positif(IRESTIT) + positif(V_NOTRAIT - 20)) * (1 - positif(LIGIDB)) * (1 - positif(LIGRIDB)) * (1 - positif(IREP)) * (1 - positif(IPROP)) * (1 - positif(IMPRET)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * LIG2",
          "linecol": [
            1276,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNIRIAF",
          "linecol": [
            1276,
            1
          ]
        },
        "linecol": [
          1276,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123118,
      "linecol": [
        1273,
        7
      ]
    },
    "linecol": [
      1273,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1289,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1289,
            23
          ]
        }
      ],
      "linecol": [
        1289,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "null(IDRS3-IDEC) * null(IBM23) * positif(SEUIL_61 - TAXASSUR) * positif(SEUIL_61 - IPCAPTAXT) * positif(SEUIL_61 - TAXLOY) * positif(SEUIL_61 - CHRAPRES) * positif(SEUIL_12 - IRNET) * (1 - null(V_REGCO-2)) * (1 - positif(LIGDEG61)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * positif(INDCTX) * LIG2",
          "linecol": [
            1291,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNIDEG",
          "linecol": [
            1291,
            1
          ]
        },
        "linecol": [
          1291,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123120,
      "linecol": [
        1288,
        7
      ]
    },
    "linecol": [
      1288,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1306,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1306,
            23
          ]
        }
      ],
      "linecol": [
        1306,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (IRNETBIS) * positif (SEUIL_61 - IAMD1) * positif (SEUIL_61 - NRINET) * positif (IBM23) * (1 - positif(LIG61DEG)) * (1 - null(V_REGCO-2)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * positif (INDCTX) * LIG2",
          "linecol": [
            1308,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEG61",
          "linecol": [
            1308,
            1
          ]
        },
        "linecol": [
          1308,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123121,
      "linecol": [
        1305,
        7
      ]
    },
    "linecol": [
      1305,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1321,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1321,
            23
          ]
        }
      ],
      "linecol": [
        1321,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) * positif (SEUIL_12 - IRNET - TAXANET - PCAPNET - TAXLOYNET - HAUTREVNET) * (1 - null(V_REGCO-2)) * (1 - positif(LIGNIDEG)) * (1 - positif(LIGDEG61)) * (1 - positif(LIG61DEG)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - positif(IMPRET)) * positif(INDCTX) * LIG2",
          "linecol": [
            1323,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEG12",
          "linecol": [
            1323,
            1
          ]
        },
        "linecol": [
          1323,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123122,
      "linecol": [
        1320,
        7
      ]
    },
    "linecol": [
      1320,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1336,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1336,
            23
          ]
        }
      ],
      "linecol": [
        1336,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDREV1A8) * positif(null(NATIMP - 1) + positif(NAPTEMP)) * positif(REVFONC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * LIG1",
          "linecol": [
            1338,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDIPLOI",
          "linecol": [
            1338,
            1
          ]
        },
        "linecol": [
          1338,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123124,
      "linecol": [
        1335,
        7
      ]
    },
    "linecol": [
      1335,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1346,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1346,
            23
          ]
        }
      ],
      "linecol": [
        1346,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDREV1A8) * positif(null(NATIMP) + positif(IREST) + (1 - positif(NAPTEMP))) * positif(REVFONC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * (1 - positif(LIGTROP)) * (1 - positif(LIGTROPREST)) * (1 - LIGDIPLOI) * LIG1",
          "linecol": [
            1348,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDIPLONI",
          "linecol": [
            1348,
            1
          ]
        },
        "linecol": [
          1348,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11123125,
      "linecol": [
        1345,
        7
      ]
    },
    "linecol": [
      1345,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1357,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1357,
            22
          ]
        }
      ],
      "linecol": [
        1357,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif ( IND_NI * (1 - positif(V_ANTRE)) + INDNMR1 + INDNMR2 + positif(NAT1BIS) *  null(NAPT) * (positif (IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET)) + positif(SEUIL_12 - (IAN + RPEN - IAVT + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - IRANT)) * positif_ou_nul(IAN + RPEN - IAVT + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - IRANT) ) * positif(INDREV1A8) * (1 - null(NATIMP - 1) + null(NATIMP - 1) * positif(IRANT)) * (1 - LIGPS) * LIG2",
          "linecol": [
            1358,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2355",
          "linecol": [
            1358,
            1
          ]
        },
        "linecol": [
          1358,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112355,
      "linecol": [
        1356,
        7
      ]
    },
    "linecol": [
      1356,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1370,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1370,
            23
          ]
        }
      ],
      "linecol": [
        1370,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD2LB) * LIG1 * LIG2 * (1-V_CNR)",
          "linecol": [
            1372,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2LB",
          "linecol": [
            1372,
            1
          ]
        },
        "linecol": [
          1372,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD7CY) * LIG1 * LIG2",
          "linecol": [
            1373,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG7CY",
          "linecol": [
            1373,
            1
          ]
        },
        "linecol": [
          1373,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CODRVG) * LIG1 * LIG2",
          "linecol": [
            1374,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRVG",
          "linecol": [
            1374,
            1
          ]
        },
        "linecol": [
          1374,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112382,
      "linecol": [
        1369,
        7
      ]
    },
    "linecol": [
      1369,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1377,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1377,
            22
          ]
        }
      ],
      "linecol": [
        1377,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "si (NATIMP=0 ou NATIMP=21 ou NATIMP=70 ou NATIMP=91) alors (IND_SPR * positif_ou_nul(V_8ZT - RBG) * positif(V_8ZT) * (1 - present(BRAS)) * (1 - present(IPSOUR)) * V_CR2 * LIG2) finsi",
          "linecol": [
            1379,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2380",
          "linecol": [
            1379,
            1
          ]
        },
        "linecol": [
          1379,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112380,
      "linecol": [
        1376,
        7
      ]
    },
    "linecol": [
      1376,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1386,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1386,
            23
          ]
        }
      ],
      "linecol": [
        1386,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "si ((IAVIM+NAPCRPAVIM)<=(IPSOUR * LIG1 )) alors ( positif(RBG - V_8ZT) * present(IPSOUR) * V_CR2 * LIG2) finsi",
          "linecol": [
            1388,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2383",
          "linecol": [
            1388,
            1
          ]
        },
        "linecol": [
          1388,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112383,
      "linecol": [
        1385,
        7
      ]
    },
    "linecol": [
      1385,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1394,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1394,
            21
          ]
        }
      ],
      "linecol": [
        1394,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(IND_REV)) * (1 - null(2 - V_REGCO)) * LIG2",
          "linecol": [
            1396,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2501",
          "linecol": [
            1396,
            1
          ]
        },
        "linecol": [
          1396,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(IND_REV)) * null(2 - V_REGCO) * LIG2",
          "linecol": [
            1398,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG25012",
          "linecol": [
            1398,
            1
          ]
        },
        "linecol": [
          1398,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REVFONC) * (1 - IND_REV8FV)",
          "linecol": [
            1400,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG8FV",
          "linecol": [
            1400,
            1
          ]
        },
        "linecol": [
          1400,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112501,
      "linecol": [
        1393,
        7
      ]
    },
    "linecol": [
      1393,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1403,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1403,
            22
          ]
        }
      ],
      "linecol": [
        1403,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(IND_REV)) * (1 - positif_ou_nul(IND_TDR)) * LIG2 * (1 - null(2 - V_REGCO))",
          "linecol": [
            1404,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2503",
          "linecol": [
            1404,
            1
          ]
        },
        "linecol": [
          1404,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1112503,
      "linecol": [
        1402,
        7
      ]
    },
    "linecol": [
      1402,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1410,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1410,
            22
          ]
        }
      ],
      "linecol": [
        1410,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(positif(V_FORVA) * (1 - positif_ou_nul(BAFV)) + positif(V_FORCA) * (1 - positif_ou_nul(BAFC)) + positif(V_FORPA) * (1 - positif_ou_nul(BAFP))) * (1 - positif(IPVLOC)) * LIG1",
          "linecol": [
            1411,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3510",
          "linecol": [
            1411,
            1
          ]
        },
        "linecol": [
          1411,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113510,
      "linecol": [
        1409,
        7
      ]
    },
    "linecol": [
      1409,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1417,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1417,
            22
          ]
        }
      ],
      "linecol": [
        1417,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIG4271 + LIG3710 + LIG3720 + LIG3730) * LIG1 * TYPE4",
          "linecol": [
            1419,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3700",
          "linecol": [
            1419,
            1
          ]
        },
        "linecol": [
          1419,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113700,
      "linecol": [
        1416,
        7
      ]
    },
    "linecol": [
      1416,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1422,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1422,
            23
          ]
        }
      ],
      "linecol": [
        1422,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(V_0AB) * LIG1) * (1 - positif(ANNUL2042 + 0))",
          "linecol": [
            1424,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG4271",
          "linecol": [
            1424,
            1
          ]
        },
        "linecol": [
          1424,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(20 - V_NOTRAIT) * positif(BOOL_0AZ) * LIG1",
          "linecol": [
            1426,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3710",
          "linecol": [
            1426,
            1
          ]
        },
        "linecol": [
          1426,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113710,
      "linecol": [
        1421,
        7
      ]
    },
    "linecol": [
      1421,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1429,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1429,
            22
          ]
        }
      ],
      "linecol": [
        1429,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(20 - V_NOTRAIT)) * (1 - positif(LIG3730)) * LIG1 * LIG2",
          "linecol": [
            1431,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3720",
          "linecol": [
            1431,
            1
          ]
        },
        "linecol": [
          1431,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113720,
      "linecol": [
        1428,
        7
      ]
    },
    "linecol": [
      1428,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1434,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1434,
            22
          ]
        }
      ],
      "linecol": [
        1434,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(20 - V_NOTRAIT)) * positif(BOOL_0AZ) * LIG1",
          "linecol": [
            1436,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3730",
          "linecol": [
            1436,
            1
          ]
        },
        "linecol": [
          1436,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113730,
      "linecol": [
        1433,
        7
      ]
    },
    "linecol": [
      1433,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1441,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1441,
            22
          ]
        }
      ],
      "linecol": [
        1441,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDTXMIN) * LIG1 * positif(IND_REV) * (1 - positif(ANNUL2042))",
          "linecol": [
            1442,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3740",
          "linecol": [
            1442,
            1
          ]
        },
        "linecol": [
          1442,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113740,
      "linecol": [
        1440,
        7
      ]
    },
    "linecol": [
      1440,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1445,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1445,
            22
          ]
        }
      ],
      "linecol": [
        1445,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "present(V_ZDC) * null(abs(V_ZDC - 1)) * positif(IREST) * LIG1",
          "linecol": [
            1446,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3750",
          "linecol": [
            1446,
            1
          ]
        },
        "linecol": [
          1446,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113750,
      "linecol": [
        1444,
        7
      ]
    },
    "linecol": [
      1444,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1449,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1449,
            23
          ]
        }
      ],
      "linecol": [
        1449,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRR2V + PRR2C + PRR2P + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + PENALIMV + PENALIMC + PENALIMP + 0)",
          "linecol": [
            1450,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPRR2",
          "linecol": [
            1450,
            1
          ]
        },
        "linecol": [
          1450,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111021,
      "linecol": [
        1448,
        7
      ]
    },
    "linecol": [
      1448,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1453,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1453,
            22
          ]
        }
      ],
      "linecol": [
        1453,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4:TSNN2iAFF)",
          "linecol": [
            1454,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG022",
          "linecol": [
            1454,
            1
          ]
        },
        "linecol": [
          1454,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111022,
      "linecol": [
        1452,
        7
      ]
    },
    "linecol": [
      1452,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1457,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1457,
            22
          ]
        }
      ],
      "linecol": [
        1457,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4:3TSNi)",
          "linecol": [
            1458,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG023",
          "linecol": [
            1458,
            1
          ]
        },
        "linecol": [
          1458,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111023,
      "linecol": [
        1456,
        7
      ]
    },
    "linecol": [
      1456,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1461,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1461,
            22
          ]
        }
      ],
      "linecol": [
        1461,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4:4TSNi)",
          "linecol": [
            1462,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG024",
          "linecol": [
            1462,
            1
          ]
        },
        "linecol": [
          1462,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111024,
      "linecol": [
        1460,
        7
      ]
    },
    "linecol": [
      1460,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1465,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1465,
            22
          ]
        }
      ],
      "linecol": [
        1465,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "CARPEV + CARPENBAV + PENSALV + PENSALNBV + CODRAZ",
          "linecol": [
            1466,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG062V",
          "linecol": [
            1466,
            1
          ]
        },
        "linecol": [
          1466,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CARPEC + CARPENBAC + PENSALC + PENSALNBC + CODRBZ",
          "linecol": [
            1467,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG062C",
          "linecol": [
            1467,
            1
          ]
        },
        "linecol": [
          1467,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4: CARPEPi + CARPENBAPi) + somme(i=1..4: PENSALPi + PENSALNBPi) + CODRCZ + CODRDZ + CODREZ + CODRFZ",
          "linecol": [
            1468,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG062P",
          "linecol": [
            1468,
            1
          ]
        },
        "linecol": [
          1468,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111062,
      "linecol": [
        1464,
        7
      ]
    },
    "linecol": [
      1464,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1470,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1470,
            21
          ]
        }
      ],
      "linecol": [
        1470,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4:PEBFi)",
          "linecol": [
            1471,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG066",
          "linecol": [
            1471,
            1
          ]
        },
        "linecol": [
          1471,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111066,
      "linecol": [
        1469,
        7
      ]
    },
    "linecol": [
      1469,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1473,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1473,
            22
          ]
        }
      ],
      "linecol": [
        1473,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "GLD1V + GLD1C",
          "linecol": [
            1474,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG390",
          "linecol": [
            1474,
            1
          ]
        },
        "linecol": [
          1474,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111390,
      "linecol": [
        1472,
        7
      ]
    },
    "linecol": [
      1472,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1477,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1477,
            23
          ]
        }
      ],
      "linecol": [
        1477,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(TSHALLOV + TSHALLOC + TSHALLOP) * positif_ou_nul(ALLOV + ALLOC + ALLOP) * LIG0  * LIG2",
          "linecol": [
            1478,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_SAL",
          "linecol": [
            1478,
            1
          ]
        },
        "linecol": [
          1478,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(ALLOV + ALLOC + ALLOP) * positif_ou_nul(TSHALLOV + TSHALLOC + TSHALLOP) * LIG0  * LIG2",
          "linecol": [
            1480,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_REVASS",
          "linecol": [
            1480,
            1
          ]
        },
        "linecol": [
          1480,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(TSBNV + TSBNC + TSBNP + F10AV + F10AC + F10AP + null(ALLOV + ALLOC + ALLOP) * null(TSHALLOV + TSHALLOC + TSHALLOP)) * LIG0 * LIG2",
          "linecol": [
            1482,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_SALASS",
          "linecol": [
            1482,
            1
          ]
        },
        "linecol": [
          1482,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(BPCOSAV + BPCOSAC + GLDGRATV + GLDGRATC) * LIG0 * LIG2",
          "linecol": [
            1486,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_GATASA",
          "linecol": [
            1486,
            1
          ]
        },
        "linecol": [
          1486,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(F10AV + F10BV) * LIG0 * LIG2",
          "linecol": [
            1488,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGF10V",
          "linecol": [
            1488,
            1
          ]
        },
        "linecol": [
          1488,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(F10AC + F10BC) * LIG0 * LIG2",
          "linecol": [
            1490,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGF10C",
          "linecol": [
            1490,
            1
          ]
        },
        "linecol": [
          1490,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(F10AP + F10BP) * LIG0 * LIG2",
          "linecol": [
            1492,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGF10P",
          "linecol": [
            1492,
            1
          ]
        },
        "linecol": [
          1492,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114100,
      "linecol": [
        1476,
        7
      ]
    },
    "linecol": [
      1476,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1495,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1495,
            23
          ]
        }
      ],
      "linecol": [
        1495,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(RCMABD) + present(RCMTNC) + present(RCMHAD) + present(RCMHAB) + present(RCMAV) + present(REGPRIV) + present(RCMFR) + present(DEFRCM) + present(DEFRCM2) + present(DEFRCM3) + present(DEFRCM4) + present(DEFRCM5) + present(DEFRCM6)) * (1 - positif(IPVLOC)) * LIG1 * LIG2 * positif(INDREV1A8IR)",
          "linecol": [
            1496,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCMABT",
          "linecol": [
            1496,
            1
          ]
        },
        "linecol": [
          1496,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(REVACT) + present(REVPEA) + present(PROVIE) + present(DISQUO) + present(RESTUC) + present(INTERE)) * (1 - positif(IPVLOC)) * LIG1 * LIG2 * positif(INDREV1A8IR)",
          "linecol": [
            1502,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG2RCMABT",
          "linecol": [
            1502,
            1
          ]
        },
        "linecol": [
          1502,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVBAR3VG) * (1 - positif(IPVLOC)) * LIG1 * LIG2 * positif(INDREV1A8IR)",
          "linecol": [
            1505,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPV3VG",
          "linecol": [
            1505,
            1
          ]
        },
        "linecol": [
          1505,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVBAR3WB) * (1 - positif(IPVLOC)) * LIG1 * LIG2 * positif(INDREV1A8IR)",
          "linecol": [
            1507,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPV3WB",
          "linecol": [
            1507,
            1
          ]
        },
        "linecol": [
          1507,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVBAR3VE) * (1 - positif(IPVLOC)) * LIG1 * LIG2 * positif(INDREV1A8IR)",
          "linecol": [
            1509,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPV3VE",
          "linecol": [
            1509,
            1
          ]
        },
        "linecol": [
          1509,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114500,
      "linecol": [
        1494,
        7
      ]
    },
    "linecol": [
      1494,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1512,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1512,
            22
          ]
        }
      ],
      "linecol": [
        1512,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif( PPETPV * PPESALVTOT + PPENBHV * PPESALVTOT + positif( present(BPCOSAV) + present(GLDGRATV) + present(GLD1V) + present(GLD2V) + present(GLD3V) + present(TSASSUV) + present(CARTSV) * present(CARTSNBAV) + present(CODDAJ) + present(CODEAJ) ) * (PPEPRIMEVT + PPEMAJORETTE * null(PPEPRIMECT)) + (PPEACV + PPENJV) * abs(PPERPROV) * (null(TSHALLOV+0) + positif(PPETPV + PPENBHV +0)) + abs(PPERPROV) * (PPEPRIMEVT + PPEMAJORETTE * null(PPEPRIMECT)) )",
          "linecol": [
            1519,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDPPEV",
          "linecol": [
            1519,
            1
          ]
        },
        "linecol": [
          1519,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( PPETPC * PPESALCTOT + PPENBHC * PPESALCTOT + positif( present(BPCOSAC) + present(GLDGRATV) + present(GLD1C) + present(GLD2C) + present(GLD3C) + present(TSASSUC) + present(CARTSC) * present(CARTSNBAC) + present(CODDBJ) + present(CODEBJ) ) * PPEPRIMECT + (PPEACC + PPENJC) * abs(PPERPROC) * (null(TSHALLOC+0) + positif(PPETPC + PPENBHC + 0)) + abs(PPERPROC) * PPEPRIMECT )",
          "linecol": [
            1535,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDPPEC",
          "linecol": [
            1535,
            1
          ]
        },
        "linecol": [
          1535,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(   somme(i=1..4:PPETPPi)*PPESALPTOT + somme(i=1..4:PPENBHi)*PPESALPTOT + (PPEACP+PPENJP)*abs(PPERPROP)*(null(TSHALLO1 + TSHALLO2 + TSHALLO3 + TSHALLO4 + 0) + positif (somme (i=1..4:PPETPPi + PPENBHi + 0))) + somme(i=1..4:present(CARTSPi) * present(CARTSNBAPi)) * PPEPRIMEPT + abs(PPERPROP)*PPEPRIMEPT )",
          "linecol": [
            1551,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDPPEP",
          "linecol": [
            1551,
            1
          ]
        },
        "linecol": [
          1551,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG0 * LIG2",
          "linecol": [
            1559,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TYPEPPE",
          "linecol": [
            1559,
            1
          ]
        },
        "linecol": [
          1559,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(positif(INDPPEV) * positif(INDPPEC) * positif(INDPPEP)) * TYPEPPE",
          "linecol": [
            1561,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEVCP",
          "linecol": [
            1561,
            1
          ]
        },
        "linecol": [
          1561,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(positif(INDPPEV) * null(INDPPEC) * null(INDPPEP)) * TYPEPPE",
          "linecol": [
            1563,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEV",
          "linecol": [
            1563,
            1
          ]
        },
        "linecol": [
          1563,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(positif(INDPPEV) * positif(INDPPEC) * null(INDPPEP)) * TYPEPPE",
          "linecol": [
            1565,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEVC",
          "linecol": [
            1565,
            1
          ]
        },
        "linecol": [
          1565,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(positif(INDPPEV) * null(INDPPEC) * positif(INDPPEP)) * TYPEPPE",
          "linecol": [
            1567,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEVP",
          "linecol": [
            1567,
            1
          ]
        },
        "linecol": [
          1567,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(null(INDPPEV) * positif(INDPPEC) * null(INDPPEP)) * TYPEPPE",
          "linecol": [
            1569,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEC",
          "linecol": [
            1569,
            1
          ]
        },
        "linecol": [
          1569,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(null(INDPPEV) * positif(INDPPEC) * positif(INDPPEP)) * TYPEPPE",
          "linecol": [
            1571,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPECP",
          "linecol": [
            1571,
            1
          ]
        },
        "linecol": [
          1571,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(null(INDPPEV) * null(INDPPEC) * positif(INDPPEP)) * TYPEPPE",
          "linecol": [
            1573,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEP",
          "linecol": [
            1573,
            1
          ]
        },
        "linecol": [
          1573,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGPPEVCP + LIGPPEV + LIGPPEVC + LIGPPEVP + LIGPPEC + LIGPPECP + LIGPPEP) * (1 - null(7 - PPENEXOV)) * (1 - null(11 - PPENEXOV)) * (1 - null(7 - PPENEXOC)) * (1 - null(11 - PPENEXOC)) * (1 - null(7 - PPENEXO1)) * (1 - null(11 - PPENEXO1)) * (1 - null(7 - PPENEXO2)) * (1 - null(11 - PPENEXO2)) * (1 - null(7 - PPENEXO3)) * (1 - null(11 - PPENEXO3)) * (1 - null(7 - PPENEXO4)) * (1 - null(11 - PPENEXO4)) * (1 - null(2 - PPEPEXOV)) * (1 - null(2 - PPEPEXOC)) * (1 - null(2 - PPEPEXO1)) * (1 - null(2 - PPEPEXO2)) * (1 - null(2 - PPEPEXO3)) * (1 - null(2 - PPEPEXO4))",
          "linecol": [
            1575,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDLIGPPE",
          "linecol": [
            1575,
            1
          ]
        },
        "linecol": [
          1575,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PPETOT) * (1 - null(7 - V_REGCO))",
          "linecol": [
            1589,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPETOT",
          "linecol": [
            1589,
            1
          ]
        },
        "linecol": [
          1589,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PPETOTMAY) * null(7 - V_REGCO)",
          "linecol": [
            1591,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEMAY",
          "linecol": [
            1591,
            1
          ]
        },
        "linecol": [
          1591,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "INDLIGPPE * null(PPETOTX)",
          "linecol": [
            1593,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPASPPE",
          "linecol": [
            1593,
            1
          ]
        },
        "linecol": [
          1593,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      1513,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      1513,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      1513,
                      12
                    ]
                  }
                ],
                "linecol": [
                  1513,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  1513,
                  6
                ]
              },
              "linecol": [
                1513,
                6
              ]
            }
          ],
          "linecol": [
            1513,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif(PPEACi* positif(abs(PPERPROi)))",
            "linecol": [
              1514,
              15
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPESAISITPi",
            "linecol": [
              1514,
              1
            ]
          },
          "linecol": [
            1514,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          1513,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      1516,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      1516,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      1516,
                      12
                    ]
                  }
                ],
                "linecol": [
                  1516,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  1516,
                  6
                ]
              },
              "linecol": [
                1516,
                6
              ]
            }
          ],
          "linecol": [
            1516,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif(PPENJi* positif(abs(PPERPROi)))",
            "linecol": [
              1517,
              16
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPESAISINBJi",
            "linecol": [
              1517,
              1
            ]
          },
          "linecol": [
            1517,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          1516,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114800,
      "linecol": [
        1511,
        7
      ]
    },
    "linecol": [
      1511,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1596,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1596,
            22
          ]
        }
      ],
      "linecol": [
        1596,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (PPETOTX) * LIG0",
          "linecol": [
            1597,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPIPPE",
          "linecol": [
            1597,
            1
          ]
        },
        "linecol": [
          1597,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1149000,
      "linecol": [
        1595,
        7
      ]
    },
    "linecol": [
      1595,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1599,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1599,
            22
          ]
        }
      ],
      "linecol": [
        1599,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(PPESALVTOT * INDLIGPPE + PPESALV * positif(PPEPRIMEVT) * positif(PPETOTX)) * (1-null(2 - V_REGCO)) * (1-null(4 - V_REGCO)) * INDPPEV * INDLIGPPE",
          "linecol": [
            1600,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEREVSALV",
          "linecol": [
            1600,
            1
          ]
        },
        "linecol": [
          1600,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PPESALCTOT * INDLIGPPE + PPESALC * positif(PPEPRIMECT) * positif(PPETOTX)) * (1-null(2 - V_REGCO)) * (1-null(4 - V_REGCO)) * INDPPEC * INDLIGPPE",
          "linecol": [
            1605,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEREVSALC",
          "linecol": [
            1605,
            1
          ]
        },
        "linecol": [
          1605,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PPESALPTOT + PPESALPTOT * INDLIGPPE +PPESALPTOT * positif(PPEPRIMEPT) * positif(PPETOTX)) * (1-null(2 - V_REGCO)) * (1-null(4 - V_REGCO)) * INDPPEP * INDLIGPPE",
          "linecol": [
            1610,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEREVSALP",
          "linecol": [
            1610,
            1
          ]
        },
        "linecol": [
          1610,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1149001,
      "linecol": [
        1598,
        7
      ]
    },
    "linecol": [
      1598,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1617,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1617,
            22
          ]
        }
      ],
      "linecol": [
        1617,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(PPETPV  * PPESALVTOT + positif(PPENBHV - 1820) + PPESALVTOT * INDLIGPPE * (1 - positif(LIGPPEHV)) + positif(PPEPRIMEVT) * positif(PPETOTX) * positif(PPESALV) * (1 - positif(LIGPPEHV)) + positif(PPESALV) * (1 - positif(LIGPPEHV))) * INDPPEV * positif(INDLIGPPE) * LIG0 * LIG2",
          "linecol": [
            1618,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TPLEINSALV",
          "linecol": [
            1618,
            1
          ]
        },
        "linecol": [
          1618,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(  PPETPC*PPESALCTOT + PPESALCTOT * INDLIGPPE * (1 - positif(LIGPPEHC)) + positif(PPENBHC - 1820) + positif(PPEPRIMECT) * positif(PPETOTX) * positif(PPESALC) * (1 - positif(LIGPPEHC)) +positif(PPESALC) * (1 - positif(LIGPPEHC))) * INDPPEC * positif(INDLIGPPE) * LIG0 * LIG2",
          "linecol": [
            1626,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TPLEINSALC",
          "linecol": [
            1626,
            1
          ]
        },
        "linecol": [
          1626,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif((PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4) * PPESALPTOT + positif(PPENBH1 - 1820) + positif(PPENBH2 - 1820) + positif(PPENBH3 - 1820) + positif(PPENBH4 - 1820) + PPESALPTOT * INDLIGPPE * (1 - positif(LIGPPEHP)) + positif(PPEPRIMEPT) * positif(PPETOTX) * positif(PPESALPTOT) * (1 - positif(LIGPPEHP)) +positif(PPESALPTOT) * (1 - positif(LIGPPEHP))) * INDPPEP * positif(INDLIGPPE) * LIG0 * LIG2",
          "linecol": [
            1635,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TPLEINSALP",
          "linecol": [
            1635,
            1
          ]
        },
        "linecol": [
          1635,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(PPEACV + positif(PPENJV - 360) + positif(positif(1-null(PPE_AVRPRO1V+0)) * positif(positif(PPETOTX) + positif(PPEREVSALV)) * positif(abs(PPERPROV))) * (1 - positif(LIGPPEJV))) * positif(INDLIGPPE) + positif(PPESAISITPV) * positif(PPEACV)) * INDPPEV * LIG0 * LIG2",
          "linecol": [
            1645,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TPLEINNSALV",
          "linecol": [
            1645,
            1
          ]
        },
        "linecol": [
          1645,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(PPEACC + positif(PPENJC - 360) + positif(positif(1-null(PPE_AVRPRO1C+0)) * positif(positif(PPETOTX) + positif(PPEREVSALC)) * positif(abs(PPERPROC))) * (1 - positif(LIGPPEJC)))* positif(INDLIGPPE) + positif(PPESAISITPC) * positif(PPEACC)) * INDPPEC * LIG0 * LIG2",
          "linecol": [
            1654,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TPLEINNSALC",
          "linecol": [
            1654,
            1
          ]
        },
        "linecol": [
          1654,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(PPEACP + positif(PPENJP - 360) + positif(positif(1 - null(PPE_AVRPRO1P+0)) * positif(positif(PPETOTX) + positif(PPEREVSALP)) * positif(abs(PPERPROP))) * (1 - positif(LIGPPEJP)))* positif(INDLIGPPE) + positif(PPESAISITPP) * positif(PPEACP)) * INDPPEP * LIG0 * LIG2",
          "linecol": [
            1663,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TPLEINNSALP",
          "linecol": [
            1663,
            1
          ]
        },
        "linecol": [
          1663,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114900,
      "linecol": [
        1616,
        7
      ]
    },
    "linecol": [
      1616,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1673,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1673,
            22
          ]
        }
      ],
      "linecol": [
        1673,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(positif(1 - null(PPE_AVRPRO1V+0)) * positif(positif(PPETOTX) + positif(PPEREVSALV)) * positif(INDLIGPPE)) + positif(PPESAISITPV + PPESAISINBJV)) * INDPPEV * LIG0 * LIG2",
          "linecol": [
            1674,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPENSV",
          "linecol": [
            1674,
            1
          ]
        },
        "linecol": [
          1674,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(positif(1 - null(PPE_AVRPRO1C+0)) * positif(positif(PPETOTX) + positif(PPEREVSALC)) * positif(INDLIGPPE)) + positif(PPESAISITPC + PPESAISINBJC)) * INDPPEC * LIG0 * LIG2",
          "linecol": [
            1681,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPENSC",
          "linecol": [
            1681,
            1
          ]
        },
        "linecol": [
          1681,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(positif(1-null(PPE_AVRPRO1P+0)) * positif(positif(PPETOTX) + positif(PPEREVSALP)) * positif(INDLIGPPE)) + positif(PPESAISITPP + PPESAISINBJP)) * INDPPEP * LIG0 * LIG2",
          "linecol": [
            1688,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPENSP",
          "linecol": [
            1688,
            1
          ]
        },
        "linecol": [
          1688,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114902,
      "linecol": [
        1672,
        7
      ]
    },
    "linecol": [
      1672,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1696,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1696,
            21
          ]
        }
      ],
      "linecol": [
        1696,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(1820 - PPENBHV) * present(PPENBHV) * INDPPEV * positif(INDLIGPPE) * LIG0 * LIG2",
          "linecol": [
            1697,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEHV",
          "linecol": [
            1697,
            1
          ]
        },
        "linecol": [
          1697,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(1820 - PPENBHC) * present(PPENBHC) * INDPPEC * positif(INDLIGPPE) * LIG0 * LIG2",
          "linecol": [
            1700,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEHC",
          "linecol": [
            1700,
            1
          ]
        },
        "linecol": [
          1700,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( positif_ou_nul(1820 - PPENBH1) * present(PPENBH1) + positif_ou_nul(1820 - PPENBH2) * present(PPENBH2) + positif_ou_nul(1820 - PPENBH3) * present(PPENBH3) + positif_ou_nul(1820 - PPENBH4) * present(PPENBH4) ) * INDPPEP * positif(INDLIGPPE) * LIG0 * LIG2",
          "linecol": [
            1703,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEHP",
          "linecol": [
            1703,
            1
          ]
        },
        "linecol": [
          1703,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(360 - PPENJV) * positif(INDLIGPPE) * LIG0 * LIG2 * present(PPENJV) * positif(PPENJV) + positif(PPESAISITPV) * positif(PPEACV)",
          "linecol": [
            1712,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEJV",
          "linecol": [
            1712,
            1
          ]
        },
        "linecol": [
          1712,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(360 - PPENJC) * positif(INDLIGPPE) * LIG0 * LIG2 * positif(PPENJC) * present(PPENJC) + positif(PPESAISITPC) * positif(PPEACC)",
          "linecol": [
            1716,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEJC",
          "linecol": [
            1716,
            1
          ]
        },
        "linecol": [
          1716,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(360 - PPENJP) * positif(INDLIGPPE) * LIG0 * LIG2 * positif(PPENJP) * present(PPENJP) + positif(PPESAISITPP) * positif(PPEACP)",
          "linecol": [
            1720,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPPEJP",
          "linecol": [
            1720,
            1
          ]
        },
        "linecol": [
          1720,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114901,
      "linecol": [
        1695,
        7
      ]
    },
    "linecol": [
      1695,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1726,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1726,
            23
          ]
        }
      ],
      "linecol": [
        1726,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGRNIDF + somme(i=0..5:LIGRNIDFi) + LIGDEFBA + LIGDRFRP + LIG3250 + LIGIRECR + LIGDRCVM + LIGDLMRN + LIGBNCDF + somme(i=V,C,P:LIGMIBDREPi + LIGMBDREPNPi + LIGSPEDREPi + LIGSPDREPNPi) + LIGLOCNEUF + somme(i=1..6:LIGLOCNEUFi) + LIGPATNATR + LIGRDUFLOTOT + LIGRPINELTOT + LIGRCELFD + LIGRCELFABC + LIGRCEL2012 + LIGRCELJBGL + LIGRCELJOQR + LIGRCELJP + LIGRCEL + LIGRCELNBGL + LIGRCELCOM + LIGRCELNQ + LIGRCELHJK + LIGRCELHNO + LIGRCELHLM + LIGRRCEL1 +  LIGRRCEL2 +  LIGRRCEL3 +  LIGRRCEL4 + LIGRCODOU + LIGRCODJT + LIGRCODJU + LIGRLOCIDFG + LIGREPLOCIE + LIGNEUV + LIGRNEUV + LIGVIEU + LIGCOMP01 + LIGREPQKG + LIGREPQNH + LIGREPQUS + LIGREPQWB + LIGREPMMQE + LIGREPLI + LIGREPMC + LIGREPKU + LIGREPLH + LIGREPMB + LIGREPKT + LIGREPQV + LIGREPQO + LIGREPQP + LIGREPQR + LIGREPQF + LIGREPQG + LIGREPQI + LIGREPPAK + LIGREPPBL + LIGREPPDO + LIGREPPEK + LIGREPPFL + LIGREPPHO + LIGREPPIZ + LIGREPPJA + LIGREPPLB + LIGREPTB + LIGREPPM + LIGREPPN + LIGREPPO + LIGREPPP + LIGREPPR + LIGREPPS + LIGREPPT + LIGREPPU + LIGREPPW + LIGREPPX + LIGREPPY + LIGREPRG + LIGREPRI + LIGREPRM + LIGREPRC + LIGREPRR + LIGREPRUP + LIGREPRVQ + LIGREPRWR + LIGREPRYT + LIGREPNW + LIGREPSA + LIGREPSB + LIGREPSC + LIGREPSE + LIGREPSF + LIGREPSG + LIGREPSH + LIGREPSJ + LIGREPSM + LIGREPSU + LIGREPSV + LIGREPSW + LIGREPSY + LIGREPDOMOUT + LIGPME3 + LIGPME2 + LIGPME1 + LIGPMECU + LIGRSN + LIGRSN2 + LIGRSN1 + LIGRSN0 + LIGPLAFRSN + LIGPLAFRSN4 + LIGPLAFRSN3 + LIGREPDON + LIGREPDONR + LIGREPDONR1 + LIGREPDONR2 + LIGREPDONR3 + LIGREPDONR4 + LIGREPOU + LIGREP7PA + LIGREP7PB + LIGREP7PC + LIGREP7PD + LIGREP7PE + LIGREPDOM + LIGREPNEUV + LIGREPCODJT + LIGREPLOCNT + LIGRESIREP + LIGREPMEU + LIGREPREPAR + LIGLOCRES + LIGDFRCM + LIGPME + LIGREPCORSE + LIGREPRECH + LIGREPCICE + LIGDEFPLOC + LIGFOREST + LIGNFOREST + LIGREP7UP + LIGREP7UA + LIGREP7UT + LIGREP7UB) * LIG2",
          "linecol": [
            1728,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_REPORT",
          "linecol": [
            1728,
            1
          ]
        },
        "linecol": [
          1728,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113200,
      "linecol": [
        1725,
        7
      ]
    },
    "linecol": [
      1725,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1764,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1764,
            22
          ]
        }
      ],
      "linecol": [
        1764,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(RNIDF)) * (1 - null(4-V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1765,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRNIDF",
          "linecol": [
            1765,
            1
          ]
        },
        "linecol": [
          1765,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(RNIDF0)) * positif(positif(abs(RNIDF))+positif(FLAGRETARD08+FLAGDEFAUT11)) * (1 - null(4-V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1766,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRNIDF0",
          "linecol": [
            1766,
            1
          ]
        },
        "linecol": [
          1766,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(RNIDF1)) * positif(positif(abs(RNIDF))+positif(FLAGRETARD08+FLAGDEFAUT11)) * (1 - null(4-V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1767,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRNIDF1",
          "linecol": [
            1767,
            1
          ]
        },
        "linecol": [
          1767,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(RNIDF2)) * positif(positif(abs(RNIDF))+positif(FLAGRETARD08+FLAGDEFAUT11)) * (1 - null(4-V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1768,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRNIDF2",
          "linecol": [
            1768,
            1
          ]
        },
        "linecol": [
          1768,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(RNIDF3)) * positif(positif(abs(RNIDF))+positif(FLAGRETARD08+FLAGDEFAUT11)) * (1 - null(4-V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1769,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRNIDF3",
          "linecol": [
            1769,
            1
          ]
        },
        "linecol": [
          1769,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(RNIDF4)) * positif(positif(abs(RNIDF))+positif(FLAGRETARD08+FLAGDEFAUT11)) * (1 - null(4-V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1770,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRNIDF4",
          "linecol": [
            1770,
            1
          ]
        },
        "linecol": [
          1770,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(RNIDF5)) * positif(positif(abs(RNIDF))+positif(FLAGRETARD08+FLAGDEFAUT11)) * (1 - null(4-V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1771,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRNIDF5",
          "linecol": [
            1771,
            1
          ]
        },
        "linecol": [
          1771,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111681,
      "linecol": [
        1763,
        7
      ]
    },
    "linecol": [
      1763,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1774,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1774,
            22
          ]
        }
      ],
      "linecol": [
        1774,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(DALNP) * LIG1  * LIG2",
          "linecol": [
            1776,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3250",
          "linecol": [
            1776,
            1
          ]
        },
        "linecol": [
          1776,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113250,
      "linecol": [
        1773,
        7
      ]
    },
    "linecol": [
      1773,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1779,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1779,
            21
          ]
        }
      ],
      "linecol": [
        1779,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPINV) * LIG1",
          "linecol": [
            1780,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCNEUF",
          "linecol": [
            1780,
            1
          ]
        },
        "linecol": [
          1780,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL1) * LIG1",
          "linecol": [
            1781,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCNEUF1",
          "linecol": [
            1781,
            1
          ]
        },
        "linecol": [
          1781,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL2) * LIG1",
          "linecol": [
            1782,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCNEUF2",
          "linecol": [
            1782,
            1
          ]
        },
        "linecol": [
          1782,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL3) * LIG1",
          "linecol": [
            1783,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCNEUF3",
          "linecol": [
            1783,
            1
          ]
        },
        "linecol": [
          1783,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL4) * LIG1",
          "linecol": [
            1784,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCNEUF4",
          "linecol": [
            1784,
            1
          ]
        },
        "linecol": [
          1784,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL5) * LIG1",
          "linecol": [
            1785,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCNEUF5",
          "linecol": [
            1785,
            1
          ]
        },
        "linecol": [
          1785,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL6) * LIG1",
          "linecol": [
            1786,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCNEUF6",
          "linecol": [
            1786,
            1
          ]
        },
        "linecol": [
          1786,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPINVRES) * LIG1",
          "linecol": [
            1787,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCRES",
          "linecol": [
            1787,
            1
          ]
        },
        "linecol": [
          1787,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL1RES) * LIG1",
          "linecol": [
            1788,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCRES1",
          "linecol": [
            1788,
            1
          ]
        },
        "linecol": [
          1788,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL2RES) * LIG1",
          "linecol": [
            1789,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCRES2",
          "linecol": [
            1789,
            1
          ]
        },
        "linecol": [
          1789,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL3RES) * LIG1",
          "linecol": [
            1790,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCRES3",
          "linecol": [
            1790,
            1
          ]
        },
        "linecol": [
          1790,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL4RES) * LIG1",
          "linecol": [
            1791,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCRES4",
          "linecol": [
            1791,
            1
          ]
        },
        "linecol": [
          1791,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVL5RES) * LIG1",
          "linecol": [
            1792,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCRES5",
          "linecol": [
            1792,
            1
          ]
        },
        "linecol": [
          1792,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111030,
      "linecol": [
        1778,
        7
      ]
    },
    "linecol": [
      1778,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1795,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1795,
            22
          ]
        }
      ],
      "linecol": [
        1795,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(DUFLOFI) * LIG1 * LIG2",
          "linecol": [
            1797,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDUFI",
          "linecol": [
            1797,
            1
          ]
        },
        "linecol": [
          1797,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DDUFLOGIH) * LIG1 * LIG2",
          "linecol": [
            1798,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDUFLOGIH",
          "linecol": [
            1798,
            1
          ]
        },
        "linecol": [
          1798,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DDUFLOEKL) * LIG1 * LIG2",
          "linecol": [
            1799,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDUFLOEKL",
          "linecol": [
            1799,
            1
          ]
        },
        "linecol": [
          1799,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DPIQABCD) * LIG1 * LIG2",
          "linecol": [
            1800,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPIQABCD",
          "linecol": [
            1800,
            1
          ]
        },
        "linecol": [
          1800,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIGDUFI + LIGDUFLOGIH + LIGDUFLOEKL",
          "linecol": [
            1801,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDUFLOT",
          "linecol": [
            1801,
            1
          ]
        },
        "linecol": [
          1801,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIGPIQABCD",
          "linecol": [
            1802,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPINEL",
          "linecol": [
            1802,
            1
          ]
        },
        "linecol": [
          1802,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111386,
      "linecol": [
        1794,
        7
      ]
    },
    "linecol": [
      1794,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1804,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1804,
            22
          ]
        }
      ],
      "linecol": [
        1804,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVDUEKL) * LIG1 * LIG2",
          "linecol": [
            1806,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRDUEKL",
          "linecol": [
            1806,
            1
          ]
        },
        "linecol": [
          1806,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVPIQBD) * LIG1 * LIG2",
          "linecol": [
            1807,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRPIQBD",
          "linecol": [
            1807,
            1
          ]
        },
        "linecol": [
          1807,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVPIQAC) * LIG1 * LIG2",
          "linecol": [
            1808,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRPIQAC",
          "linecol": [
            1808,
            1
          ]
        },
        "linecol": [
          1808,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVDUGIH) * LIG1 * LIG2",
          "linecol": [
            1809,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRDUGIH",
          "linecol": [
            1809,
            1
          ]
        },
        "linecol": [
          1809,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIGRDUEKL + LIGRDUGIH",
          "linecol": [
            1810,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRDUFLOTOT",
          "linecol": [
            1810,
            1
          ]
        },
        "linecol": [
          1810,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIGRPIQBD + LIGRPIQAC",
          "linecol": [
            1811,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRPINELTOT",
          "linecol": [
            1811,
            1
          ]
        },
        "linecol": [
          1811,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111387,
      "linecol": [
        1803,
        7
      ]
    },
    "linecol": [
      1803,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1813,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1813,
            22
          ]
        }
      ],
      "linecol": [
        1813,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLA) * LIG1 * LIG2",
          "linecol": [
            1815,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLA",
          "linecol": [
            1815,
            1
          ]
        },
        "linecol": [
          1815,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLB) * LIG1 * LIG2",
          "linecol": [
            1817,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLB",
          "linecol": [
            1817,
            1
          ]
        },
        "linecol": [
          1817,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLE) * LIG1 * LIG2",
          "linecol": [
            1819,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLE",
          "linecol": [
            1819,
            1
          ]
        },
        "linecol": [
          1819,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLM) * LIG1 * LIG2",
          "linecol": [
            1821,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLM",
          "linecol": [
            1821,
            1
          ]
        },
        "linecol": [
          1821,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLN) * LIG1 * LIG2",
          "linecol": [
            1823,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLN",
          "linecol": [
            1823,
            1
          ]
        },
        "linecol": [
          1823,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLC) * LIG1 * LIG2",
          "linecol": [
            1825,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLC",
          "linecol": [
            1825,
            1
          ]
        },
        "linecol": [
          1825,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLD) * LIG1 * LIG2",
          "linecol": [
            1827,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLD",
          "linecol": [
            1827,
            1
          ]
        },
        "linecol": [
          1827,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLS) * LIG1 * LIG2",
          "linecol": [
            1829,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLS",
          "linecol": [
            1829,
            1
          ]
        },
        "linecol": [
          1829,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLT) * LIG1 * LIG2",
          "linecol": [
            1831,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLT",
          "linecol": [
            1831,
            1
          ]
        },
        "linecol": [
          1831,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLF) * LIG1 * LIG2",
          "linecol": [
            1833,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLF",
          "linecol": [
            1833,
            1
          ]
        },
        "linecol": [
          1833,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLZ) * LIG1 * LIG2",
          "linecol": [
            1835,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLZ",
          "linecol": [
            1835,
            1
          ]
        },
        "linecol": [
          1835,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDLX) * LIG1 * LIG2",
          "linecol": [
            1837,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELLX",
          "linecol": [
            1837,
            1
          ]
        },
        "linecol": [
          1837,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDMG) * LIG1 * LIG2",
          "linecol": [
            1839,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELMG",
          "linecol": [
            1839,
            1
          ]
        },
        "linecol": [
          1839,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELRREDMH) * LIG1 * LIG2",
          "linecol": [
            1841,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELMH",
          "linecol": [
            1841,
            1
          ]
        },
        "linecol": [
          1841,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHS) * LIG1 * LIG2",
          "linecol": [
            1843,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHS",
          "linecol": [
            1843,
            1
          ]
        },
        "linecol": [
          1843,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHR) * LIG1 * LIG2",
          "linecol": [
            1845,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHR",
          "linecol": [
            1845,
            1
          ]
        },
        "linecol": [
          1845,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHU) * LIG1 * LIG2",
          "linecol": [
            1847,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHU",
          "linecol": [
            1847,
            1
          ]
        },
        "linecol": [
          1847,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHT) * LIG1 * LIG2",
          "linecol": [
            1849,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHT",
          "linecol": [
            1849,
            1
          ]
        },
        "linecol": [
          1849,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHZ) * LIG1 * LIG2",
          "linecol": [
            1851,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHZ",
          "linecol": [
            1851,
            1
          ]
        },
        "linecol": [
          1851,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHX) * LIG1 * LIG2",
          "linecol": [
            1853,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHX",
          "linecol": [
            1853,
            1
          ]
        },
        "linecol": [
          1853,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHW) * LIG1 * LIG2",
          "linecol": [
            1855,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHW",
          "linecol": [
            1855,
            1
          ]
        },
        "linecol": [
          1855,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHV) * LIG1 * LIG2",
          "linecol": [
            1857,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHV",
          "linecol": [
            1857,
            1
          ]
        },
        "linecol": [
          1857,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHF) * LIG1 * LIG2",
          "linecol": [
            1859,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHF",
          "linecol": [
            1859,
            1
          ]
        },
        "linecol": [
          1859,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHE) * LIG1 * LIG2",
          "linecol": [
            1861,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHE",
          "linecol": [
            1861,
            1
          ]
        },
        "linecol": [
          1861,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHD) * LIG1 * LIG2",
          "linecol": [
            1863,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHD",
          "linecol": [
            1863,
            1
          ]
        },
        "linecol": [
          1863,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHH) * LIG1 * LIG2",
          "linecol": [
            1865,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHH",
          "linecol": [
            1865,
            1
          ]
        },
        "linecol": [
          1865,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHG) * LIG1 * LIG2",
          "linecol": [
            1867,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHG",
          "linecol": [
            1867,
            1
          ]
        },
        "linecol": [
          1867,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHB) * LIG1 * LIG2",
          "linecol": [
            1869,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHB",
          "linecol": [
            1869,
            1
          ]
        },
        "linecol": [
          1869,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPHA) * LIG1 * LIG2",
          "linecol": [
            1871,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHA",
          "linecol": [
            1871,
            1
          ]
        },
        "linecol": [
          1871,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGU) * LIG1 * LIG2",
          "linecol": [
            1873,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGU",
          "linecol": [
            1873,
            1
          ]
        },
        "linecol": [
          1873,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGX) * LIG1 * LIG2",
          "linecol": [
            1875,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGX",
          "linecol": [
            1875,
            1
          ]
        },
        "linecol": [
          1875,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGT) * LIG1 * LIG2",
          "linecol": [
            1877,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGT",
          "linecol": [
            1877,
            1
          ]
        },
        "linecol": [
          1877,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGS) * LIG1 * LIG2",
          "linecol": [
            1879,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGS",
          "linecol": [
            1879,
            1
          ]
        },
        "linecol": [
          1879,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGW) * LIG1 * LIG2",
          "linecol": [
            1881,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGW",
          "linecol": [
            1881,
            1
          ]
        },
        "linecol": [
          1881,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGP) * LIG1 * LIG2",
          "linecol": [
            1883,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGP",
          "linecol": [
            1883,
            1
          ]
        },
        "linecol": [
          1883,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGL) * LIG1 * LIG2",
          "linecol": [
            1885,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGL",
          "linecol": [
            1885,
            1
          ]
        },
        "linecol": [
          1885,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGV) * LIG1 * LIG2",
          "linecol": [
            1887,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGV",
          "linecol": [
            1887,
            1
          ]
        },
        "linecol": [
          1887,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGK) * LIG1 * LIG2",
          "linecol": [
            1889,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGK",
          "linecol": [
            1889,
            1
          ]
        },
        "linecol": [
          1889,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPGJ) * LIG1 * LIG2",
          "linecol": [
            1891,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELGJ",
          "linecol": [
            1891,
            1
          ]
        },
        "linecol": [
          1891,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYH) * LIG1 * LIG2",
          "linecol": [
            1893,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYH",
          "linecol": [
            1893,
            1
          ]
        },
        "linecol": [
          1893,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYL) * LIG1 * LIG2",
          "linecol": [
            1895,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYL",
          "linecol": [
            1895,
            1
          ]
        },
        "linecol": [
          1895,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYG) * LIG1 * LIG2",
          "linecol": [
            1897,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYG",
          "linecol": [
            1897,
            1
          ]
        },
        "linecol": [
          1897,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYF) * LIG1 * LIG2",
          "linecol": [
            1899,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYF",
          "linecol": [
            1899,
            1
          ]
        },
        "linecol": [
          1899,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYK) * LIG1 * LIG2",
          "linecol": [
            1901,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYK",
          "linecol": [
            1901,
            1
          ]
        },
        "linecol": [
          1901,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYE) * LIG1 * LIG2",
          "linecol": [
            1903,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYE",
          "linecol": [
            1903,
            1
          ]
        },
        "linecol": [
          1903,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYD) * LIG1 * LIG2",
          "linecol": [
            1905,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYD",
          "linecol": [
            1905,
            1
          ]
        },
        "linecol": [
          1905,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYJ) * LIG1 * LIG2",
          "linecol": [
            1907,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYJ",
          "linecol": [
            1907,
            1
          ]
        },
        "linecol": [
          1907,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYC) * LIG1 * LIG2",
          "linecol": [
            1909,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYC",
          "linecol": [
            1909,
            1
          ]
        },
        "linecol": [
          1909,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYB) * LIG1 * LIG2",
          "linecol": [
            1911,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYB",
          "linecol": [
            1911,
            1
          ]
        },
        "linecol": [
          1911,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYI) * LIG1 * LIG2",
          "linecol": [
            1913,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYI",
          "linecol": [
            1913,
            1
          ]
        },
        "linecol": [
          1913,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELREPYA) * LIG1 * LIG2",
          "linecol": [
            1915,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELYA",
          "linecol": [
            1915,
            1
          ]
        },
        "linecol": [
          1915,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELHM) * LIG1 * LIG2",
          "linecol": [
            1917,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHM",
          "linecol": [
            1917,
            1
          ]
        },
        "linecol": [
          1917,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELHL) * LIG1 * LIG2",
          "linecol": [
            1919,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHL",
          "linecol": [
            1919,
            1
          ]
        },
        "linecol": [
          1919,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELHNO) * LIG1 * LIG2",
          "linecol": [
            1921,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHNO",
          "linecol": [
            1921,
            1
          ]
        },
        "linecol": [
          1921,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELHJK) * LIG1 * LIG2",
          "linecol": [
            1923,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELHJK",
          "linecol": [
            1923,
            1
          ]
        },
        "linecol": [
          1923,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELNQ) * LIG1 * LIG2",
          "linecol": [
            1925,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELNQ",
          "linecol": [
            1925,
            1
          ]
        },
        "linecol": [
          1925,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELNBGL) * LIG1 * LIG2",
          "linecol": [
            1927,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELNBGL",
          "linecol": [
            1927,
            1
          ]
        },
        "linecol": [
          1927,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELCOM) * LIG1 * LIG2",
          "linecol": [
            1929,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELCOM",
          "linecol": [
            1929,
            1
          ]
        },
        "linecol": [
          1929,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCEL) * LIG1 * LIG2",
          "linecol": [
            1931,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCEL",
          "linecol": [
            1931,
            1
          ]
        },
        "linecol": [
          1931,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELJP) * LIG1 * LIG2",
          "linecol": [
            1933,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELJP",
          "linecol": [
            1933,
            1
          ]
        },
        "linecol": [
          1933,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELJBGL) * LIG1 * LIG2",
          "linecol": [
            1935,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELJBGL",
          "linecol": [
            1935,
            1
          ]
        },
        "linecol": [
          1935,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELJOQR) * LIG1 * LIG2",
          "linecol": [
            1937,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELJOQR",
          "linecol": [
            1937,
            1
          ]
        },
        "linecol": [
          1937,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCEL2012) * LIG1 * LIG2",
          "linecol": [
            1939,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCEL2012",
          "linecol": [
            1939,
            1
          ]
        },
        "linecol": [
          1939,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELFD) * LIG1 * LIG2",
          "linecol": [
            1941,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELFD",
          "linecol": [
            1941,
            1
          ]
        },
        "linecol": [
          1941,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCELFABC) * LIG1 * LIG2",
          "linecol": [
            1943,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCELFABC",
          "linecol": [
            1943,
            1
          ]
        },
        "linecol": [
          1943,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111388,
      "linecol": [
        1812,
        7
      ]
    },
    "linecol": [
      1812,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            1946,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            1946,
            21
          ]
        }
      ],
      "linecol": [
        1946,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCEL1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1948,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCEL",
          "linecol": [
            1948,
            1
          ]
        },
        "linecol": [
          1948,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELNBGL1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1950,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELNBGL",
          "linecol": [
            1950,
            1
          ]
        },
        "linecol": [
          1950,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELCOM1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1952,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELCOM",
          "linecol": [
            1952,
            1
          ]
        },
        "linecol": [
          1952,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELNQ1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1954,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELNQ",
          "linecol": [
            1954,
            1
          ]
        },
        "linecol": [
          1954,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELHJK1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1956,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELHJK",
          "linecol": [
            1956,
            1
          ]
        },
        "linecol": [
          1956,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELHNO1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1958,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELHNO",
          "linecol": [
            1958,
            1
          ]
        },
        "linecol": [
          1958,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELHLM1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1960,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELHLM",
          "linecol": [
            1960,
            1
          ]
        },
        "linecol": [
          1960,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELJP1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1962,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELJP",
          "linecol": [
            1962,
            1
          ]
        },
        "linecol": [
          1962,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELJOQR1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1964,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELJOQR",
          "linecol": [
            1964,
            1
          ]
        },
        "linecol": [
          1964,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELJBGL1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1966,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELJBGL",
          "linecol": [
            1966,
            1
          ]
        },
        "linecol": [
          1966,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIV2012CEL1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1968,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCEL2012",
          "linecol": [
            1968,
            1
          ]
        },
        "linecol": [
          1968,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELFABC1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1970,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELFABC",
          "linecol": [
            1970,
            1
          ]
        },
        "linecol": [
          1970,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIVCELFD1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1972,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCELFD",
          "linecol": [
            1972,
            1
          ]
        },
        "linecol": [
          1972,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELMG + RRCELMH + RRCEL2012) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1975,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL1",
          "linecol": [
            1975,
            1
          ]
        },
        "linecol": [
          1975,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELMG) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1976,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL11",
          "linecol": [
            1976,
            1
          ]
        },
        "linecol": [
          1976,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELMH) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1977,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL12",
          "linecol": [
            1977,
            1
          ]
        },
        "linecol": [
          1977,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCEL2012) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1978,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL13",
          "linecol": [
            1978,
            1
          ]
        },
        "linecol": [
          1978,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCEL2011 + RRCELLF + RRCELLZ + RRCELLX) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1980,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL2",
          "linecol": [
            1980,
            1
          ]
        },
        "linecol": [
          1980,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLF) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1981,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL21",
          "linecol": [
            1981,
            1
          ]
        },
        "linecol": [
          1981,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLZ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1982,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL22",
          "linecol": [
            1982,
            1
          ]
        },
        "linecol": [
          1982,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLX) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1983,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL23",
          "linecol": [
            1983,
            1
          ]
        },
        "linecol": [
          1983,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCEL2011) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1984,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL24",
          "linecol": [
            1984,
            1
          ]
        },
        "linecol": [
          1984,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCEL2010 + RRCELLC + RRCELLD + RRCELLS + RRCELLT) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1986,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL3",
          "linecol": [
            1986,
            1
          ]
        },
        "linecol": [
          1986,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1987,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL31",
          "linecol": [
            1987,
            1
          ]
        },
        "linecol": [
          1987,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLD) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1988,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL32",
          "linecol": [
            1988,
            1
          ]
        },
        "linecol": [
          1988,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLS) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1989,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL33",
          "linecol": [
            1989,
            1
          ]
        },
        "linecol": [
          1989,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLT) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1990,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL34",
          "linecol": [
            1990,
            1
          ]
        },
        "linecol": [
          1990,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCEL2010) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1991,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL35",
          "linecol": [
            1991,
            1
          ]
        },
        "linecol": [
          1991,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCEL2009 + RRCELLA + RRCELLB + RRCELLE + RRCELLM + RRCELLN) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1993,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL4",
          "linecol": [
            1993,
            1
          ]
        },
        "linecol": [
          1993,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1994,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL41",
          "linecol": [
            1994,
            1
          ]
        },
        "linecol": [
          1994,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1995,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL42",
          "linecol": [
            1995,
            1
          ]
        },
        "linecol": [
          1995,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1996,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL43",
          "linecol": [
            1996,
            1
          ]
        },
        "linecol": [
          1996,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLM) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1997,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL44",
          "linecol": [
            1997,
            1
          ]
        },
        "linecol": [
          1997,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCELLN) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1998,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL45",
          "linecol": [
            1998,
            1
          ]
        },
        "linecol": [
          1998,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RRCEL2009) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            1999,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRRCEL46",
          "linecol": [
            1999,
            1
          ]
        },
        "linecol": [
          1999,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113882,
      "linecol": [
        1945,
        7
      ]
    },
    "linecol": [
      1945,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2002,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2002,
            21
          ]
        }
      ],
      "linecol": [
        2002,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "LIG1 * LIG2 * (positif(PATNAT1) + null(PATNAT1) * positif(V_NOTRAIT - 20))",
          "linecol": [
            2003,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPATNAT1",
          "linecol": [
            2003,
            1
          ]
        },
        "linecol": [
          2003,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIG1 * LIG2 * (positif(PATNAT2) + null(PATNAT2) * positif(V_NOTRAIT - 20))",
          "linecol": [
            2004,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPATNAT2",
          "linecol": [
            2004,
            1
          ]
        },
        "linecol": [
          2004,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIG1 * LIG2 * (positif(PATNAT3) + null(PATNAT3) * positif(V_NOTRAIT - 20))",
          "linecol": [
            2005,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPATNAT3",
          "linecol": [
            2005,
            1
          ]
        },
        "linecol": [
          2005,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIG1 * LIG2 * (positif(PATNAT4) + null(PATNAT4) * positif(V_NOTRAIT - 20))",
          "linecol": [
            2006,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPATNAT4",
          "linecol": [
            2006,
            1
          ]
        },
        "linecol": [
          2006,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNATR + REPNATR1 + REPNATR2 + REPNATR3) * LIG1",
          "linecol": [
            2008,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPATNATR",
          "linecol": [
            2008,
            1
          ]
        },
        "linecol": [
          2008,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNATR1) * LIG1",
          "linecol": [
            2009,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNATR1",
          "linecol": [
            2009,
            1
          ]
        },
        "linecol": [
          2009,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNATR2) * LIG1",
          "linecol": [
            2010,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNATR2",
          "linecol": [
            2010,
            1
          ]
        },
        "linecol": [
          2010,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNATR3) * LIG1",
          "linecol": [
            2011,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNATR3",
          "linecol": [
            2011,
            1
          ]
        },
        "linecol": [
          2011,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNATR) * LIG1",
          "linecol": [
            2012,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNATR",
          "linecol": [
            2012,
            1
          ]
        },
        "linecol": [
          2012,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111389,
      "linecol": [
        2001,
        7
      ]
    },
    "linecol": [
      2001,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2014,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2014,
            22
          ]
        }
      ],
      "linecol": [
        2014,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPKI) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2016,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPKI",
          "linecol": [
            2016,
            1
          ]
        },
        "linecol": [
          2016,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQK) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2017,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQK",
          "linecol": [
            2017,
            1
          ]
        },
        "linecol": [
          2017,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQX) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2018,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQX",
          "linecol": [
            2018,
            1
          ]
        },
        "linecol": [
          2018,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRD) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2019,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRD",
          "linecol": [
            2019,
            1
          ]
        },
        "linecol": [
          2019,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPXE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2020,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPXE",
          "linecol": [
            2020,
            1
          ]
        },
        "linecol": [
          2020,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPKI + REPQK + REPQX + REPRD + REPXE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2021,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQKG",
          "linecol": [
            2021,
            1
          ]
        },
        "linecol": [
          2021,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPKH) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2023,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPKH",
          "linecol": [
            2023,
            1
          ]
        },
        "linecol": [
          2023,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQN) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2024,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQN",
          "linecol": [
            2024,
            1
          ]
        },
        "linecol": [
          2024,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQJ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2025,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQJ",
          "linecol": [
            2025,
            1
          ]
        },
        "linecol": [
          2025,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQJ + REPQN + REPKH) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2026,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQNH",
          "linecol": [
            2026,
            1
          ]
        },
        "linecol": [
          2026,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQU) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2028,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQU",
          "linecol": [
            2028,
            1
          ]
        },
        "linecol": [
          2028,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQS) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2029,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQS",
          "linecol": [
            2029,
            1
          ]
        },
        "linecol": [
          2029,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2030,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRA",
          "linecol": [
            2030,
            1
          ]
        },
        "linecol": [
          2030,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPXA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2031,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPXA",
          "linecol": [
            2031,
            1
          ]
        },
        "linecol": [
          2031,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQS + REPQU + REPRA + REPXA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2032,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQUS",
          "linecol": [
            2032,
            1
          ]
        },
        "linecol": [
          2032,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQW) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2034,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQW",
          "linecol": [
            2034,
            1
          ]
        },
        "linecol": [
          2034,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2035,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRB",
          "linecol": [
            2035,
            1
          ]
        },
        "linecol": [
          2035,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPXB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2036,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPXB",
          "linecol": [
            2036,
            1
          ]
        },
        "linecol": [
          2036,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQW + REPRB + REPXB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2037,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQWB",
          "linecol": [
            2037,
            1
          ]
        },
        "linecol": [
          2037,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2039,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRC",
          "linecol": [
            2039,
            1
          ]
        },
        "linecol": [
          2039,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPXC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2040,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPXC",
          "linecol": [
            2040,
            1
          ]
        },
        "linecol": [
          2040,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRC + REPXC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2041,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRXC",
          "linecol": [
            2041,
            1
          ]
        },
        "linecol": [
          2041,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMN) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2043,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPMN",
          "linecol": [
            2043,
            1
          ]
        },
        "linecol": [
          2043,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2044,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQE",
          "linecol": [
            2044,
            1
          ]
        },
        "linecol": [
          2044,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRJ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2045,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRJ",
          "linecol": [
            2045,
            1
          ]
        },
        "linecol": [
          2045,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRJ + REPMN + REPQE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2046,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPMMQE",
          "linecol": [
            2046,
            1
          ]
        },
        "linecol": [
          2046,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLI) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2048,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLI",
          "linecol": [
            2048,
            1
          ]
        },
        "linecol": [
          2048,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2050,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPMC",
          "linecol": [
            2050,
            1
          ]
        },
        "linecol": [
          2050,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPKU) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2052,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPKU",
          "linecol": [
            2052,
            1
          ]
        },
        "linecol": [
          2052,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLH) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2054,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLH",
          "linecol": [
            2054,
            1
          ]
        },
        "linecol": [
          2054,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2056,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPMB",
          "linecol": [
            2056,
            1
          ]
        },
        "linecol": [
          2056,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPKT) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2058,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPKT",
          "linecol": [
            2058,
            1
          ]
        },
        "linecol": [
          2058,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQV) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2060,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQV",
          "linecol": [
            2060,
            1
          ]
        },
        "linecol": [
          2060,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQO) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2062,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQO",
          "linecol": [
            2062,
            1
          ]
        },
        "linecol": [
          2062,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQP) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2064,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQP",
          "linecol": [
            2064,
            1
          ]
        },
        "linecol": [
          2064,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQR) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2066,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQR",
          "linecol": [
            2066,
            1
          ]
        },
        "linecol": [
          2066,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQF) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2068,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQF",
          "linecol": [
            2068,
            1
          ]
        },
        "linecol": [
          2068,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQG) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2070,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQG",
          "linecol": [
            2070,
            1
          ]
        },
        "linecol": [
          2070,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPQI) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2072,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPQI",
          "linecol": [
            2072,
            1
          ]
        },
        "linecol": [
          2072,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2074,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPA",
          "linecol": [
            2074,
            1
          ]
        },
        "linecol": [
          2074,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRK) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2075,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRK",
          "linecol": [
            2075,
            1
          ]
        },
        "linecol": [
          2075,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPA + REPRK) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2076,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPAK",
          "linecol": [
            2076,
            1
          ]
        },
        "linecol": [
          2076,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2078,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPB",
          "linecol": [
            2078,
            1
          ]
        },
        "linecol": [
          2078,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRL) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2079,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRL",
          "linecol": [
            2079,
            1
          ]
        },
        "linecol": [
          2079,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPB + REPRL) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2080,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPBL",
          "linecol": [
            2080,
            1
          ]
        },
        "linecol": [
          2080,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPD) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2082,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPD",
          "linecol": [
            2082,
            1
          ]
        },
        "linecol": [
          2082,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRO) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2083,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRO",
          "linecol": [
            2083,
            1
          ]
        },
        "linecol": [
          2083,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPD + REPRO) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2084,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPDO",
          "linecol": [
            2084,
            1
          ]
        },
        "linecol": [
          2084,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2086,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPE",
          "linecol": [
            2086,
            1
          ]
        },
        "linecol": [
          2086,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRP) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2087,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRP",
          "linecol": [
            2087,
            1
          ]
        },
        "linecol": [
          2087,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSK) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2088,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSK",
          "linecol": [
            2088,
            1
          ]
        },
        "linecol": [
          2088,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAK) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2089,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAK",
          "linecol": [
            2089,
            1
          ]
        },
        "linecol": [
          2089,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPE + REPRP + REPSK + REPAK) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2090,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPEK",
          "linecol": [
            2090,
            1
          ]
        },
        "linecol": [
          2090,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPF) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2092,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPF",
          "linecol": [
            2092,
            1
          ]
        },
        "linecol": [
          2092,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRQ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2093,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRQ",
          "linecol": [
            2093,
            1
          ]
        },
        "linecol": [
          2093,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSL) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2094,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSL",
          "linecol": [
            2094,
            1
          ]
        },
        "linecol": [
          2094,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAL) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2095,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAL",
          "linecol": [
            2095,
            1
          ]
        },
        "linecol": [
          2095,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPF + REPRQ + REPSL + REPAL) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2096,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPFL",
          "linecol": [
            2096,
            1
          ]
        },
        "linecol": [
          2096,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPH) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2098,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPH",
          "linecol": [
            2098,
            1
          ]
        },
        "linecol": [
          2098,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRT) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2099,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRT",
          "linecol": [
            2099,
            1
          ]
        },
        "linecol": [
          2099,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSO) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2100,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSO",
          "linecol": [
            2100,
            1
          ]
        },
        "linecol": [
          2100,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAO) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2101,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAO",
          "linecol": [
            2101,
            1
          ]
        },
        "linecol": [
          2101,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPH + REPRT + REPSO + REPAO) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2102,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPHO",
          "linecol": [
            2102,
            1
          ]
        },
        "linecol": [
          2102,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPI) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2104,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPI",
          "linecol": [
            2104,
            1
          ]
        },
        "linecol": [
          2104,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNU) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2105,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPNU",
          "linecol": [
            2105,
            1
          ]
        },
        "linecol": [
          2105,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSZ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2106,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSZ",
          "linecol": [
            2106,
            1
          ]
        },
        "linecol": [
          2106,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPBA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2107,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPBA",
          "linecol": [
            2107,
            1
          ]
        },
        "linecol": [
          2107,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPI + REPNU + REPSZ + REPBA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2108,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPIZ",
          "linecol": [
            2108,
            1
          ]
        },
        "linecol": [
          2108,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPJ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2110,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPJ",
          "linecol": [
            2110,
            1
          ]
        },
        "linecol": [
          2110,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNV) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2111,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPNV",
          "linecol": [
            2111,
            1
          ]
        },
        "linecol": [
          2111,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPTA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2112,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPTA",
          "linecol": [
            2112,
            1
          ]
        },
        "linecol": [
          2112,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPBB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2113,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPBB",
          "linecol": [
            2113,
            1
          ]
        },
        "linecol": [
          2113,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPJ + REPNV + REPTA + REPBB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2114,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPJA",
          "linecol": [
            2114,
            1
          ]
        },
        "linecol": [
          2114,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPL) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2116,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPL",
          "linecol": [
            2116,
            1
          ]
        },
        "linecol": [
          2116,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNY) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2117,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPNY",
          "linecol": [
            2117,
            1
          ]
        },
        "linecol": [
          2117,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPTD) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2118,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPTD",
          "linecol": [
            2118,
            1
          ]
        },
        "linecol": [
          2118,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPBG) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2119,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPBG",
          "linecol": [
            2119,
            1
          ]
        },
        "linecol": [
          2119,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPL + REPNY + REPTD + REPBG) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2120,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPLB",
          "linecol": [
            2120,
            1
          ]
        },
        "linecol": [
          2120,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPTB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2122,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPTB",
          "linecol": [
            2122,
            1
          ]
        },
        "linecol": [
          2122,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPBE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2123,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPBE",
          "linecol": [
            2123,
            1
          ]
        },
        "linecol": [
          2123,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPTB + REPBE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2124,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPTBE",
          "linecol": [
            2124,
            1
          ]
        },
        "linecol": [
          2124,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPM) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2126,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPM",
          "linecol": [
            2126,
            1
          ]
        },
        "linecol": [
          2126,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPN) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2128,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPN",
          "linecol": [
            2128,
            1
          ]
        },
        "linecol": [
          2128,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPO) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2130,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPO",
          "linecol": [
            2130,
            1
          ]
        },
        "linecol": [
          2130,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPP) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2132,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPP",
          "linecol": [
            2132,
            1
          ]
        },
        "linecol": [
          2132,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPR) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2134,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPR",
          "linecol": [
            2134,
            1
          ]
        },
        "linecol": [
          2134,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPS) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2136,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPS",
          "linecol": [
            2136,
            1
          ]
        },
        "linecol": [
          2136,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPT) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2138,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPT",
          "linecol": [
            2138,
            1
          ]
        },
        "linecol": [
          2138,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPU) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2140,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPU",
          "linecol": [
            2140,
            1
          ]
        },
        "linecol": [
          2140,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPW) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2142,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPW",
          "linecol": [
            2142,
            1
          ]
        },
        "linecol": [
          2142,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPX) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2144,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPX",
          "linecol": [
            2144,
            1
          ]
        },
        "linecol": [
          2144,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPY) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2146,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPY",
          "linecol": [
            2146,
            1
          ]
        },
        "linecol": [
          2146,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRG) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2148,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRG",
          "linecol": [
            2148,
            1
          ]
        },
        "linecol": [
          2148,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRI) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2150,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRI",
          "linecol": [
            2150,
            1
          ]
        },
        "linecol": [
          2150,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRM) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2152,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRM",
          "linecol": [
            2152,
            1
          ]
        },
        "linecol": [
          2152,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRR) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2154,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRR",
          "linecol": [
            2154,
            1
          ]
        },
        "linecol": [
          2154,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRU) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2156,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRU",
          "linecol": [
            2156,
            1
          ]
        },
        "linecol": [
          2156,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSP) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2157,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSP",
          "linecol": [
            2157,
            1
          ]
        },
        "linecol": [
          2157,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAP) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2158,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAP",
          "linecol": [
            2158,
            1
          ]
        },
        "linecol": [
          2158,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRU + REPSP + REPAP) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2159,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRUP",
          "linecol": [
            2159,
            1
          ]
        },
        "linecol": [
          2159,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRV) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2161,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRV",
          "linecol": [
            2161,
            1
          ]
        },
        "linecol": [
          2161,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSQ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2162,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSQ",
          "linecol": [
            2162,
            1
          ]
        },
        "linecol": [
          2162,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAQ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2163,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAQ",
          "linecol": [
            2163,
            1
          ]
        },
        "linecol": [
          2163,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRV + REPSQ + REPAQ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2164,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRVQ",
          "linecol": [
            2164,
            1
          ]
        },
        "linecol": [
          2164,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRW) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2166,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRW",
          "linecol": [
            2166,
            1
          ]
        },
        "linecol": [
          2166,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSR) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2167,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSR",
          "linecol": [
            2167,
            1
          ]
        },
        "linecol": [
          2167,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPHAR) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2168,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPHAR",
          "linecol": [
            2168,
            1
          ]
        },
        "linecol": [
          2168,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRW + REPSR + REPHAR) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2169,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRWR",
          "linecol": [
            2169,
            1
          ]
        },
        "linecol": [
          2169,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRY) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2171,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRY",
          "linecol": [
            2171,
            1
          ]
        },
        "linecol": [
          2171,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPST) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2172,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPST",
          "linecol": [
            2172,
            1
          ]
        },
        "linecol": [
          2172,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAT) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2173,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAT",
          "linecol": [
            2173,
            1
          ]
        },
        "linecol": [
          2173,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRY + REPST + REPAT) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2174,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRYT",
          "linecol": [
            2174,
            1
          ]
        },
        "linecol": [
          2174,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNW) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2176,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPNW",
          "linecol": [
            2176,
            1
          ]
        },
        "linecol": [
          2176,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2178,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSA",
          "linecol": [
            2178,
            1
          ]
        },
        "linecol": [
          2178,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2179,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAA",
          "linecol": [
            2179,
            1
          ]
        },
        "linecol": [
          2179,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSA + REPAA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2180,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAA",
          "linecol": [
            2180,
            1
          ]
        },
        "linecol": [
          2180,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2182,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSB",
          "linecol": [
            2182,
            1
          ]
        },
        "linecol": [
          2182,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2183,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAB",
          "linecol": [
            2183,
            1
          ]
        },
        "linecol": [
          2183,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSB + REPAB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2184,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAB",
          "linecol": [
            2184,
            1
          ]
        },
        "linecol": [
          2184,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2186,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSC",
          "linecol": [
            2186,
            1
          ]
        },
        "linecol": [
          2186,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2187,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAC",
          "linecol": [
            2187,
            1
          ]
        },
        "linecol": [
          2187,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSC + REPAC) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2188,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAC",
          "linecol": [
            2188,
            1
          ]
        },
        "linecol": [
          2188,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2190,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSE",
          "linecol": [
            2190,
            1
          ]
        },
        "linecol": [
          2190,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2191,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAE",
          "linecol": [
            2191,
            1
          ]
        },
        "linecol": [
          2191,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSE + REPAE) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2192,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAE",
          "linecol": [
            2192,
            1
          ]
        },
        "linecol": [
          2192,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSF) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2194,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSF",
          "linecol": [
            2194,
            1
          ]
        },
        "linecol": [
          2194,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAF) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2195,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAF",
          "linecol": [
            2195,
            1
          ]
        },
        "linecol": [
          2195,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSF + REPAF) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2196,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAF",
          "linecol": [
            2196,
            1
          ]
        },
        "linecol": [
          2196,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSG) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2198,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSG",
          "linecol": [
            2198,
            1
          ]
        },
        "linecol": [
          2198,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAG) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2199,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAG",
          "linecol": [
            2199,
            1
          ]
        },
        "linecol": [
          2199,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSG + REPAG) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2200,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAG",
          "linecol": [
            2200,
            1
          ]
        },
        "linecol": [
          2200,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSH) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2202,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSH",
          "linecol": [
            2202,
            1
          ]
        },
        "linecol": [
          2202,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAH) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2203,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAH",
          "linecol": [
            2203,
            1
          ]
        },
        "linecol": [
          2203,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSH + REPAH) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2204,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAH",
          "linecol": [
            2204,
            1
          ]
        },
        "linecol": [
          2204,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSJ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2206,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSJ",
          "linecol": [
            2206,
            1
          ]
        },
        "linecol": [
          2206,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAJ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2207,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAJ",
          "linecol": [
            2207,
            1
          ]
        },
        "linecol": [
          2207,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSJ + REPAJ) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2208,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAJ",
          "linecol": [
            2208,
            1
          ]
        },
        "linecol": [
          2208,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSM) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2210,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSM",
          "linecol": [
            2210,
            1
          ]
        },
        "linecol": [
          2210,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAM) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2211,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAM",
          "linecol": [
            2211,
            1
          ]
        },
        "linecol": [
          2211,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSM + REPAM) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2212,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAM",
          "linecol": [
            2212,
            1
          ]
        },
        "linecol": [
          2212,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSU) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2214,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSU",
          "linecol": [
            2214,
            1
          ]
        },
        "linecol": [
          2214,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAU) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2215,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAU",
          "linecol": [
            2215,
            1
          ]
        },
        "linecol": [
          2215,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSU + REPAU) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2216,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAU",
          "linecol": [
            2216,
            1
          ]
        },
        "linecol": [
          2216,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSV) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2218,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSV",
          "linecol": [
            2218,
            1
          ]
        },
        "linecol": [
          2218,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAV) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2219,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAV",
          "linecol": [
            2219,
            1
          ]
        },
        "linecol": [
          2219,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSV + REPAV) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2220,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAV",
          "linecol": [
            2220,
            1
          ]
        },
        "linecol": [
          2220,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSW) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2222,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSW",
          "linecol": [
            2222,
            1
          ]
        },
        "linecol": [
          2222,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAW) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2223,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAW",
          "linecol": [
            2223,
            1
          ]
        },
        "linecol": [
          2223,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSW + REPAW) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2224,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAW",
          "linecol": [
            2224,
            1
          ]
        },
        "linecol": [
          2224,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSY) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2226,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSY",
          "linecol": [
            2226,
            1
          ]
        },
        "linecol": [
          2226,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAY) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2227,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAY",
          "linecol": [
            2227,
            1
          ]
        },
        "linecol": [
          2227,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSY + REPAY) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2228,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSAY",
          "linecol": [
            2228,
            1
          ]
        },
        "linecol": [
          2228,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPOMENTR3) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2231,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPDOMOUT",
          "linecol": [
            2231,
            1
          ]
        },
        "linecol": [
          2231,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPDONR + REPDONR1 + REPDONR2 + REPDONR3 + REPDONR4) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2233,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPDON",
          "linecol": [
            2233,
            1
          ]
        },
        "linecol": [
          2233,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPDONR1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2234,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPDONR1",
          "linecol": [
            2234,
            1
          ]
        },
        "linecol": [
          2234,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPDONR2) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2235,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPDONR2",
          "linecol": [
            2235,
            1
          ]
        },
        "linecol": [
          2235,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPDONR3) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2236,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPDONR3",
          "linecol": [
            2236,
            1
          ]
        },
        "linecol": [
          2236,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPDONR4) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2237,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPDONR4",
          "linecol": [
            2237,
            1
          ]
        },
        "linecol": [
          2237,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPDONR) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2238,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPDONR",
          "linecol": [
            2238,
            1
          ]
        },
        "linecol": [
          2238,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPDOMENTR) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2239,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPDOM",
          "linecol": [
            2239,
            1
          ]
        },
        "linecol": [
          2239,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RIDOMPRO) * LIG1",
          "linecol": [
            2240,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRIDOMPRO",
          "linecol": [
            2240,
            1
          ]
        },
        "linecol": [
          2240,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPINVPME1) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2242,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPME1",
          "linecol": [
            2242,
            1
          ]
        },
        "linecol": [
          2242,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPINVPME2) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2243,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPME2",
          "linecol": [
            2243,
            1
          ]
        },
        "linecol": [
          2243,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPINVPME3) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2244,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPME3",
          "linecol": [
            2244,
            1
          ]
        },
        "linecol": [
          2244,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPINVPMECU) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2245,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPMECU",
          "linecol": [
            2245,
            1
          ]
        },
        "linecol": [
          2245,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RINVTPME12 + RINVTPME13 + RINVTPME14) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2247,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRSN",
          "linecol": [
            2247,
            1
          ]
        },
        "linecol": [
          2247,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RINVTPME12) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2248,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRSN2",
          "linecol": [
            2248,
            1
          ]
        },
        "linecol": [
          2248,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RINVTPME13) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2249,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRSN1",
          "linecol": [
            2249,
            1
          ]
        },
        "linecol": [
          2249,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RINVTPME14) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2250,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRSN0",
          "linecol": [
            2250,
            1
          ]
        },
        "linecol": [
          2250,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PLAFREPSN4+PLAFREPSN3) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2252,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLAFRSN",
          "linecol": [
            2252,
            1
          ]
        },
        "linecol": [
          2252,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PLAFREPSN4) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2253,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLAFRSN4",
          "linecol": [
            2253,
            1
          ]
        },
        "linecol": [
          2253,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PLAFREPSN3) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1",
          "linecol": [
            2254,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLAFRSN3",
          "linecol": [
            2254,
            1
          ]
        },
        "linecol": [
          2254,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPFOREST2 + REPFOREST3 + REPEST) * LIG1 * LIG2 * (1 - V_CNR)",
          "linecol": [
            2256,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGFOREST",
          "linecol": [
            2256,
            1
          ]
        },
        "linecol": [
          2256,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPFOREST2) * LIG1 * LIG2 * (1 - V_CNR)",
          "linecol": [
            2257,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPFOR2",
          "linecol": [
            2257,
            1
          ]
        },
        "linecol": [
          2257,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPFOREST3) * LIG1 * LIG2 * (1 - V_CNR)",
          "linecol": [
            2258,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPFOR3",
          "linecol": [
            2258,
            1
          ]
        },
        "linecol": [
          2258,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPEST) * LIG1 * LIG2 * (1 - V_CNR)",
          "linecol": [
            2259,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPEST",
          "linecol": [
            2259,
            1
          ]
        },
        "linecol": [
          2259,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 111031,
      "linecol": [
        2013,
        7
      ]
    },
    "linecol": [
      2013,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2262,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2262,
            23
          ]
        }
      ],
      "linecol": [
        2262,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "present ( TSASSUV ) + positif ( XETRANV ) + positif ( EXOCETV ) + present ( FEXV ) + positif ( MIBEXV ) + positif ( MIBNPEXV ) + positif ( BNCPROEXV ) + positif ( XSPENPV ) + positif ( XBAV ) + positif ( XBIPV ) + positif ( XBINPV ) + positif ( XBNV ) + positif ( XBNNPV ) + positif ( ABICPDECV ) * ( 1 - V_CNR ) + positif ( ABNCPDECV ) * ( 1 - V_CNR ) + positif ( HONODECV ) * ( 1 - V_CNR ) + positif ( AGRIV ) + positif ( BIPERPV ) + positif ( BNCCREAV ) ",
          "linecol": [
            2264,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EXOVOUS",
          "linecol": [
            2264,
            1
          ]
        },
        "linecol": [
          2264,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present ( TSASSUC ) + positif ( XETRANC ) + positif ( EXOCETC ) + present ( FEXC ) + positif ( MIBEXC ) + positif ( MIBNPEXC ) + positif ( BNCPROEXC ) + positif ( XSPENPC ) + positif ( XBAC ) + positif ( XBIPC ) + positif ( XBINPC ) + positif ( XBNC ) + positif ( XBNNPC ) + positif ( ABICPDECC ) * ( 1 - V_CNR ) + positif ( ABNCPDECC ) * ( 1 - V_CNR ) + positif ( HONODECC ) * ( 1 - V_CNR ) + positif ( AGRIC ) + positif ( BIPERPC ) + positif ( BNCCREAC ) ",
          "linecol": [
            2285,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EXOCJT",
          "linecol": [
            2285,
            1
          ]
        },
        "linecol": [
          2285,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present ( FEXP ) + positif ( MIBEXP ) + positif ( MIBNPEXP ) + positif ( BNCPROEXP ) + positif ( XSPENPP ) + positif ( XBAP ) + positif ( XBIPP ) + positif ( XBINPP ) + positif ( XBNP ) + positif ( XBNNPP ) + positif ( ABICPDECP ) * ( 1 - V_CNR ) + positif ( ABNCPDECP ) * ( 1 - V_CNR ) + positif ( HONODECP ) * ( 1 - V_CNR ) + positif ( AGRIP ) + positif ( BIPERPP ) + positif ( BNCCREAP ) ",
          "linecol": [
            2306,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EXOPAC",
          "linecol": [
            2306,
            1
          ]
        },
        "linecol": [
          2306,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11101,
      "linecol": [
        2261,
        7
      ]
    },
    "linecol": [
      2261,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2325,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2325,
            23
          ]
        }
      ],
      "linecol": [
        2325,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(EXOVOUS) * positif(EXOCJT) * positif(EXOPAC) * (1 - positif(LIG2501)) * LIG1 * LIG2",
          "linecol": [
            2327,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTITREXVCP",
          "linecol": [
            2327,
            1
          ]
        },
        "linecol": [
          2327,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(EXOVOUS) * (1 - positif(EXOCJT)) * (1 - positif(EXOPAC)) * (1 - positif(LIG2501)) * LIG1 * LIG2",
          "linecol": [
            2333,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTITREXV",
          "linecol": [
            2333,
            1
          ]
        },
        "linecol": [
          2333,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(EXOVOUS)) * positif(EXOCJT) * (1 - positif(EXOPAC)) * (1 - positif(LIG2501)) * LIG1 * LIG2",
          "linecol": [
            2339,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTITREXC",
          "linecol": [
            2339,
            1
          ]
        },
        "linecol": [
          2339,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(EXOVOUS)) * (1 - positif(EXOCJT)) * positif(EXOPAC) * (1 - positif(LIG2501)) * LIG1 * LIG2",
          "linecol": [
            2345,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTITREXP",
          "linecol": [
            2345,
            1
          ]
        },
        "linecol": [
          2345,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(EXOVOUS) * positif(EXOCJT) * (1 - positif(EXOPAC)) * (1 - positif(LIG2501)) * LIG1 * LIG2",
          "linecol": [
            2351,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTITREXVC",
          "linecol": [
            2351,
            1
          ]
        },
        "linecol": [
          2351,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(EXOVOUS) * (1 - positif(EXOCJT)) * positif(EXOPAC) * (1 - positif(LIG2501)) * LIG1 * LIG2",
          "linecol": [
            2357,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTITREXVP",
          "linecol": [
            2357,
            1
          ]
        },
        "linecol": [
          2357,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(EXOVOUS)) * positif(EXOCJT) * positif(EXOPAC) * (1 - positif(LIG2501)) * LIG1 * LIG2",
          "linecol": [
            2363,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTITREXCP",
          "linecol": [
            2363,
            1
          ]
        },
        "linecol": [
          2363,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11102,
      "linecol": [
        2324,
        7
      ]
    },
    "linecol": [
      2324,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2370,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2370,
            23
          ]
        }
      ],
      "linecol": [
        2370,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "EXOCETC + EXOCETV",
          "linecol": [
            2372,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EXOCET",
          "linecol": [
            2372,
            1
          ]
        },
        "linecol": [
          2372,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(EXOCET) * LIG1 * LIG2",
          "linecol": [
            2373,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGEXOCET",
          "linecol": [
            2373,
            1
          ]
        },
        "linecol": [
          2373,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MIBEXV + MIBEXC + MIBEXP) * LIG1 * LIG2",
          "linecol": [
            2375,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMXBIP",
          "linecol": [
            2375,
            1
          ]
        },
        "linecol": [
          2375,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MIBNPEXV + MIBNPEXC + MIBNPEXP) * LIG1 * LIG2",
          "linecol": [
            2376,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMXBINP",
          "linecol": [
            2376,
            1
          ]
        },
        "linecol": [
          2376,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCPROEXV + BNCPROEXC + BNCPROEXP) * LIG1 * LIG2",
          "linecol": [
            2377,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSXBN",
          "linecol": [
            2377,
            1
          ]
        },
        "linecol": [
          2377,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(XSPENPV + XSPENPC + XSPENPP) * LIG1 * LIG2",
          "linecol": [
            2378,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGXSPEN",
          "linecol": [
            2378,
            1
          ]
        },
        "linecol": [
          2378,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(XBIPV + XBIPC + XBIPP) * LIG1 * LIG2",
          "linecol": [
            2379,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGXBIP",
          "linecol": [
            2379,
            1
          ]
        },
        "linecol": [
          2379,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(XBINPV + XBINPC + XBINPP) * LIG1 * LIG2",
          "linecol": [
            2380,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGXBINP",
          "linecol": [
            2380,
            1
          ]
        },
        "linecol": [
          2380,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(XBNV + XBNC + XBNP) * LIG1 * LIG2",
          "linecol": [
            2381,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGXBP",
          "linecol": [
            2381,
            1
          ]
        },
        "linecol": [
          2381,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(XBNNPV + XBNNPC + XBNNPP) * LIG1 * LIG2",
          "linecol": [
            2382,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGXBN",
          "linecol": [
            2382,
            1
          ]
        },
        "linecol": [
          2382,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(TSASSUV) + present(TSASSUC)) * LIG1 * LIG2",
          "linecol": [
            2384,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGXTSA",
          "linecol": [
            2384,
            1
          ]
        },
        "linecol": [
          2384,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(XETRANV + XETRANC) * LIG1 * LIG2",
          "linecol": [
            2385,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGXIMPA",
          "linecol": [
            2385,
            1
          ]
        },
        "linecol": [
          2385,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(FEXV) + present(FEXC) + present(FEXP)) * LIG1 * LIG2",
          "linecol": [
            2386,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGXFORF",
          "linecol": [
            2386,
            1
          ]
        },
        "linecol": [
          2386,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(XBAV + XBAC + XBAP) * LIG1 * LIG2",
          "linecol": [
            2387,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGXBA",
          "linecol": [
            2387,
            1
          ]
        },
        "linecol": [
          2387,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ABICPDECV + ABICPDECC + ABICPDECP) * LIG1 * (1 - positif(null(2-V_REGCO) + null(4-V_REGCO))) * LIG2",
          "linecol": [
            2389,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBICAP",
          "linecol": [
            2389,
            1
          ]
        },
        "linecol": [
          2389,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ABNCPDECV + ABNCPDECC + ABNCPDECP) * LIG1 * (1 - positif(null(2-V_REGCO) + null(4-V_REGCO))) * LIG2",
          "linecol": [
            2390,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCAP",
          "linecol": [
            2390,
            1
          ]
        },
        "linecol": [
          2390,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(HONODECV + HONODECC + HONODECP) * LIG1 * (1 - positif(null(2-V_REGCO) + null(4-V_REGCO))) * LIG2",
          "linecol": [
            2391,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGHONO",
          "linecol": [
            2391,
            1
          ]
        },
        "linecol": [
          2391,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BAPERPV + BAPERPC + BAPERPP + BANOCGAV + BANOCGAC + BANOCGAP) * LIG1 * LIG2",
          "linecol": [
            2393,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBAPERP",
          "linecol": [
            2393,
            1
          ]
        },
        "linecol": [
          2393,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BIPERPV + BIPERPC + BIPERPP) * LIG1 * LIG2",
          "linecol": [
            2394,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBIPERP",
          "linecol": [
            2394,
            1
          ]
        },
        "linecol": [
          2394,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCCREAV + BNCCREAC + BNCCREAP) * LIG1 * LIG2",
          "linecol": [
            2395,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCCREA",
          "linecol": [
            2395,
            1
          ]
        },
        "linecol": [
          2395,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11103,
      "linecol": [
        2369,
        7
      ]
    },
    "linecol": [
      2369,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2398,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2398,
            23
          ]
        }
      ],
      "linecol": [
        2398,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(PERPIMPATRIE+0)) * positif(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * positif(PERPINDAFFV+PERPINDAFFC+PERPINDAFFP) * (1 - null(PERP_COTV + PERP_COTC + PERP_COTP + 0) * (1 - INDIMPOS)) * (1 - positif(PERP_COND1+PERP_COND2)) * (1 - positif(LIG8FV)) * (1 - positif(LIG2501)) * LIG1 * (1-V_CNR) * LIG2 +0 ",
          "linecol": [
            2400,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERP",
          "linecol": [
            2400,
            1
          ]
        },
        "linecol": [
          2400,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PERPIMPATRIE+0) * positif(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * positif(PERPINDAFFV+PERPINDAFFC+PERPINDAFFP) * (1 - null(PERP_COTV + PERP_COTC + PERP_COTP + 0) * (1 - INDIMPOS)) * (1 - positif(PERP_COND1+PERP_COND2)) * (1 - positif(LIG8FV)) * (1 - positif(LIG2501)) * LIG1 * (1-V_CNR) * LIG2 +0 ",
          "linecol": [
            2411,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPI",
          "linecol": [
            2411,
            1
          ]
        },
        "linecol": [
          2411,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(PERPIMPATRIE+0)) * positif(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * positif(PERPINDAFFV+PERPINDAFFC+PERPINDAFFP) * (1 - null(PERP_COTV + PERP_COTC + PERP_COTP + 0) * (1 - INDIMPOS)) * positif(PERP_MUT) * positif(PERP_COND1+PERP_COND2) * (1 - positif(LIG8FV)) * (1 - positif(LIG2501)) * LIG1 * (1-V_CNR) * LIG2 +0 ",
          "linecol": [
            2422,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPM",
          "linecol": [
            2422,
            1
          ]
        },
        "linecol": [
          2422,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PERPIMPATRIE+0) * positif(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * positif(PERPINDAFFV+PERPINDAFFC+PERPINDAFFP) * (1 - null(PERP_COTV + PERP_COTC + PERP_COTP + 0) * (1 - INDIMPOS)) * positif(PERP_MUT) * positif(PERP_COND1+PERP_COND2) * (1 - positif(LIG8FV)) * (1 - positif(LIG2501)) * LIG1 * (1-V_CNR) * LIG2 +0 ",
          "linecol": [
            2434,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPMI",
          "linecol": [
            2434,
            1
          ]
        },
        "linecol": [
          2434,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PERPINDV + PERPINDCV) * positif(PERPINDAFFV) * positif(PERPINDC + PERPINDCC)* positif(PERPINDAFFC) * positif(PERPINDP + PERPINDCP) * positif(PERPINDAFFP) * LIG1 * (1-V_CNR) * LIG2 * positif(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI) ",
          "linecol": [
            2447,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPFAM",
          "linecol": [
            2447,
            1
          ]
        },
        "linecol": [
          2447,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PERPINDV + PERPINDCV) * positif(PERPINDAFFV) * (1 - positif(PERPINDC + PERPINDCC) * positif(PERPINDAFFC)) * (1 - positif(PERPINDP + PERPINDCP) * positif(PERPINDAFFP)) * LIG1 * (1-V_CNR) * LIG2 * positif(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI) ",
          "linecol": [
            2454,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPV",
          "linecol": [
            2454,
            1
          ]
        },
        "linecol": [
          2454,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PERPINDC + PERPINDCC) * positif(PERPINDAFFC) * (1 - positif(PERPINDV + PERPINDCV) * positif(PERPINDAFFV)) * (1 - positif(PERPINDP + PERPINDCP) * positif(PERPINDAFFP)) * LIG1 * (1-V_CNR) * LIG2 * positif(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI) ",
          "linecol": [
            2461,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPC",
          "linecol": [
            2461,
            1
          ]
        },
        "linecol": [
          2461,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PERPINDP + PERPINDCP) * positif(PERPINDAFFP) * (1 - positif(PERPINDV + PERPINDCV) * positif(PERPINDAFFV)) * (1 - positif(PERPINDC + PERPINDCC) * positif(PERPINDAFFC)) * LIG1 * (1-V_CNR) * LIG2 * positif(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI) ",
          "linecol": [
            2468,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPP",
          "linecol": [
            2468,
            1
          ]
        },
        "linecol": [
          2468,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PERPINDP + PERPINDCP) * positif(PERPINDAFFP) * positif(PERPINDC + PERPINDCC) * positif(PERPINDAFFV) * (1 - positif(PERPINDV + PERPINDCV) * positif(PERPINDAFFV)) * LIG1 * (1-V_CNR) * LIG2 * positif(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI) ",
          "linecol": [
            2475,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPCP",
          "linecol": [
            2475,
            1
          ]
        },
        "linecol": [
          2475,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PERPINDP + PERPINDCP) * positif(PERPINDAFFP) * positif(PERPINDV + PERPINDCV) * positif(PERPINDAFFV) * (1 - positif(PERPINDC + PERPINDCC) * positif(PERPINDAFFC)) * LIG1 * (1-V_CNR) * LIG2 * positif(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI) ",
          "linecol": [
            2482,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPVP",
          "linecol": [
            2482,
            1
          ]
        },
        "linecol": [
          2482,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PERPINDV + PERPINDCV)  * positif(PERPINDAFFV) * positif(PERPINDC + PERPINDCC)  * positif(PERPINDAFFC) * (1 - positif(PERPINDP + PERPINDCP) * positif(PERPINDAFFP)) * LIG1 * (1-V_CNR) * LIG2 * positif(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI) ",
          "linecol": [
            2489,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPERPMAR",
          "linecol": [
            2489,
            1
          ]
        },
        "linecol": [
          2489,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 11105,
      "linecol": [
        2397,
        7
      ]
    },
    "linecol": [
      2397,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2498,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2498,
            22
          ]
        }
      ],
      "linecol": [
        2498,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + V_CSANT) * positif(BRDS + V_RDANT) * positif(BPRS + V_PSANT) * (1 - positif(BCVNSAL + V_CVNANT)) * (1 - (V_CNR * (1 - positif(ZIG_RF + max(0, NPLOCNETSF))))) * LIG2",
          "linecol": [
            2500,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TITRECRP",
          "linecol": [
            2500,
            1
          ]
        },
        "linecol": [
          2500,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + V_CSANT) * positif(BRDS + V_RDANT) * positif(BPRS + V_PSANT) * positif(BCVNSAL + V_CVNANT) * (1 - (V_CNR * (1 - positif(ZIG_RF + max(0, NPLOCNETSF))))) * LIG2",
          "linecol": [
            2503,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGTITRECRPS",
          "linecol": [
            2503,
            1
          ]
        },
        "linecol": [
          2503,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + V_CSANT) * positif(BRDS + V_RDANT) * positif(BCVNSAL + V_CVNANT) * (1 - positif(BPRS + V_PSANT)) * (1 - V_CNR) * LIG2",
          "linecol": [
            2506,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGTITRECRS",
          "linecol": [
            2506,
            1
          ]
        },
        "linecol": [
          2506,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(BCSG + V_CSANT)) * positif(BRDS + V_RDANT) * (1 - positif(BPRS + V_PSANT)) * positif(BCVNSAL + V_CVNANT) * (1 - V_CNR) * LIG2",
          "linecol": [
            2509,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGTITRERS",
          "linecol": [
            2509,
            1
          ]
        },
        "linecol": [
          2509,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + V_CSANT) * positif(BRDS + V_RDANT) * (1 - positif(BPRS + V_PSANT)) * (1 - positif(BCVNSAL + V_CVNANT)) * (1 - V_CNR) * LIG2",
          "linecol": [
            2512,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TITRECR",
          "linecol": [
            2512,
            1
          ]
        },
        "linecol": [
          2512,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + V_CSANT) * (1 - positif(BRDS + V_RDANT)) * positif(BPRS + V_PSANT) * (1 - positif(BCVNSAL + V_CVNANT)) * (1 - V_CNR) * LIG2",
          "linecol": [
            2515,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TITRECP",
          "linecol": [
            2515,
            1
          ]
        },
        "linecol": [
          2515,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(BCSG + V_CSANT)) * positif(BRDS + V_RDANT) * positif(BPRS + V_PSANT) * (1 - positif(BCVNSAL + V_CVNANT)) * (1 - V_CNR) * LIG2",
          "linecol": [
            2518,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TITRERP",
          "linecol": [
            2518,
            1
          ]
        },
        "linecol": [
          2518,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + V_CSANT) * (1 - positif(BRDS + V_RDANT)) * (1 - positif(BPRS + V_PSANT)) * (1 - positif(BCVNSAL + V_CVNANT)) * (1 - V_CNR) * LIG2",
          "linecol": [
            2521,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TITREC",
          "linecol": [
            2521,
            1
          ]
        },
        "linecol": [
          2521,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRDS + V_RDANT) * (1 - positif(BCSG + V_CSANT)) * (1 - positif(BPRS + V_PSANT)) * (1 - positif(BCVNSAL + V_CVNANT)) * (1 - V_CNR) * LIG2",
          "linecol": [
            2524,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TITRER",
          "linecol": [
            2524,
            1
          ]
        },
        "linecol": [
          2524,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCVNSAL + V_CVNANT) * (1 - positif(BRDS + V_RDANT)) * (1 - positif(BCSG + V_CSANT)) * (1 - positif(BPRS + V_PSANT)) * LIG2",
          "linecol": [
            2527,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGTITRES",
          "linecol": [
            2527,
            1
          ]
        },
        "linecol": [
          2527,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPRS + V_PSANT) * (1 - V_CNR) * LIG2",
          "linecol": [
            2530,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TITREPN",
          "linecol": [
            2530,
            1
          ]
        },
        "linecol": [
          2530,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117010,
      "linecol": [
        2497,
        7
      ]
    },
    "linecol": [
      2497,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2533,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2533,
            22
          ]
        }
      ],
      "linecol": [
        2533,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif((positif(BCSG + V_CSANT + BRDS + V_RDANT + BPRS + V_PSANT) * (1 - (V_CNR * (1 - positif(ZIG_RF+max(0,NPLOCNETSF))))) + positif (BCVNSAL + V_CVNANT + BCDIS + V_CDISANT)) * TYPE4) * (1 - positif(ANNUL2042))",
          "linecol": [
            2535,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGTITRE",
          "linecol": [
            2535,
            1
          ]
        },
        "linecol": [
          2535,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + V_CSANT) * positif(INDCTX)",
          "linecol": [
            2539,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGBASECS1",
          "linecol": [
            2539,
            1
          ]
        },
        "linecol": [
          2539,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRDS + V_RDANT) * positif(INDCTX)",
          "linecol": [
            2540,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGBASERD1",
          "linecol": [
            2540,
            1
          ]
        },
        "linecol": [
          2540,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPRS + V_PSANT) * positif(INDCTX)",
          "linecol": [
            2541,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGBASEPS1",
          "linecol": [
            2541,
            1
          ]
        },
        "linecol": [
          2541,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCVNSAL + V_CVNANT) * positif(INDCTX)",
          "linecol": [
            2542,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGBASESAL1",
          "linecol": [
            2542,
            1
          ]
        },
        "linecol": [
          2542,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117030,
      "linecol": [
        2532,
        7
      ]
    },
    "linecol": [
      2532,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2545,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2545,
            22
          ]
        }
      ],
      "linecol": [
        2545,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RDRV",
          "linecol": [
            2547,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_RVT",
          "linecol": [
            2547,
            1
          ]
        },
        "linecol": [
          2547,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_RVT",
          "linecol": [
            2548,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_RVT",
          "linecol": [
            2548,
            1
          ]
        },
        "linecol": [
          2548,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_RVT",
          "linecol": [
            2549,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_RVT",
          "linecol": [
            2549,
            1
          ]
        },
        "linecol": [
          2549,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "0",
          "linecol": [
            2550,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_ZIGRVT",
          "linecol": [
            2550,
            1
          ]
        },
        "linecol": [
          2550,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif (CS_RVT + RD_RVT + PS_RVT + IND_ZIGRVT) * (1 - V_CNR) * (1 - positif(ANNUL2042)) * LIG1 * LIG2 * null(3 - INDIRPS)",
          "linecol": [
            2552,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_RVTO",
          "linecol": [
            2552,
            1
          ]
        },
        "linecol": [
          2552,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117080,
      "linecol": [
        2544,
        7
      ]
    },
    "linecol": [
      2544,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2555,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2555,
            22
          ]
        }
      ],
      "linecol": [
        2555,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RDRCM",
          "linecol": [
            2557,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_RCM",
          "linecol": [
            2557,
            1
          ]
        },
        "linecol": [
          2557,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_RCM",
          "linecol": [
            2558,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_RCM",
          "linecol": [
            2558,
            1
          ]
        },
        "linecol": [
          2558,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_RCM",
          "linecol": [
            2559,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_RCM",
          "linecol": [
            2559,
            1
          ]
        },
        "linecol": [
          2559,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(RCMABD) + present(RCMAV) + present(RCMHAD) + present(RCMHAB) + present(RCMTNC) + present(RCMAVFT) + present(REGPRIV)) * positif(V_NOTRAIT - 20)",
          "linecol": [
            2560,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_ZIGRCM",
          "linecol": [
            2560,
            1
          ]
        },
        "linecol": [
          2560,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_RCM + RD_RCM + PS_RCM + IND_ZIGRCM) * (1 - V_CNR) * (1 - positif(ANNUL2042)) * LIG1 * LIG2 * null(3 - INDIRPS)",
          "linecol": [
            2564,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_RCM",
          "linecol": [
            2564,
            1
          ]
        },
        "linecol": [
          2564,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117100,
      "linecol": [
        2554,
        7
      ]
    },
    "linecol": [
      2554,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2567,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2567,
            22
          ]
        }
      ],
      "linecol": [
        2567,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RDNP",
          "linecol": [
            2568,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_REVCS",
          "linecol": [
            2568,
            1
          ]
        },
        "linecol": [
          2568,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_REVCS",
          "linecol": [
            2569,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_REVCS",
          "linecol": [
            2569,
            1
          ]
        },
        "linecol": [
          2569,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_REVCS",
          "linecol": [
            2570,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_REVCS",
          "linecol": [
            2570,
            1
          ]
        },
        "linecol": [
          2570,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_NOTRAIT - 20) * positif( present(RCSV) +present(RCSC) +present(RCSP))",
          "linecol": [
            2571,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_ZIGPROF",
          "linecol": [
            2571,
            1
          ]
        },
        "linecol": [
          2571,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_REVCS+RD_REVCS+PS_REVCS+IND_ZIGPROF) * (1 - positif(ANNUL2042)) * LIG1 * null(3 - INDIRPS)",
          "linecol": [
            2574,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_PROF",
          "linecol": [
            2574,
            1
          ]
        },
        "linecol": [
          2574,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117105,
      "linecol": [
        2566,
        7
      ]
    },
    "linecol": [
      2566,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2578,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2578,
            22
          ]
        }
      ],
      "linecol": [
        2578,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RDRFPS",
          "linecol": [
            2580,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_RFG",
          "linecol": [
            2580,
            1
          ]
        },
        "linecol": [
          2580,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_RFG",
          "linecol": [
            2581,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_RFG",
          "linecol": [
            2581,
            1
          ]
        },
        "linecol": [
          2581,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_RFG",
          "linecol": [
            2582,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_RFG",
          "linecol": [
            2582,
            1
          ]
        },
        "linecol": [
          2582,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_NOTRAIT - 20) * positif( present(RFORDI) +present(RFDORD) +present(RFDHIS) +present(RFMIC) )",
          "linecol": [
            2583,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_ZIGRFG",
          "linecol": [
            2583,
            1
          ]
        },
        "linecol": [
          2583,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_RFG + RD_RFG + PS_RFG + IND_ZIGRFG) * (1 - null(4 - V_REGCO)) * (1 - positif(ANNUL2042)) * LIG1 * LIG2 * null(3 - INDIRPS)",
          "linecol": [
            2588,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_RF",
          "linecol": [
            2588,
            1
          ]
        },
        "linecol": [
          2588,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117110,
      "linecol": [
        2577,
        7
      ]
    },
    "linecol": [
      2577,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2590,
            14
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2590,
            22
          ]
        }
      ],
      "linecol": [
        2590,
        14
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RDPTP + RDNCP",
          "linecol": [
            2592,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_RTF",
          "linecol": [
            2592,
            1
          ]
        },
        "linecol": [
          2592,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_RTF",
          "linecol": [
            2593,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_RTF",
          "linecol": [
            2593,
            1
          ]
        },
        "linecol": [
          2593,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_RTF",
          "linecol": [
            2594,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_RTF",
          "linecol": [
            2594,
            1
          ]
        },
        "linecol": [
          2594,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_NOTRAIT - 20) * positif (present (PEA) + present( BPCOPTV ) + present( BPVRCM ))",
          "linecol": [
            2595,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_ZIGRTF",
          "linecol": [
            2595,
            1
          ]
        },
        "linecol": [
          2595,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif (CS_RTF + RD_RTF + PS_RTF + IND_ZIGRTF) * (1 - V_CNR) * (1 - positif(ANNUL2042)) * LIG1 * LIG2 * null(3 - INDIRPS)",
          "linecol": [
            2597,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_RTF",
          "linecol": [
            2597,
            1
          ]
        },
        "linecol": [
          2597,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CVNSALC)*positif(CVNSALAV + CVNSALAC) * LIG1 * LIG2",
          "linecol": [
            2600,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGGAINLEV",
          "linecol": [
            2600,
            1
          ]
        },
        "linecol": [
          2600,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117181,
      "linecol": [
        2589,
        7
      ]
    },
    "linecol": [
      2589,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2602,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2602,
            22
          ]
        }
      ],
      "linecol": [
        2602,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "0",
          "linecol": [
            2604,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_REVETRANG",
          "linecol": [
            2604,
            1
          ]
        },
        "linecol": [
          2604,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "SALECS + SALECSG + ALLECS + INDECS + PENECS + COD8SA + COD8SB",
          "linecol": [
            2605,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_REVETRANG",
          "linecol": [
            2605,
            1
          ]
        },
        "linecol": [
          2605,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "0",
          "linecol": [
            2606,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_REVETRANG",
          "linecol": [
            2606,
            1
          ]
        },
        "linecol": [
          2606,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(SALECS + SALECSG + ALLECS + INDECS + PENECS + COD8SA +COD8SB ) * (1 - V_CNR) * LIG1 * LIG2",
          "linecol": [
            2609,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_REVETR",
          "linecol": [
            2609,
            1
          ]
        },
        "linecol": [
          2609,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117190,
      "linecol": [
        2601,
        7
      ]
    },
    "linecol": [
      2601,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2613,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2613,
            22
          ]
        }
      ],
      "linecol": [
        2613,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "ESFP",
          "linecol": [
            2615,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_RVORIGND",
          "linecol": [
            2615,
            1
          ]
        },
        "linecol": [
          2615,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ESFP",
          "linecol": [
            2616,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_RVORIGND",
          "linecol": [
            2616,
            1
          ]
        },
        "linecol": [
          2616,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ESFP",
          "linecol": [
            2617,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_RVORIGND",
          "linecol": [
            2617,
            1
          ]
        },
        "linecol": [
          2617,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(ESFP)",
          "linecol": [
            2618,
            21
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_ZIGREVORIGIND",
          "linecol": [
            2618,
            1
          ]
        },
        "linecol": [
          2618,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif (CS_RVORIGND + RD_RVORIGND + PS_RVORIGND + IND_ZIGREVORIGIND) * (1 - V_CNR) * LIG1 * LIG2",
          "linecol": [
            2620,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_RVORIGND",
          "linecol": [
            2620,
            1
          ]
        },
        "linecol": [
          2620,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117200,
      "linecol": [
        2612,
        7
      ]
    },
    "linecol": [
      2612,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2624,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2624,
            22
          ]
        }
      ],
      "linecol": [
        2624,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RE168",
          "linecol": [
            2626,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_RE168",
          "linecol": [
            2626,
            1
          ]
        },
        "linecol": [
          2626,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "RE168",
          "linecol": [
            2627,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_RE168",
          "linecol": [
            2627,
            1
          ]
        },
        "linecol": [
          2627,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "RE168",
          "linecol": [
            2628,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_RE168",
          "linecol": [
            2628,
            1
          ]
        },
        "linecol": [
          2628,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TAX1649",
          "linecol": [
            2630,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_TAX1649",
          "linecol": [
            2630,
            1
          ]
        },
        "linecol": [
          2630,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TAX1649",
          "linecol": [
            2631,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_TAX1649",
          "linecol": [
            2631,
            1
          ]
        },
        "linecol": [
          2631,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TAX1649",
          "linecol": [
            2632,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_TAX1649",
          "linecol": [
            2632,
            1
          ]
        },
        "linecol": [
          2632,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "R1649",
          "linecol": [
            2634,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_R1649",
          "linecol": [
            2634,
            1
          ]
        },
        "linecol": [
          2634,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "R1649",
          "linecol": [
            2635,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_R1649",
          "linecol": [
            2635,
            1
          ]
        },
        "linecol": [
          2635,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "R1649",
          "linecol": [
            2636,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_R1649",
          "linecol": [
            2636,
            1
          ]
        },
        "linecol": [
          2636,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PREREV",
          "linecol": [
            2638,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_PREREV",
          "linecol": [
            2638,
            1
          ]
        },
        "linecol": [
          2638,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PREREV",
          "linecol": [
            2639,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_PREREV",
          "linecol": [
            2639,
            1
          ]
        },
        "linecol": [
          2639,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PREREV",
          "linecol": [
            2640,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_PREREV",
          "linecol": [
            2640,
            1
          ]
        },
        "linecol": [
          2640,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RE168) * (1 - V_CNR) * LIG2",
          "linecol": [
            2642,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRE168",
          "linecol": [
            2642,
            1
          ]
        },
        "linecol": [
          2642,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(TAX1649) * (1 - V_CNR) * LIG2",
          "linecol": [
            2643,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGTAX1649",
          "linecol": [
            2643,
            1
          ]
        },
        "linecol": [
          2643,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(R1649) * (1 - V_CNR) * LIG1 * LIG2",
          "linecol": [
            2645,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGR1649",
          "linecol": [
            2645,
            1
          ]
        },
        "linecol": [
          2645,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PREREV) * (1 - V_CNR) * LIG1 * LIG2",
          "linecol": [
            2646,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPREREV",
          "linecol": [
            2646,
            1
          ]
        },
        "linecol": [
          2646,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117205,
      "linecol": [
        2623,
        7
      ]
    },
    "linecol": [
      2623,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2649,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2649,
            23
          ]
        }
      ],
      "linecol": [
        2649,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + BRDS + BPRS + BCVNSAL + BREGV + BCDIS + BGLOA + BRSE1 + BRSE2 + BRSE3 + BRSE4 + BRSE5 + 0) * (1 - positif(ANNUL2042))",
          "linecol": [
            2651,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPS",
          "linecol": [
            2651,
            1
          ]
        },
        "linecol": [
          2651,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "1 - (null(LIGPS) * null(V_ANTCR))",
          "linecol": [
            2655,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPSP",
          "linecol": [
            2655,
            1
          ]
        },
        "linecol": [
          2655,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(positif(1 - LIGPS) + positif(null(V_NOTRAIT - 23) + null(V_NOTRAIT - 33) + null(V_NOTRAIT - 43) + null(V_NOTRAIT - 53) + null(V_NOTRAIT - 63)))",
          "linecol": [
            2657,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NONLIGPS",
          "linecol": [
            2657,
            1
          ]
        },
        "linecol": [
          2657,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 * (1 - LIGPS) * positif(3 - ANTINDIRPS)) + (3 * (1- positif((1 - LIGPS) * positif(3 - ANTINDIRPS))))",
          "linecol": [
            2659,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDIRPS",
          "linecol": [
            2659,
            1
          ]
        },
        "linecol": [
          2659,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 5000,
      "linecol": [
        2648,
        7
      ]
    },
    "linecol": [
      2648,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2663,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2663,
            22
          ]
        }
      ],
      "linecol": [
        2663,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "BCSG",
          "linecol": [
            2665,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_BASE",
          "linecol": [
            2665,
            1
          ]
        },
        "linecol": [
          2665,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "BRDS",
          "linecol": [
            2666,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_BASE",
          "linecol": [
            2666,
            1
          ]
        },
        "linecol": [
          2666,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "BPRS",
          "linecol": [
            2667,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_BASE",
          "linecol": [
            2667,
            1
          ]
        },
        "linecol": [
          2667,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + V_CSANT)",
          "linecol": [
            2668,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGBASECS",
          "linecol": [
            2668,
            1
          ]
        },
        "linecol": [
          2668,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRDS + V_RDANT)",
          "linecol": [
            2669,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGBASERD",
          "linecol": [
            2669,
            1
          ]
        },
        "linecol": [
          2669,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPRS + V_PSANT)",
          "linecol": [
            2670,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGBASEPS",
          "linecol": [
            2670,
            1
          ]
        },
        "linecol": [
          2670,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCVNSAL + V_CVNANT)",
          "linecol": [
            2671,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGBASECVN",
          "linecol": [
            2671,
            1
          ]
        },
        "linecol": [
          2671,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + BRDS + BPRS + BCVNSAL + V_CSANT + V_RDANT + V_PSANT + V_CVNANT) * LIG2",
          "linecol": [
            2672,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_BASE",
          "linecol": [
            2672,
            1
          ]
        },
        "linecol": [
          2672,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BREGV) * LIG2",
          "linecol": [
            2673,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGREGV",
          "linecol": [
            2673,
            1
          ]
        },
        "linecol": [
          2673,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCDIS + V_CDISANT) * LIG2",
          "linecol": [
            2674,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCDIS",
          "linecol": [
            2674,
            1
          ]
        },
        "linecol": [
          2674,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BGLOA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG2",
          "linecol": [
            2675,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGGLOA",
          "linecol": [
            2675,
            1
          ]
        },
        "linecol": [
          2675,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BGLOACNR) * LIG2",
          "linecol": [
            2676,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGGLOANR",
          "linecol": [
            2676,
            1
          ]
        },
        "linecol": [
          2676,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ZIGGLOA + ZIGGLOANR) * LIG2",
          "linecol": [
            2677,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGGLOALL",
          "linecol": [
            2677,
            1
          ]
        },
        "linecol": [
          2677,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE1) * LIG2",
          "linecol": [
            2678,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE1",
          "linecol": [
            2678,
            1
          ]
        },
        "linecol": [
          2678,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE2) * LIG2",
          "linecol": [
            2679,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE2",
          "linecol": [
            2679,
            1
          ]
        },
        "linecol": [
          2679,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE3) * LIG2",
          "linecol": [
            2680,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE3",
          "linecol": [
            2680,
            1
          ]
        },
        "linecol": [
          2680,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE4) * LIG2",
          "linecol": [
            2681,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE4",
          "linecol": [
            2681,
            1
          ]
        },
        "linecol": [
          2681,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE5) * LIG2",
          "linecol": [
            2682,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE5",
          "linecol": [
            2682,
            1
          ]
        },
        "linecol": [
          2682,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD8YK) * (1-positif(COD8XK)) * LIG2",
          "linecol": [
            2685,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRFRET",
          "linecol": [
            2685,
            1
          ]
        },
        "linecol": [
          2685,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD8XK) * (1-positif(COD8YK)) * LIG2",
          "linecol": [
            2686,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRFDEP",
          "linecol": [
            2686,
            1
          ]
        },
        "linecol": [
          2686,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117210,
      "linecol": [
        2662,
        7
      ]
    },
    "linecol": [
      2662,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2689,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2689,
            22
          ]
        }
      ],
      "linecol": [
        2689,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_TITRECRP",
          "linecol": [
            2690,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TAUXCRP",
          "linecol": [
            2690,
            1
          ]
        },
        "linecol": [
          2690,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_TITRECR",
          "linecol": [
            2691,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TAUXCR",
          "linecol": [
            2691,
            1
          ]
        },
        "linecol": [
          2691,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_TITRECP",
          "linecol": [
            2692,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TAUXCP",
          "linecol": [
            2692,
            1
          ]
        },
        "linecol": [
          2692,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_TITRERP",
          "linecol": [
            2693,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TAUXRP",
          "linecol": [
            2693,
            1
          ]
        },
        "linecol": [
          2693,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_TITRER",
          "linecol": [
            2694,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TAUXR",
          "linecol": [
            2694,
            1
          ]
        },
        "linecol": [
          2694,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGTITRECRPS",
          "linecol": [
            2695,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGTAUX1",
          "linecol": [
            2695,
            1
          ]
        },
        "linecol": [
          2695,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGTITRECRS",
          "linecol": [
            2696,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGTAUX3",
          "linecol": [
            2696,
            1
          ]
        },
        "linecol": [
          2696,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_TITRECR",
          "linecol": [
            2697,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGTAUX4",
          "linecol": [
            2697,
            1
          ]
        },
        "linecol": [
          2697,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117220,
      "linecol": [
        2688,
        7
      ]
    },
    "linecol": [
      2688,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2700,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2700,
            22
          ]
        }
      ],
      "linecol": [
        2700,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG + V_CSANT)",
          "linecol": [
            2701,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGMONTCS",
          "linecol": [
            2701,
            1
          ]
        },
        "linecol": [
          2701,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRDS + V_RDANT)",
          "linecol": [
            2702,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGMONTRD",
          "linecol": [
            2702,
            1
          ]
        },
        "linecol": [
          2702,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPRS + V_PSANT)",
          "linecol": [
            2703,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGMONTPS",
          "linecol": [
            2703,
            1
          ]
        },
        "linecol": [
          2703,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCVNSAL + V_CVNANT)",
          "linecol": [
            2704,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGMONTS",
          "linecol": [
            2704,
            1
          ]
        },
        "linecol": [
          2704,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif (BCSG + BRDS + BPRS + BCVNSAL + V_CSANT + V_RDANT + V_PSANT + V_CVNANT) * (1 - positif(ANNUL2042))",
          "linecol": [
            2705,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_MONTANT",
          "linecol": [
            2705,
            1
          ]
        },
        "linecol": [
          2705,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117290,
      "linecol": [
        2699,
        7
      ]
    },
    "linecol": [
      2699,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2708,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2708,
            23
          ]
        }
      ],
      "linecol": [
        2708,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (RETCS + RETRD + RETPS + RETCVN) * LIG2",
          "linecol": [
            2710,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_INT",
          "linecol": [
            2710,
            1
          ]
        },
        "linecol": [
          2710,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETCDIS) * LIG2",
          "linecol": [
            2712,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT",
          "linecol": [
            2712,
            1
          ]
        },
        "linecol": [
          2712,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETREGV) * LIG2",
          "linecol": [
            2713,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINTREGV",
          "linecol": [
            2713,
            1
          ]
        },
        "linecol": [
          2713,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETGLOA) * LIG2",
          "linecol": [
            2715,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOA",
          "linecol": [
            2715,
            1
          ]
        },
        "linecol": [
          2715,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE1) * LIG2",
          "linecol": [
            2717,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT1",
          "linecol": [
            2717,
            1
          ]
        },
        "linecol": [
          2717,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE2) * LIG2",
          "linecol": [
            2718,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT2",
          "linecol": [
            2718,
            1
          ]
        },
        "linecol": [
          2718,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE3) * LIG2",
          "linecol": [
            2719,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT3",
          "linecol": [
            2719,
            1
          ]
        },
        "linecol": [
          2719,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE4) * LIG2",
          "linecol": [
            2720,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT4",
          "linecol": [
            2720,
            1
          ]
        },
        "linecol": [
          2720,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE5) * LIG2",
          "linecol": [
            2721,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT5",
          "linecol": [
            2721,
            1
          ]
        },
        "linecol": [
          2721,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETCDIS22)",
          "linecol": [
            2723,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT22",
          "linecol": [
            2723,
            1
          ]
        },
        "linecol": [
          2723,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETGLOA22)",
          "linecol": [
            2724,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOA22",
          "linecol": [
            2724,
            1
          ]
        },
        "linecol": [
          2724,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETREGV22) * LIG2",
          "linecol": [
            2725,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINTREGV22",
          "linecol": [
            2725,
            1
          ]
        },
        "linecol": [
          2725,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE122) * LIG2",
          "linecol": [
            2727,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT122",
          "linecol": [
            2727,
            1
          ]
        },
        "linecol": [
          2727,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE222) * LIG2",
          "linecol": [
            2728,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT222",
          "linecol": [
            2728,
            1
          ]
        },
        "linecol": [
          2728,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE322) * LIG2",
          "linecol": [
            2729,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT322",
          "linecol": [
            2729,
            1
          ]
        },
        "linecol": [
          2729,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE422) * LIG2",
          "linecol": [
            2730,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT422",
          "linecol": [
            2730,
            1
          ]
        },
        "linecol": [
          2730,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RETRSE522) * LIG2",
          "linecol": [
            2731,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGINT522",
          "linecol": [
            2731,
            1
          ]
        },
        "linecol": [
          2731,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117300,
      "linecol": [
        2707,
        7
      ]
    },
    "linecol": [
      2707,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2734,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2734,
            22
          ]
        }
      ],
      "linecol": [
        2734,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_PENAMONT * positif(NMAJC1 + NMAJR1 + NMAJP1 + NMAJCVN1) * LIG2",
          "linecol": [
            2735,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_PEN17281",
          "linecol": [
            2735,
            1
          ]
        },
        "linecol": [
          2735,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_PENAMONT * positif(NMAJC4 + NMAJR4 + NMAJP4 + NMAJCVN4) * LIG2",
          "linecol": [
            2737,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_PENATX4",
          "linecol": [
            2737,
            1
          ]
        },
        "linecol": [
          2737,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_PENAMONT * positif(NMAJC1 + NMAJR1 + NMAJP1 + NMAJCVN1) * LIG2",
          "linecol": [
            2738,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_PENATAUX",
          "linecol": [
            2738,
            1
          ]
        },
        "linecol": [
          2738,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ZIG_PENATX4) * positif(1 - positif(R1649 + PREREV)) * LIG2",
          "linecol": [
            2740,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGNONR30",
          "linecol": [
            2740,
            1
          ]
        },
        "linecol": [
          2740,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ZIG_PENATX4) * positif(R1649 + PREREV) * LIG2",
          "linecol": [
            2741,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGR30",
          "linecol": [
            2741,
            1
          ]
        },
        "linecol": [
          2741,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PREGV) * positif(NMAJREGV1) * LIG2",
          "linecol": [
            2743,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENAREGV",
          "linecol": [
            2743,
            1
          ]
        },
        "linecol": [
          2743,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PCDIS) * positif(NMAJCDIS1) * LIG2",
          "linecol": [
            2745,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENACDIS",
          "linecol": [
            2745,
            1
          ]
        },
        "linecol": [
          2745,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PGLOA) * positif(NMAJGLO1) * LIG2",
          "linecol": [
            2747,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENAGLO1",
          "linecol": [
            2747,
            1
          ]
        },
        "linecol": [
          2747,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE1) * positif(NMAJRSE11) * LIG2",
          "linecol": [
            2749,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE1",
          "linecol": [
            2749,
            1
          ]
        },
        "linecol": [
          2749,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE2) * positif(NMAJRSE21) * LIG2",
          "linecol": [
            2750,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE2",
          "linecol": [
            2750,
            1
          ]
        },
        "linecol": [
          2750,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE3) * positif(NMAJRSE31) * LIG2",
          "linecol": [
            2751,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE3",
          "linecol": [
            2751,
            1
          ]
        },
        "linecol": [
          2751,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE4) * positif(NMAJRSE41) * LIG2",
          "linecol": [
            2752,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE4",
          "linecol": [
            2752,
            1
          ]
        },
        "linecol": [
          2752,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE5) * positif(NMAJRSE51) * LIG2",
          "linecol": [
            2753,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE5",
          "linecol": [
            2753,
            1
          ]
        },
        "linecol": [
          2753,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PCDIS) * positif(NMAJCDIS4) * LIG2",
          "linecol": [
            2755,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENACDIS4",
          "linecol": [
            2755,
            1
          ]
        },
        "linecol": [
          2755,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PGLOA) * positif(NMAJGLO4) * LIG2",
          "linecol": [
            2757,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENAGLO4",
          "linecol": [
            2757,
            1
          ]
        },
        "linecol": [
          2757,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE1) * positif(NMAJRSE14) * LIG2",
          "linecol": [
            2759,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE14",
          "linecol": [
            2759,
            1
          ]
        },
        "linecol": [
          2759,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE2) * positif(NMAJRSE24) * LIG2",
          "linecol": [
            2760,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE24",
          "linecol": [
            2760,
            1
          ]
        },
        "linecol": [
          2760,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE3) * positif(NMAJRSE34) * LIG2",
          "linecol": [
            2761,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE34",
          "linecol": [
            2761,
            1
          ]
        },
        "linecol": [
          2761,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE4) * positif(NMAJRSE44) * LIG2",
          "linecol": [
            2762,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE44",
          "linecol": [
            2762,
            1
          ]
        },
        "linecol": [
          2762,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSE5) * positif(NMAJRSE54) * LIG2",
          "linecol": [
            2763,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPENARSE54",
          "linecol": [
            2763,
            1
          ]
        },
        "linecol": [
          2763,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117330,
      "linecol": [
        2733,
        7
      ]
    },
    "linecol": [
      2733,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2766,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2766,
            22
          ]
        }
      ],
      "linecol": [
        2766,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(PCSG + PRDS + PPRS + PCVN) * LIG2",
          "linecol": [
            2767,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_PENAMONT",
          "linecol": [
            2767,
            1
          ]
        },
        "linecol": [
          2767,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117350,
      "linecol": [
        2765,
        7
      ]
    },
    "linecol": [
      2765,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2769,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2769,
            22
          ]
        }
      ],
      "linecol": [
        2769,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(CICSG + CIRDS + CIPRS) * LIG2",
          "linecol": [
            2770,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CRDETR",
          "linecol": [
            2770,
            1
          ]
        },
        "linecol": [
          2770,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117360,
      "linecol": [
        2768,
        7
      ]
    },
    "linecol": [
      2768,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2773,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2773,
            23
          ]
        }
      ],
      "linecol": [
        2773,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD8YL) * TYPE2",
          "linecol": [
            2775,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCOD8YL",
          "linecol": [
            2775,
            1
          ]
        },
        "linecol": [
          2775,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD8YT) * TYPE2",
          "linecol": [
            2776,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCOD8YT",
          "linecol": [
            2776,
            1
          ]
        },
        "linecol": [
          2776,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CDISPROV) * TYPE2",
          "linecol": [
            2777,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCDISPROV",
          "linecol": [
            2777,
            1
          ]
        },
        "linecol": [
          2777,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REVCSXA) * TYPE2",
          "linecol": [
            2779,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGREVXA",
          "linecol": [
            2779,
            1
          ]
        },
        "linecol": [
          2779,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REVCSXB) * TYPE2",
          "linecol": [
            2781,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGREVXB",
          "linecol": [
            2781,
            1
          ]
        },
        "linecol": [
          2781,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REVCSXC + COD8XI) * TYPE2",
          "linecol": [
            2782,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGREVXC",
          "linecol": [
            2782,
            1
          ]
        },
        "linecol": [
          2782,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REVCSXD) * TYPE2",
          "linecol": [
            2784,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGREVXD",
          "linecol": [
            2784,
            1
          ]
        },
        "linecol": [
          2784,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REVCSXE + COD8XJ) * TYPE2",
          "linecol": [
            2785,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGREVXE",
          "linecol": [
            2785,
            1
          ]
        },
        "linecol": [
          2785,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CSPROVYD) * TYPE2",
          "linecol": [
            2787,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPROVYD",
          "linecol": [
            2787,
            1
          ]
        },
        "linecol": [
          2787,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CSPROVYE) * TYPE2",
          "linecol": [
            2789,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPROVYE",
          "linecol": [
            2789,
            1
          ]
        },
        "linecol": [
          2789,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CSPROVYF + CSPROVYN) * TYPE2",
          "linecol": [
            2791,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPROVYF",
          "linecol": [
            2791,
            1
          ]
        },
        "linecol": [
          2791,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CSPROVYF + CSPROVYN",
          "linecol": [
            2792,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSPROVRSE2",
          "linecol": [
            2792,
            1
          ]
        },
        "linecol": [
          2792,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CSPROVYG) * TYPE2",
          "linecol": [
            2794,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPROVYG",
          "linecol": [
            2794,
            1
          ]
        },
        "linecol": [
          2794,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CSPROVYH + CSPROVYP) * TYPE2",
          "linecol": [
            2796,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPROVYH",
          "linecol": [
            2796,
            1
          ]
        },
        "linecol": [
          2796,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CSPROVYH + CSPROVYP",
          "linecol": [
            2797,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSPROVRSE4",
          "linecol": [
            2797,
            1
          ]
        },
        "linecol": [
          2797,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117380,
      "linecol": [
        2772,
        7
      ]
    },
    "linecol": [
      2772,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2799,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2799,
            23
          ]
        }
      ],
      "linecol": [
        2799,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_ANTCR) * TYPE2",
          "linecol": [
            2801,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CTRIANT",
          "linecol": [
            2801,
            1
          ]
        },
        "linecol": [
          2801,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_CSANT) * TYPE2* (1 - APPLI_OCEANS)",
          "linecol": [
            2803,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCSANT",
          "linecol": [
            2803,
            1
          ]
        },
        "linecol": [
          2803,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_RDANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2805,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRDANT",
          "linecol": [
            2805,
            1
          ]
        },
        "linecol": [
          2805,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_PSANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2807,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGPSANT",
          "linecol": [
            2807,
            1
          ]
        },
        "linecol": [
          2807,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_CVNANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2809,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCVNANT",
          "linecol": [
            2809,
            1
          ]
        },
        "linecol": [
          2809,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_CDISANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2811,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCDISANT",
          "linecol": [
            2811,
            1
          ]
        },
        "linecol": [
          2811,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_GLOANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2813,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOANT",
          "linecol": [
            2813,
            1
          ]
        },
        "linecol": [
          2813,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_RSE1ANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2815,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE1ANT",
          "linecol": [
            2815,
            1
          ]
        },
        "linecol": [
          2815,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_RSE2ANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2816,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE2ANT",
          "linecol": [
            2816,
            1
          ]
        },
        "linecol": [
          2816,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_RSE3ANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2817,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE3ANT",
          "linecol": [
            2817,
            1
          ]
        },
        "linecol": [
          2817,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_RSE4ANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2818,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE4ANT",
          "linecol": [
            2818,
            1
          ]
        },
        "linecol": [
          2818,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_RSE5ANT) * TYPE2 * (1 - APPLI_OCEANS)",
          "linecol": [
            2819,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSE5ANT",
          "linecol": [
            2819,
            1
          ]
        },
        "linecol": [
          2819,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117390,
      "linecol": [
        2798,
        7
      ]
    },
    "linecol": [
      2798,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2821,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2821,
            22
          ]
        }
      ],
      "linecol": [
        2821,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD8YT + PRSPROV + CSGIM + CRDSIM) * LIG2",
          "linecol": [
            2823,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CTRIPROV",
          "linecol": [
            2823,
            1
          ]
        },
        "linecol": [
          2823,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PRSPROV_A + CSGIM_A + CRDSIM_A) * LIG2",
          "linecol": [
            2825,
            21
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CONTRIBPROV_A",
          "linecol": [
            2825,
            1
          ]
        },
        "linecol": [
          2825,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117410,
      "linecol": [
        2820,
        7
      ]
    },
    "linecol": [
      2820,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2828,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2828,
            22
          ]
        }
      ],
      "linecol": [
        2828,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCSG) * positif(PCSG + CICSG + CSGIM) * (1 - INDCTX)",
          "linecol": [
            2829,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_COLC",
          "linecol": [
            2829,
            1
          ]
        },
        "linecol": [
          2829,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRDS) * positif(PRDS + CIRDS + CRDSIM) * (1 - INDCTX)",
          "linecol": [
            2831,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_COLR",
          "linecol": [
            2831,
            1
          ]
        },
        "linecol": [
          2831,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPRS) * positif(PPRS + CIPRS + PRSPROV) * (1 - INDCTX)",
          "linecol": [
            2833,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_COLP",
          "linecol": [
            2833,
            1
          ]
        },
        "linecol": [
          2833,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCVNSAL) * positif(PCVN + COD8YT) * (1 - INDCTX)",
          "linecol": [
            2835,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDCOLVN",
          "linecol": [
            2835,
            1
          ]
        },
        "linecol": [
          2835,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BREGV) * positif(PREGV) * (1 - INDCTX)",
          "linecol": [
            2837,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDREGV",
          "linecol": [
            2837,
            1
          ]
        },
        "linecol": [
          2837,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IND_COLC + IND_COLR + IND_COLP + INDCOLVN)",
          "linecol": [
            2839,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDCOL",
          "linecol": [
            2839,
            1
          ]
        },
        "linecol": [
          2839,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BCDIS) * positif(PCDIS + CDISPROV) * (1 - INDCTX)",
          "linecol": [
            2841,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_COLD",
          "linecol": [
            2841,
            1
          ]
        },
        "linecol": [
          2841,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BGLOA) * positif(PGLOA+COD8YL) * (1 - INDCTX)",
          "linecol": [
            2843,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDGLOA",
          "linecol": [
            2843,
            1
          ]
        },
        "linecol": [
          2843,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE1) * positif(PRSE1 + CIRSE1 + CSPROVYD) * (1 - INDCTX)",
          "linecol": [
            2845,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE1",
          "linecol": [
            2845,
            1
          ]
        },
        "linecol": [
          2845,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE2) * positif(PRSE2 + CIRSE2 + CSPROVYF + CSPROVYN) * (1 - INDCTX)",
          "linecol": [
            2846,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE2",
          "linecol": [
            2846,
            1
          ]
        },
        "linecol": [
          2846,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE3) * positif(PRSE3 + CIRSE3 + CSPROVYG) * (1 - INDCTX)",
          "linecol": [
            2847,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE3",
          "linecol": [
            2847,
            1
          ]
        },
        "linecol": [
          2847,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE4) * positif(PRSE4 + CIRSE4 + CSPROVYH + CSPROVYP) * (1 - INDCTX)",
          "linecol": [
            2848,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE4",
          "linecol": [
            2848,
            1
          ]
        },
        "linecol": [
          2848,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BRSE5) * positif(PRSE5 + CIRSE5 + CSPROVYE) * (1 - INDCTX)",
          "linecol": [
            2849,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE5",
          "linecol": [
            2849,
            1
          ]
        },
        "linecol": [
          2849,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_DEG) * positif(BCSG) * positif(INDCTX)",
          "linecol": [
            2851,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_CTXC",
          "linecol": [
            2851,
            1
          ]
        },
        "linecol": [
          2851,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_DEG) * positif(BRDS) * positif(INDCTX)",
          "linecol": [
            2853,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_CTXR",
          "linecol": [
            2853,
            1
          ]
        },
        "linecol": [
          2853,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_DEG) * positif(BPRS) * positif(INDCTX)",
          "linecol": [
            2855,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_CTXP",
          "linecol": [
            2855,
            1
          ]
        },
        "linecol": [
          2855,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_DEG) * positif(BCDIS) * positif(INDCTX)",
          "linecol": [
            2857,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND_CTXD",
          "linecol": [
            2857,
            1
          ]
        },
        "linecol": [
          2857,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_DEG) * positif(BRSE1) * positif(INDCTX)",
          "linecol": [
            2859,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE1X",
          "linecol": [
            2859,
            1
          ]
        },
        "linecol": [
          2859,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_DEG) * positif(BRSE2) * positif(INDCTX)",
          "linecol": [
            2860,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE2X",
          "linecol": [
            2860,
            1
          ]
        },
        "linecol": [
          2860,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_DEG) * positif(BRSE3) * positif(INDCTX)",
          "linecol": [
            2861,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE3X",
          "linecol": [
            2861,
            1
          ]
        },
        "linecol": [
          2861,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_DEG) * positif(BRSE4) * positif(INDCTX)",
          "linecol": [
            2862,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE4X",
          "linecol": [
            2862,
            1
          ]
        },
        "linecol": [
          2862,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_DEG) * positif(BRSE5) * positif(INDCTX)",
          "linecol": [
            2863,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRSE5X",
          "linecol": [
            2863,
            1
          ]
        },
        "linecol": [
          2863,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "null(5 - V_IND_TRAIT)",
          "linecol": [
            2864,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDTRAIT",
          "linecol": [
            2864,
            1
          ]
        },
        "linecol": [
          2864,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IND_COLC + IND_COLR + IND_COLP + IND_COLS + IND_CTXC + IND_CTXR + IND_CTXP + IND_CTXS) * INDTRAIT",
          "linecol": [
            2866,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDT",
          "linecol": [
            2866,
            1
          ]
        },
        "linecol": [
          2866,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDCOLS + INDCTXS) * INDTRAIT",
          "linecol": [
            2869,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDTS",
          "linecol": [
            2869,
            1
          ]
        },
        "linecol": [
          2869,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IND_COLD + IND_CTXD) * INDTRAIT",
          "linecol": [
            2871,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDTD",
          "linecol": [
            2871,
            1
          ]
        },
        "linecol": [
          2871,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDRSE1 + INDRSE1X) * INDTRAIT",
          "linecol": [
            2873,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDE1",
          "linecol": [
            2873,
            1
          ]
        },
        "linecol": [
          2873,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDRSE2 + INDRSE2X) * INDTRAIT",
          "linecol": [
            2874,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDE2",
          "linecol": [
            2874,
            1
          ]
        },
        "linecol": [
          2874,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDRSE3 + INDRSE3X) * INDTRAIT",
          "linecol": [
            2875,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDE3",
          "linecol": [
            2875,
            1
          ]
        },
        "linecol": [
          2875,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDRSE4 + INDRSE4X) * INDTRAIT",
          "linecol": [
            2876,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDE4",
          "linecol": [
            2876,
            1
          ]
        },
        "linecol": [
          2876,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDRSE5 + INDRSE5X) * INDTRAIT",
          "linecol": [
            2877,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDE5",
          "linecol": [
            2877,
            1
          ]
        },
        "linecol": [
          2877,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117430,
      "linecol": [
        2827,
        7
      ]
    },
    "linecol": [
      2827,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2880,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2880,
            22
          ]
        }
      ],
      "linecol": [
        2880,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (BCSG  + BRDS + BPRS + BCVNSAL + BREGV + BCDIS + BGLOA + BRSE1 + BRSE2 + BRSE3 + BRSE4 + BRSE5) * LIG2",
          "linecol": [
            2881,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_NETAP",
          "linecol": [
            2881,
            1
          ]
        },
        "linecol": [
          2881,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117440,
      "linecol": [
        2879,
        7
      ]
    },
    "linecol": [
      2879,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2885,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2885,
            22
          ]
        }
      ],
      "linecol": [
        2885,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (CRDEG) * positif(INDCTX)",
          "linecol": [
            2886,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TOTDEG",
          "linecol": [
            2886,
            1
          ]
        },
        "linecol": [
          2886,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_NETAP + ZIG_TOTDEG",
          "linecol": [
            2888,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_TITREP",
          "linecol": [
            2888,
            1
          ]
        },
        "linecol": [
          2888,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDCTX) * positif(ANNUL2042)",
          "linecol": [
            2890,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGANNUL",
          "linecol": [
            2890,
            1
          ]
        },
        "linecol": [
          2890,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117450,
      "linecol": [
        2884,
        7
      ]
    },
    "linecol": [
      2884,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2893,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2893,
            22
          ]
        }
      ],
      "linecol": [
        2893,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif (CS_DEG) * positif (SEUIL_8 - CS_DEG) * LIG2",
          "linecol": [
            2895,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_INF8",
          "linecol": [
            2895,
            1
          ]
        },
        "linecol": [
          2895,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117490,
      "linecol": [
        2892,
        7
      ]
    },
    "linecol": [
      2892,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2898,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2898,
            22
          ]
        }
      ],
      "linecol": [
        2898,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif((1 - positif(20 - V_NOTRAIT)) * positif(V_ANREV - V_0AX) * positif(V_ANREV - V_0AZ) * positif(V_ANREV - V_0AY) + positif(V_NOTRAIT - 20)) * LIG2",
          "linecol": [
            2899,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_REMPLACE",
          "linecol": [
            2899,
            1
          ]
        },
        "linecol": [
          2899,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117660,
      "linecol": [
        2897,
        7
      ]
    },
    "linecol": [
      2897,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2905,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2905,
            22
          ]
        }
      ],
      "linecol": [
        2905,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_CSANT+V_RDANT+V_PSANT+0) * positif(CRDEG+0) * positif(SEUIL_61-TOTCRA-CSNET-RDNET-PRSNET-CDISNET+0) * (1 - null(CSTOT+0)) * LIG2",
          "linecol": [
            2906,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_DEGINF61",
          "linecol": [
            2906,
            1
          ]
        },
        "linecol": [
          2906,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117710,
      "linecol": [
        2904,
        7
      ]
    },
    "linecol": [
      2904,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2912,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2912,
            23
          ]
        }
      ],
      "linecol": [
        2912,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_IDANT - DCSGD) * positif(IDCSG) * (1 - null(V_IDANT + DCSGD + 0)) * (1 - null(V_IDANT - DCSGD)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2914,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CSGDDO",
          "linecol": [
            2914,
            1
          ]
        },
        "linecol": [
          2914,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCSGD - V_IDANT) * positif(IDCSG) * (1 - null(V_IDANT + DCSGD + 0)) * (1 - null(V_IDANT - DCSGD)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2916,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CSGDRS",
          "linecol": [
            2916,
            1
          ]
        },
        "linecol": [
          2916,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ZIG_CSGDDO + ZIG_CSGDRS + null(V_IDANT - DCSGD)) * (1 - null(V_IDANT + DCSGD + 0)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2918,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CSGDC",
          "linecol": [
            2918,
            1
          ]
        },
        "linecol": [
          2918,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ZIG_CSGDDO + ZIG_CSGDRS) * (1 - null(V_IDANT + DCSGD + 0)) * (1 - null(V_IDANT - DCSGD)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2920,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CSGDCOR",
          "linecol": [
            2920,
            1
          ]
        },
        "linecol": [
          2920,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 1)",
          "linecol": [
            2922,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCSGDCOR1",
          "linecol": [
            2922,
            1
          ]
        },
        "linecol": [
          2922,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 2)",
          "linecol": [
            2923,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCSGDCOR2",
          "linecol": [
            2923,
            1
          ]
        },
        "linecol": [
          2923,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 3)",
          "linecol": [
            2924,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCSGDCOR3",
          "linecol": [
            2924,
            1
          ]
        },
        "linecol": [
          2924,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 4)",
          "linecol": [
            2925,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCSGDCOR4",
          "linecol": [
            2925,
            1
          ]
        },
        "linecol": [
          2925,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 5)",
          "linecol": [
            2926,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCSGDCOR5",
          "linecol": [
            2926,
            1
          ]
        },
        "linecol": [
          2926,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 6)",
          "linecol": [
            2927,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGCSGDCOR6",
          "linecol": [
            2927,
            1
          ]
        },
        "linecol": [
          2927,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117820,
      "linecol": [
        2911,
        7
      ]
    },
    "linecol": [
      2911,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2930,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2930,
            23
          ]
        }
      ],
      "linecol": [
        2930,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_GLOANT - DGLOD) * positif(IDGLO) * (1 - null(V_IDGLOANT + DGLOD + 0)) * (1 - null(V_IDGLOANT - DGLOD)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2932,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLODD",
          "linecol": [
            2932,
            1
          ]
        },
        "linecol": [
          2932,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DGLOD - V_GLOANT) * positif(IDGLO) * (1 - null(V_IDGLOANT + DGLOD + 0)) * (1 - null(V_IDGLOANT - DGLOD)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2934,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLORS",
          "linecol": [
            2934,
            1
          ]
        },
        "linecol": [
          2934,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ZIGLODD + ZIGLORS + null(V_IDGLOANT - DGLOD)) * (1 - null(V_IDGLOANT + DGLOD + 0)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2936,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOCO",
          "linecol": [
            2936,
            1
          ]
        },
        "linecol": [
          2936,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ZIGLODD + ZIGLORS) * (1 - null(V_IDGLOANT + DGLOD + 0)) * (1 - null(V_IDGLOANT - DGLOD)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2938,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOCOR",
          "linecol": [
            2938,
            1
          ]
        },
        "linecol": [
          2938,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGLOCOR * null(ANCSDED2 - V_ANREV + 1)",
          "linecol": [
            2940,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOCOR1",
          "linecol": [
            2940,
            1
          ]
        },
        "linecol": [
          2940,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGLOCOR * null(ANCSDED2 - V_ANREV + 2)",
          "linecol": [
            2941,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOCOR2",
          "linecol": [
            2941,
            1
          ]
        },
        "linecol": [
          2941,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGLOCOR * null(ANCSDED2 - V_ANREV + 3)",
          "linecol": [
            2942,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOCOR3",
          "linecol": [
            2942,
            1
          ]
        },
        "linecol": [
          2942,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGLOCOR * null(ANCSDED2 - V_ANREV + 4)",
          "linecol": [
            2943,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOCOR4",
          "linecol": [
            2943,
            1
          ]
        },
        "linecol": [
          2943,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGLOCOR * null(ANCSDED2 - V_ANREV + 5)",
          "linecol": [
            2944,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOCOR5",
          "linecol": [
            2944,
            1
          ]
        },
        "linecol": [
          2944,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGLOCOR * null(ANCSDED2 - V_ANREV + 6)",
          "linecol": [
            2945,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGLOCOR6",
          "linecol": [
            2945,
            1
          ]
        },
        "linecol": [
          2945,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_RSE1ANT + V_RSE2ANT + V_RSE3ANT + V_RSE4ANT + V_RSE5ANT - DRSED) * positif(IDRSE) * (1 - null(V_IDRSEANT + DRSED + 0)) * (1 - null(V_IDRSEANT - DRSED)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2947,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSEDD",
          "linecol": [
            2947,
            1
          ]
        },
        "linecol": [
          2947,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DRSED - (V_RSE1ANT + V_RSE2ANT + V_RSE3ANT + V_RSE4ANT + V_RSE5ANT)) * positif(IDRSE) * (1 - null(V_IDRSEANT + DRSED + 0)) * (1 - null(V_IDRSEANT - DRSED)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2950,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSERS",
          "linecol": [
            2950,
            1
          ]
        },
        "linecol": [
          2950,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ZIGRSEDD + ZIGRSERS + null(V_IDRSEANT - DRSED)) * (1 - null(V_IDRSEANT + DRSED + 0)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2953,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSECO",
          "linecol": [
            2953,
            1
          ]
        },
        "linecol": [
          2953,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ZIGRSEDD + ZIGRSERS) * (1 - null(V_IDRSEANT + DRSED + 0)) * (1 - null(V_IDRSEANT - DRSED)) * positif(V_NOTRAIT - 20) * LIG2",
          "linecol": [
            2955,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSECOR",
          "linecol": [
            2955,
            1
          ]
        },
        "linecol": [
          2955,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGRSECOR * null(ANCSDED2 - V_ANREV + 1)",
          "linecol": [
            2957,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSECOR1",
          "linecol": [
            2957,
            1
          ]
        },
        "linecol": [
          2957,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGRSECOR * null(ANCSDED2 - V_ANREV + 2)",
          "linecol": [
            2958,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSECOR2",
          "linecol": [
            2958,
            1
          ]
        },
        "linecol": [
          2958,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGRSECOR * null(ANCSDED2 - V_ANREV + 3)",
          "linecol": [
            2959,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSECOR3",
          "linecol": [
            2959,
            1
          ]
        },
        "linecol": [
          2959,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGRSECOR * null(ANCSDED2 - V_ANREV + 4)",
          "linecol": [
            2960,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSECOR4",
          "linecol": [
            2960,
            1
          ]
        },
        "linecol": [
          2960,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGRSECOR * null(ANCSDED2 - V_ANREV + 5)",
          "linecol": [
            2961,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSECOR5",
          "linecol": [
            2961,
            1
          ]
        },
        "linecol": [
          2961,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGRSECOR * null(ANCSDED2 - V_ANREV + 6)",
          "linecol": [
            2962,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGRSECOR6",
          "linecol": [
            2962,
            1
          ]
        },
        "linecol": [
          2962,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117822,
      "linecol": [
        2929,
        7
      ]
    },
    "linecol": [
      2929,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2965,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2965,
            22
          ]
        }
      ],
      "linecol": [
        2965,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(NAPCR) * LIG2",
          "linecol": [
            2966,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_PRIM",
          "linecol": [
            2966,
            1
          ]
        },
        "linecol": [
          2966,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117850,
      "linecol": [
        2964,
        7
      ]
    },
    "linecol": [
      2964,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2968,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2968,
            22
          ]
        }
      ],
      "linecol": [
        2968,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RDNCP",
          "linecol": [
            2970,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS_BPCOS",
          "linecol": [
            2970,
            1
          ]
        },
        "linecol": [
          2970,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_BPCOS",
          "linecol": [
            2971,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD_BPCOS",
          "linecol": [
            2971,
            1
          ]
        },
        "linecol": [
          2971,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CS_BPCOS",
          "linecol": [
            2972,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS_BPCOS",
          "linecol": [
            2972,
            1
          ]
        },
        "linecol": [
          2972,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CS_BPCOS + RD_BPCOS + PS_BPCOS) * (1 - V_CNR) * LIG1 * LIG2",
          "linecol": [
            2974,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_BPCOS",
          "linecol": [
            2974,
            1
          ]
        },
        "linecol": [
          2974,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117130,
      "linecol": [
        2967,
        7
      ]
    },
    "linecol": [
      2967,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            2977,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            2977,
            23
          ]
        }
      ],
      "linecol": [
        2977,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(V_ANCSDED * (1 - null(933 - V_ROLCSG)) + (V_ANCSDED + 1) * null(933 - V_ROLCSG)) * positif(V_ROLCSG + 0) + V_ANCSDED * (1 - positif(V_ROLCSG + 0))",
          "linecol": [
            2979,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ANCSDED2",
          "linecol": [
            2979,
            1
          ]
        },
        "linecol": [
          2979,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(V_CSANT + V_RDANT + V_PSANT + V_IDANT)) * positif(IDCSG) * LIG2",
          "linecol": [
            2982,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CSGDPRIM",
          "linecol": [
            2982,
            1
          ]
        },
        "linecol": [
          2982,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGDPRIM * (1 - null(V_IDANT + DCSGD + 0)) * positif(DCSGD) * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            2984,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIG_CSGD99",
          "linecol": [
            2984,
            1
          ]
        },
        "linecol": [
          2984,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGD99 * null(ANCSDED2 - (V_ANREV + 1)) * LIG2",
          "linecol": [
            2986,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDCSGD1",
          "linecol": [
            2986,
            1
          ]
        },
        "linecol": [
          2986,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGD99 * null(ANCSDED2 - (V_ANREV + 2)) * LIG2",
          "linecol": [
            2987,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDCSGD2",
          "linecol": [
            2987,
            1
          ]
        },
        "linecol": [
          2987,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGD99 * null(ANCSDED2 - (V_ANREV + 3)) * LIG2",
          "linecol": [
            2988,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDCSGD3",
          "linecol": [
            2988,
            1
          ]
        },
        "linecol": [
          2988,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGD99 * null(ANCSDED2 - (V_ANREV + 4)) * LIG2",
          "linecol": [
            2989,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDCSGD4",
          "linecol": [
            2989,
            1
          ]
        },
        "linecol": [
          2989,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGD99 * null(ANCSDED2 - (V_ANREV + 5)) * LIG2",
          "linecol": [
            2990,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDCSGD5",
          "linecol": [
            2990,
            1
          ]
        },
        "linecol": [
          2990,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIG_CSGD99 * null(ANCSDED2 - (V_ANREV + 6)) * LIG2",
          "linecol": [
            2991,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDCSGD6",
          "linecol": [
            2991,
            1
          ]
        },
        "linecol": [
          2991,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IDGLO) * (1 - null(V_IDGLOANT + DGLOD + 0))  * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            2993,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGIDGLO",
          "linecol": [
            2993,
            1
          ]
        },
        "linecol": [
          2993,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDGLO * null(ANCSDED2 - (V_ANREV + 1))",
          "linecol": [
            2995,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGIDGLO1",
          "linecol": [
            2995,
            1
          ]
        },
        "linecol": [
          2995,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDGLO * null(ANCSDED2 - (V_ANREV + 2))",
          "linecol": [
            2996,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGIDGLO2",
          "linecol": [
            2996,
            1
          ]
        },
        "linecol": [
          2996,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDGLO * null(ANCSDED2 - (V_ANREV + 3))",
          "linecol": [
            2997,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGIDGLO3",
          "linecol": [
            2997,
            1
          ]
        },
        "linecol": [
          2997,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDGLO * null(ANCSDED2 - (V_ANREV + 4))",
          "linecol": [
            2998,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGIDGLO4",
          "linecol": [
            2998,
            1
          ]
        },
        "linecol": [
          2998,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDGLO * null(ANCSDED2 - (V_ANREV + 5))",
          "linecol": [
            2999,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGIDGLO5",
          "linecol": [
            2999,
            1
          ]
        },
        "linecol": [
          2999,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDGLO * null(ANCSDED2 - (V_ANREV + 6))",
          "linecol": [
            3000,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGIDGLO6",
          "linecol": [
            3000,
            1
          ]
        },
        "linecol": [
          3000,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IDRSE) * (1 - null(V_IDRSEANT + DRSED + 0)) * positif(20 - V_NOTRAIT) * LIG2",
          "linecol": [
            3002,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGIDRSE",
          "linecol": [
            3002,
            1
          ]
        },
        "linecol": [
          3002,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDRSE * null(ANCSDED2 - (V_ANREV + 1))",
          "linecol": [
            3004,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDRSED1",
          "linecol": [
            3004,
            1
          ]
        },
        "linecol": [
          3004,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDRSE * null(ANCSDED2 - (V_ANREV + 2))",
          "linecol": [
            3005,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDRSED2",
          "linecol": [
            3005,
            1
          ]
        },
        "linecol": [
          3005,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDRSE * null(ANCSDED2 - (V_ANREV + 3))",
          "linecol": [
            3006,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDRSED3",
          "linecol": [
            3006,
            1
          ]
        },
        "linecol": [
          3006,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDRSE * null(ANCSDED2 - (V_ANREV + 4))",
          "linecol": [
            3007,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDRSED4",
          "linecol": [
            3007,
            1
          ]
        },
        "linecol": [
          3007,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDRSE * null(ANCSDED2 - (V_ANREV + 5))",
          "linecol": [
            3008,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDRSED5",
          "linecol": [
            3008,
            1
          ]
        },
        "linecol": [
          3008,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "ZIGIDRSE * null(ANCSDED2 - (V_ANREV + 6))",
          "linecol": [
            3009,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ZIGDRSED6",
          "linecol": [
            3009,
            1
          ]
        },
        "linecol": [
          3009,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 117801,
      "linecol": [
        2976,
        7
      ]
    },
    "linecol": [
      2976,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3012,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3012,
            22
          ]
        }
      ],
      "linecol": [
        3012,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVSURSI + CODRWA) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3014,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPVSURSI",
          "linecol": [
            3014,
            1
          ]
        },
        "linecol": [
          3014,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPTP19WGWJ) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3016,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBPTPGJ",
          "linecol": [
            3016,
            1
          ]
        },
        "linecol": [
          3016,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IREXITI) * (1 - positif(IREXITS)) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            3018,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIREXITI",
          "linecol": [
            3018,
            1
          ]
        },
        "linecol": [
          3018,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IREXITI19) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            3020,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIREXI19",
          "linecol": [
            3020,
            1
          ]
        },
        "linecol": [
          3020,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IREXITS) * (1 - positif(IREXITI)) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            3022,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIREXITS",
          "linecol": [
            3022,
            1
          ]
        },
        "linecol": [
          3022,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IREXITS19) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            3024,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIREXS19",
          "linecol": [
            3024,
            1
          ]
        },
        "linecol": [
          3024,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVIMPOS + CODRWB) * positif(PVSURSI + CODRWA) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            3026,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIREXIT",
          "linecol": [
            3026,
            1
          ]
        },
        "linecol": [
          3026,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVIMPOS + CODRWB) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            3028,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPV3WBI",
          "linecol": [
            3028,
            1
          ]
        },
        "linecol": [
          3028,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(EXITTAX3) * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO)) * LIG1 * LIG2",
          "linecol": [
            3030,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGEXITAX3",
          "linecol": [
            3030,
            1
          ]
        },
        "linecol": [
          3030,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( LIGPVSURSI + LIGBPTPGJ + LIGIREXITI + LIGIREXI19 + LIGIREXITS + LIGIREXS19 + LIGIREXIT + LIGEXITAX3 + LIGSURIMP ) * LIG1 * LIG2",
          "linecol": [
            3032,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_SURSIS",
          "linecol": [
            3032,
            1
          ]
        },
        "linecol": [
          3032,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 113530,
      "linecol": [
        3011,
        7
      ]
    },
    "linecol": [
      3011,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3037,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3037,
            22
          ]
        }
      ],
      "linecol": [
        3037,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(IBM23) * INDREV1A8 * LIG1 * LIG2",
          "linecol": [
            3038,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_CORRECT",
          "linecol": [
            3038,
            1
          ]
        },
        "linecol": [
          3038,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 113531,
      "linecol": [
        3036,
        7
      ]
    },
    "linecol": [
      3036,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3040,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3040,
            22
          ]
        }
      ],
      "linecol": [
        3040,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_8ZT) * LIG1 * LIG2",
          "linecol": [
            3041,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_R8ZT",
          "linecol": [
            3041,
            1
          ]
        },
        "linecol": [
          3041,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 113532,
      "linecol": [
        3039,
        7
      ]
    },
    "linecol": [
      3039,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3043,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3043,
            23
          ]
        }
      ],
      "linecol": [
        3043,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(RMOND)+positif(VARRMOND)*present(DEFZU)) * (1 - positif(DEFRIMOND)) * LIG1 * LIG2",
          "linecol": [
            3045,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTXMOYPOS",
          "linecol": [
            3045,
            1
          ]
        },
        "linecol": [
          3045,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DMOND) * (1 - positif(DEFRIMOND)) * LIG1 * LIG2",
          "linecol": [
            3047,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTXMOYNEG",
          "linecol": [
            3047,
            1
          ]
        },
        "linecol": [
          3047,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RMOND + DEFZU - DMOND) * positif(IPTXMO) * positif(DEFRIMOND) * LIG1 * LIG2",
          "linecol": [
            3049,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTXPOSYT",
          "linecol": [
            3049,
            1
          ]
        },
        "linecol": [
          3049,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1-positif(LIGTXPOSYT)) * positif_ou_nul(DMOND - RMOND - DEFZU) * positif(IPTXMO) * positif(DEFRIMOND) * LIG1 * LIG2",
          "linecol": [
            3051,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTXNEGYT",
          "linecol": [
            3051,
            1
          ]
        },
        "linecol": [
          3051,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 113533,
      "linecol": [
        3042,
        7
      ]
    },
    "linecol": [
      3042,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3054,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3054,
            23
          ]
        }
      ],
      "linecol": [
        3054,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(INDREV1A8) * LIG1 * LIG2",
          "linecol": [
            3056,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGAMEETREV",
          "linecol": [
            3056,
            1
          ]
        },
        "linecol": [
          3056,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114000,
      "linecol": [
        3053,
        7
      ]
    },
    "linecol": [
      3053,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3058,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3058,
            21
          ]
        }
      ],
      "linecol": [
        3058,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif((MIBNPRV+MIBNPRC+MIBNPRP+MIB_NETNPCT) * (-1)) * LIG2",
          "linecol": [
            3060,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMIBNPNEG",
          "linecol": [
            3060,
            1
          ]
        },
        "linecol": [
          3060,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MIBNPRV+MIBNPRC+MIBNPRP+MIB_NETNPCT) * (1 - positif(LIG_BICNPF)) * LIG2",
          "linecol": [
            3062,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMIBNPPOS",
          "linecol": [
            3062,
            1
          ]
        },
        "linecol": [
          3062,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(somme(i=V,C,P:MIBVENi) + somme(i=V,C,P:MIBPRESi) + abs(MIB_NETCT) + 0) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3064,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_MIBP",
          "linecol": [
            3064,
            1
          ]
        },
        "linecol": [
          3064,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114300,
      "linecol": [
        3057,
        7
      ]
    },
    "linecol": [
      3057,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3066,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3066,
            21
          ]
        }
      ],
      "linecol": [
        3066,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(SPENETNPF * (-1)) * (1 - positif( present( BNCAABV )+ present( BNCAADV )+ present( BNCAABC )+ present( BNCAADC )+ present( BNCAABP )+ present( BNCAADP )+ present( DNOCEP )+ present( ANOVEP )+ present( DNOCEPC )+ present( ANOPEP )+ present( DNOCEPP )+ present( ANOCEP )+ present( DABNCNP6 )+ present( DABNCNP5 )+ present( DABNCNP4 )+ present( DABNCNP3 )+ present( DABNCNP2 )+ present( DABNCNP1 ) )) * LIG2",
          "linecol": [
            3068,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSPENPNEG",
          "linecol": [
            3068,
            1
          ]
        },
        "linecol": [
          3068,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(positif(SPENETNPF)+positif(BNCNPV+BNCNPC+BNCNPP)*null(SPENETNPF)) * positif_ou_nul(ANOCEP - (DNOCEP + DABNCNP6 +DABNCNP5 +DABNCNP4 +DABNCNP3 +DABNCNP2 +DABNCNP1)+0) * (1 - positif( present( BNCAABV )+ present( BNCAADV )+ present( BNCAABC )+ present( BNCAADC )+ present( BNCAABP )+ present( BNCAADP )+ present( DNOCEP )+ present( ANOVEP )+ present( DNOCEPC )+ present( ANOPEP )+ present( DNOCEPP )+ present( ANOCEP )+ present( DABNCNP6 )+ present( DABNCNP5 )+ present( DABNCNP4 )+ present( DABNCNP3 )+ present( DABNCNP2 )+ present( DABNCNP1 ) )) * LIG2",
          "linecol": [
            3089,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSPENPPOS",
          "linecol": [
            3089,
            1
          ]
        },
        "linecol": [
          3089,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114400,
      "linecol": [
        3065,
        7
      ]
    },
    "linecol": [
      3065,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3112,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3112,
            23
          ]
        }
      ],
      "linecol": [
        3112,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(TXMOYIMP) * (1 - positif(V_CNR)) * (1 - positif(null(2 - V_REGCO) + null(4 - V_REGCO) + positif(present(NRINET) + present(NRBASE) + present(IMPRET) + present(BASRET)))) * IND_REV * LIG2 * positif(20 - V_NOTRAIT)",
          "linecol": [
            3114,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTXMOYPS",
          "linecol": [
            3114,
            1
          ]
        },
        "linecol": [
          3114,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114909,
      "linecol": [
        3111,
        7
      ]
    },
    "linecol": [
      3111,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3120,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3120,
            22
          ]
        }
      ],
      "linecol": [
        3120,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(RINVLOCINV + REPINVTOU + INVLOCXN + COD7UY) * LIG1",
          "linecol": [
            3123,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPTOUR",
          "linecol": [
            3123,
            1
          ]
        },
        "linecol": [
          3123,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(INVLOCHOTR + INVLOGHOT) * LIG1",
          "linecol": [
            3125,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCHOTR",
          "linecol": [
            3125,
            1
          ]
        },
        "linecol": [
          3125,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLOGDOM) * LIG1 * LIG2",
          "linecol": [
            3128,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOGDOM",
          "linecol": [
            3128,
            1
          ]
        },
        "linecol": [
          3128,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLOGSOC) * LIG1 * LIG2",
          "linecol": [
            3130,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOGSOC",
          "linecol": [
            3130,
            1
          ]
        },
        "linecol": [
          3130,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DDOMSOC1) * LIG1 * LIG2",
          "linecol": [
            3132,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDOMSOC1",
          "linecol": [
            3132,
            1
          ]
        },
        "linecol": [
          3132,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLOCENT) * LIG1 * LIG2",
          "linecol": [
            3134,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCENT",
          "linecol": [
            3134,
            1
          ]
        },
        "linecol": [
          3134,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCOLENT) * LIG1 * LIG2",
          "linecol": [
            3136,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCOLENT",
          "linecol": [
            3136,
            1
          ]
        },
        "linecol": [
          3136,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RINVLOCREA + INVLOGREHA + INVLOCXV + COD7UZ) * LIG1 * LIG2",
          "linecol": [
            3138,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPHA",
          "linecol": [
            3138,
            1
          ]
        },
        "linecol": [
          3138,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114600,
      "linecol": [
        3119,
        7
      ]
    },
    "linecol": [
      3119,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3141,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3141,
            22
          ]
        }
      ],
      "linecol": [
        3141,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(DDIFAGRI) * LIG1 * LIG2",
          "linecol": [
            3143,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREDAGRI",
          "linecol": [
            3143,
            1
          ]
        },
        "linecol": [
          3143,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFORET) * LIG1 * LIG2",
          "linecol": [
            3144,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGFORET",
          "linecol": [
            3144,
            1
          ]
        },
        "linecol": [
          3144,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCOTFOR) * LIG1 * LIG2",
          "linecol": [
            3145,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCOTFOR",
          "linecol": [
            3145,
            1
          ]
        },
        "linecol": [
          3145,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPCIF) * LIG1 * LIG2",
          "linecol": [
            3147,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREP7UP",
          "linecol": [
            3147,
            1
          ]
        },
        "linecol": [
          3147,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPCIFAD) * LIG1 * LIG2",
          "linecol": [
            3148,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREP7UA",
          "linecol": [
            3148,
            1
          ]
        },
        "linecol": [
          3148,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPCIFSIN) * LIG1 * LIG2",
          "linecol": [
            3149,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREP7UT",
          "linecol": [
            3149,
            1
          ]
        },
        "linecol": [
          3149,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPCIFADSIN) * LIG1 * LIG2",
          "linecol": [
            3150,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREP7UB",
          "linecol": [
            3150,
            1
          ]
        },
        "linecol": [
          3150,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSIN + REPFORSIN + REPFORSIN2 + REPFORSIN3 + REPNIS) * LIG1 * LIG2",
          "linecol": [
            3152,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNFOREST",
          "linecol": [
            3152,
            1
          ]
        },
        "linecol": [
          3152,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPSIN) * LIG1 * LIG2",
          "linecol": [
            3153,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPSIN",
          "linecol": [
            3153,
            1
          ]
        },
        "linecol": [
          3153,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPFORSIN) * LIG1 * LIG2",
          "linecol": [
            3154,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSINFOR",
          "linecol": [
            3154,
            1
          ]
        },
        "linecol": [
          3154,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPFORSIN2) * LIG1 * LIG2",
          "linecol": [
            3155,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSINFOR2",
          "linecol": [
            3155,
            1
          ]
        },
        "linecol": [
          3155,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPFORSIN3) * LIG1 * LIG2",
          "linecol": [
            3156,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSINFOR3",
          "linecol": [
            3156,
            1
          ]
        },
        "linecol": [
          3156,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNIS) * LIG1 * LIG2",
          "linecol": [
            3157,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPNIS",
          "linecol": [
            3157,
            1
          ]
        },
        "linecol": [
          3157,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFIPC) * LIG1 * LIG2",
          "linecol": [
            3159,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGFIPC",
          "linecol": [
            3159,
            1
          ]
        },
        "linecol": [
          3159,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFIPDOM) * LIG1 * LIG2",
          "linecol": [
            3160,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGFIPDOM",
          "linecol": [
            3160,
            1
          ]
        },
        "linecol": [
          3160,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCINE) * LIG1 * LIG2",
          "linecol": [
            3161,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCINE",
          "linecol": [
            3161,
            1
          ]
        },
        "linecol": [
          3161,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DRIRENOV) * LIG1 * LIG2",
          "linecol": [
            3162,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRIRENOV",
          "linecol": [
            3162,
            1
          ]
        },
        "linecol": [
          3162,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(NUPROPT) * LIG1 * LIG2",
          "linecol": [
            3163,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAR",
          "linecol": [
            3163,
            1
          ]
        },
        "linecol": [
          3163,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPNUREPART) * LIG1 * (1 - null(4-V_REGCO)) * LIG2 * (1 - V_CNR)",
          "linecol": [
            3164,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPREPAR",
          "linecol": [
            3164,
            1
          ]
        },
        "linecol": [
          3164,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAR) * LIG1 * (1 - null(4-V_REGCO)) * LIG2 * (1 - V_CNR)",
          "linecol": [
            3165,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPARN",
          "linecol": [
            3165,
            1
          ]
        },
        "linecol": [
          3165,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAR1) * LIG1 * (1 - null(4-V_REGCO)) * LIG2 * (1 - V_CNR)",
          "linecol": [
            3166,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAR1",
          "linecol": [
            3166,
            1
          ]
        },
        "linecol": [
          3166,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAR2) * LIG1 * (1 - null(4-V_REGCO)) * LIG2 * (1 - V_CNR)",
          "linecol": [
            3167,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAR2",
          "linecol": [
            3167,
            1
          ]
        },
        "linecol": [
          3167,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAR3) * LIG1 * (1 - null(4-V_REGCO)) * LIG2 * (1 - V_CNR)",
          "linecol": [
            3168,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAR3",
          "linecol": [
            3168,
            1
          ]
        },
        "linecol": [
          3168,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAR4) * LIG1 * (1 - null(4-V_REGCO)) * LIG2 * (1 - V_CNR)",
          "linecol": [
            3169,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAR4",
          "linecol": [
            3169,
            1
          ]
        },
        "linecol": [
          3169,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPAR5) * LIG1 * (1 - null(4-V_REGCO)) * LIG2 * (1 - V_CNR)",
          "linecol": [
            3170,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPAR5",
          "linecol": [
            3170,
            1
          ]
        },
        "linecol": [
          3170,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(present(RIMOPPAUANT) + present(RIMOSAUVANT) + present(RESTIMOPPAU) + present(RESTIMOSAUV) + present(RIMOPPAURE) + present(RIMOSAUVRF) + present(COD7SY) + present(COD7SX)) * LIG1 * LIG2",
          "linecol": [
            3172,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRESTIMO",
          "linecol": [
            3172,
            1
          ]
        },
        "linecol": [
          3172,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PPERSATOT) * positif(PPETOTX) * LIG1 * LIG2",
          "linecol": [
            3175,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRSA",
          "linecol": [
            3175,
            1
          ]
        },
        "linecol": [
          3175,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD7OU + 0) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3177,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCODOU",
          "linecol": [
            3177,
            1
          ]
        },
        "linecol": [
          3177,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LOCMEUBJT + 0) * positif(RCODJT1 + RCODJT2 + RCODJT3 + RCODJT4 + RCODJT5 + RCODJT6 + RCODJT7 + RCODJT8) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3179,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCODJT",
          "linecol": [
            3179,
            1
          ]
        },
        "linecol": [
          3179,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LOCMEUBJU + 0) * positif(RCODJU1 + RCODJU2 + RCODJU3 + RCODJU4 + RCODJU5 + RCODJU6 + RCODJU7 + RCODJU8) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3182,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCODJU",
          "linecol": [
            3182,
            1
          ]
        },
        "linecol": [
          3182,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LOCMEUBID + LOCMEUBIF + LOCMEUBIG) * positif(RLOCIDFG1 + RLOCIDFG2 + RLOCIDFG3 + RLOCIDFG4 + RLOCIDFG5 + RLOCIDFG6 + RLOCIDFG7 + RLOCIDFG8) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3185,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRLOCIDFG",
          "linecol": [
            3185,
            1
          ]
        },
        "linecol": [
          3185,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LOCMEUBIE) * positif(REPLOCIE1 + REPLOCIE2 + REPLOCIE3 + REPLOCIE4 + REPLOCIE5 + REPLOCIE6 + REPLOCIE7 + REPLOCIE8) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3188,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOCIE",
          "linecol": [
            3188,
            1
          ]
        },
        "linecol": [
          3188,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LOCRESINEUV + INVNPROF1 + INVNPROF2) * positif(RESINEUV1 + RESINEUV2 + RESINEUV3 + RESINEUV4 + RESINEUV5 + RESINEUV6 + RESINEUV7 + RESINEUV8) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3191,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNEUV",
          "linecol": [
            3191,
            1
          ]
        },
        "linecol": [
          3191,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MEUBLENP) * positif(RRESINEUV1 + RRESINEUV2 + RRESINEUV3 + RRESINEUV4 + RRESINEUV5 + RRESINEUV6 + RRESINEUV7 + RRESINEUV8) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3194,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRNEUV",
          "linecol": [
            3194,
            1
          ]
        },
        "linecol": [
          3194,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RESIVIEU) * positif(RESIVIEU1 + RESIVIEU2 + RESIVIEU3 + RESIVIEU4 + RESIVIEU5 + RESIVIEU6 + RESIVIEU7 + RESIVIEU8) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3197,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGVIEU",
          "linecol": [
            3197,
            1
          ]
        },
        "linecol": [
          3197,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RESIVIANT) * positif(RESIVIAN1 + RESIVIAN2 + RESIVIAN3 + RESIVIAN4 + RESIVIAN5 + RESIVIAN6 + RESIVIAN7 + RESIVIAN8) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3200,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGVIAN",
          "linecol": [
            3200,
            1
          ]
        },
        "linecol": [
          3200,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(VIEUMEUB) * positif(RESIMEUB1 + RESIMEUB2 + RESIMEUB3 + RESIMEUB4 + RESIMEUB5 + RESIMEUB6 + RESIMEUB7 + RESIMEUB8) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3203,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMEUB",
          "linecol": [
            3203,
            1
          ]
        },
        "linecol": [
          3203,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUOU) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3206,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPOU",
          "linecol": [
            3206,
            1
          ]
        },
        "linecol": [
          3206,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLNPV + REPMEUPE) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3208,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPCODJT",
          "linecol": [
            3208,
            1
          ]
        },
        "linecol": [
          3208,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUPE) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3209,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREP7PE",
          "linecol": [
            3209,
            1
          ]
        },
        "linecol": [
          3209,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLNPV) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3210,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLNPV",
          "linecol": [
            3210,
            1
          ]
        },
        "linecol": [
          3210,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLNPW + REPMEUPD + REPLOCNT) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3212,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOCNT",
          "linecol": [
            3212,
            1
          ]
        },
        "linecol": [
          3212,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLOCNT) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3213,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOCJS",
          "linecol": [
            3213,
            1
          ]
        },
        "linecol": [
          3213,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUPD) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3214,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREP7PD",
          "linecol": [
            3214,
            1
          ]
        },
        "linecol": [
          3214,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLNPW) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3215,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOCJU",
          "linecol": [
            3215,
            1
          ]
        },
        "linecol": [
          3215,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUIZ + REPRESINEUV + REPMEUPC + REPLNPX) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3217,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRESIREP",
          "linecol": [
            3217,
            1
          ]
        },
        "linecol": [
          3217,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUIZ) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3218,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOCIZ",
          "linecol": [
            3218,
            1
          ]
        },
        "linecol": [
          3218,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRESINEUV) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3219,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOCIJ",
          "linecol": [
            3219,
            1
          ]
        },
        "linecol": [
          3219,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUPC) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3220,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREP7PC",
          "linecol": [
            3220,
            1
          ]
        },
        "linecol": [
          3220,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLNPX) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3221,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLNPX",
          "linecol": [
            3221,
            1
          ]
        },
        "linecol": [
          3221,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPINVRED + REPMEUIH + REPLOCN1 + REPMEUPB + REPLNPY) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3223,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPMEU",
          "linecol": [
            3223,
            1
          ]
        },
        "linecol": [
          3223,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPINVRED) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3224,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPINV",
          "linecol": [
            3224,
            1
          ]
        },
        "linecol": [
          3224,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUIH) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3225,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOCIH",
          "linecol": [
            3225,
            1
          ]
        },
        "linecol": [
          3225,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLOCN1) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3226,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOC1",
          "linecol": [
            3226,
            1
          ]
        },
        "linecol": [
          3226,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUPB) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3227,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREP7PB",
          "linecol": [
            3227,
            1
          ]
        },
        "linecol": [
          3227,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLNPY) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3228,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLNPY",
          "linecol": [
            3228,
            1
          ]
        },
        "linecol": [
          3228,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MEUBLERED + REPREDREP + REPMEUIX + REPLOCN2 + REPMEUPA + REPLNPZ) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3230,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPNEUV",
          "linecol": [
            3230,
            1
          ]
        },
        "linecol": [
          3230,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MEUBLERED) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3231,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRED",
          "linecol": [
            3231,
            1
          ]
        },
        "linecol": [
          3231,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPREDREP) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3232,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRESI",
          "linecol": [
            3232,
            1
          ]
        },
        "linecol": [
          3232,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUIX) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3233,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOCIX",
          "linecol": [
            3233,
            1
          ]
        },
        "linecol": [
          3233,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLOCN2) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3234,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLOC2",
          "linecol": [
            3234,
            1
          ]
        },
        "linecol": [
          3234,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPMEUPA) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3235,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREP7PA",
          "linecol": [
            3235,
            1
          ]
        },
        "linecol": [
          3235,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPLNPZ) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3236,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPLNPZ",
          "linecol": [
            3236,
            1
          ]
        },
        "linecol": [
          3236,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114700,
      "linecol": [
        3140,
        7
      ]
    },
    "linecol": [
      3140,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3239,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3239,
            22
          ]
        }
      ],
      "linecol": [
        3239,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(DREDMEUB) * LIG1 * LIG2",
          "linecol": [
            3241,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREDMEUB",
          "linecol": [
            3241,
            1
          ]
        },
        "linecol": [
          3241,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DREDREP) * LIG1 * LIG2",
          "linecol": [
            3242,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREDREP",
          "linecol": [
            3242,
            1
          ]
        },
        "linecol": [
          3242,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMIX) * LIG1 * LIG2",
          "linecol": [
            3243,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMIX",
          "linecol": [
            3243,
            1
          ]
        },
        "linecol": [
          3243,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMIY) * LIG1 * LIG2",
          "linecol": [
            3244,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMIY",
          "linecol": [
            3244,
            1
          ]
        },
        "linecol": [
          3244,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMPA) * LIG1 * LIG2",
          "linecol": [
            3246,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMPA",
          "linecol": [
            3246,
            1
          ]
        },
        "linecol": [
          3246,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMPB) * LIG1 * LIG2",
          "linecol": [
            3247,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMPB",
          "linecol": [
            3247,
            1
          ]
        },
        "linecol": [
          3247,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMPC) * LIG1 * LIG2",
          "linecol": [
            3248,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMPC",
          "linecol": [
            3248,
            1
          ]
        },
        "linecol": [
          3248,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMPD) * LIG1 * LIG2",
          "linecol": [
            3249,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMPD",
          "linecol": [
            3249,
            1
          ]
        },
        "linecol": [
          3249,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMPE) * LIG1 * LIG2",
          "linecol": [
            3250,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMPE",
          "linecol": [
            3250,
            1
          ]
        },
        "linecol": [
          3250,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DINVRED) * LIG1 * LIG2",
          "linecol": [
            3252,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGINVRED",
          "linecol": [
            3252,
            1
          ]
        },
        "linecol": [
          3252,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMIH) * LIG1 * LIG2",
          "linecol": [
            3253,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMIH",
          "linecol": [
            3253,
            1
          ]
        },
        "linecol": [
          3253,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMJC) * LIG1 * LIG2",
          "linecol": [
            3254,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMJC",
          "linecol": [
            3254,
            1
          ]
        },
        "linecol": [
          3254,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMIZ) * LIG1 * LIG2",
          "linecol": [
            3255,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMIZ",
          "linecol": [
            3255,
            1
          ]
        },
        "linecol": [
          3255,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMJI) * LIG1 * LIG2",
          "linecol": [
            3256,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMJI",
          "linecol": [
            3256,
            1
          ]
        },
        "linecol": [
          3256,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMJS) * LIG1 * LIG2",
          "linecol": [
            3257,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMJS",
          "linecol": [
            3257,
            1
          ]
        },
        "linecol": [
          3257,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DMEUBLE) * LIG1 * LIG2",
          "linecol": [
            3258,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMEUBLE",
          "linecol": [
            3258,
            1
          ]
        },
        "linecol": [
          3258,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DPROREP) * LIG1 * LIG2",
          "linecol": [
            3259,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPROREP",
          "linecol": [
            3259,
            1
          ]
        },
        "linecol": [
          3259,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DREPNPRO) * LIG1 * LIG2",
          "linecol": [
            3260,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPNPRO",
          "linecol": [
            3260,
            1
          ]
        },
        "linecol": [
          3260,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DREPMEU) * LIG1 * LIG2",
          "linecol": [
            3261,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMEUREP",
          "linecol": [
            3261,
            1
          ]
        },
        "linecol": [
          3261,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMIC) * LIG1 * LIG2",
          "linecol": [
            3262,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMIC",
          "linecol": [
            3262,
            1
          ]
        },
        "linecol": [
          3262,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMIB) * LIG1 * LIG2",
          "linecol": [
            3263,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMIB",
          "linecol": [
            3263,
            1
          ]
        },
        "linecol": [
          3263,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMIA) * LIG1 * LIG2",
          "linecol": [
            3264,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMIA",
          "linecol": [
            3264,
            1
          ]
        },
        "linecol": [
          3264,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMJY) * LIG1 * LIG2",
          "linecol": [
            3265,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMJY",
          "linecol": [
            3265,
            1
          ]
        },
        "linecol": [
          3265,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMJX) * LIG1 * LIG2",
          "linecol": [
            3266,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMJX",
          "linecol": [
            3266,
            1
          ]
        },
        "linecol": [
          3266,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMJW) * LIG1 * LIG2",
          "linecol": [
            3267,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMJW",
          "linecol": [
            3267,
            1
          ]
        },
        "linecol": [
          3267,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMJV) * LIG1 * LIG2",
          "linecol": [
            3268,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMJV",
          "linecol": [
            3268,
            1
          ]
        },
        "linecol": [
          3268,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMOE) * LIG1 * LIG2",
          "linecol": [
            3270,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMOE",
          "linecol": [
            3270,
            1
          ]
        },
        "linecol": [
          3270,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMOD) * LIG1 * LIG2",
          "linecol": [
            3271,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMOD",
          "linecol": [
            3271,
            1
          ]
        },
        "linecol": [
          3271,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMOC) * LIG1 * LIG2",
          "linecol": [
            3272,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMOC",
          "linecol": [
            3272,
            1
          ]
        },
        "linecol": [
          3272,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMOB) * LIG1 * LIG2",
          "linecol": [
            3273,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMOB",
          "linecol": [
            3273,
            1
          ]
        },
        "linecol": [
          3273,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DILMOA) * LIG1 * LIG2",
          "linecol": [
            3274,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGILMOA",
          "linecol": [
            3274,
            1
          ]
        },
        "linecol": [
          3274,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DRESIMEUB) * LIG1 * LIG2",
          "linecol": [
            3276,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRESIMEUB",
          "linecol": [
            3276,
            1
          ]
        },
        "linecol": [
          3276,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DRESIVIEU) * LIG1 * LIG2",
          "linecol": [
            3277,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRESIVIEU",
          "linecol": [
            3277,
            1
          ]
        },
        "linecol": [
          3277,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DRESINEUV) * LIG1 * LIG2",
          "linecol": [
            3278,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRESINEUV",
          "linecol": [
            3278,
            1
          ]
        },
        "linecol": [
          3278,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLOCIDEFG) * LIG1 * LIG2",
          "linecol": [
            3279,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGLOCIDEFG",
          "linecol": [
            3279,
            1
          ]
        },
        "linecol": [
          3279,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCODJTJU) * LIG1 * LIG2",
          "linecol": [
            3280,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCODJTJU",
          "linecol": [
            3280,
            1
          ]
        },
        "linecol": [
          3280,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCODOU) * LIG1 * LIG2",
          "linecol": [
            3281,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCODOU",
          "linecol": [
            3281,
            1
          ]
        },
        "linecol": [
          3281,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114750,
      "linecol": [
        3238,
        7
      ]
    },
    "linecol": [
      3238,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3284,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3284,
            22
          ]
        }
      ],
      "linecol": [
        3284,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(CESSASSV) + present(CESSASSC)) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            3285,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTAXASSUR",
          "linecol": [
            3285,
            1
          ]
        },
        "linecol": [
          3285,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(CESSASSV) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            3286,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTAXASSURV",
          "linecol": [
            3286,
            1
          ]
        },
        "linecol": [
          3286,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(CESSASSC) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            3287,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTAXASSURC",
          "linecol": [
            3287,
            1
          ]
        },
        "linecol": [
          3287,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(PCAPTAXV) + present(PCAPTAXC)) * (1 - positif(ANNUL2042 + 0)) * LIG1",
          "linecol": [
            3289,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIPCAP",
          "linecol": [
            3289,
            1
          ]
        },
        "linecol": [
          3289,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(PCAPTAXV) * (1 - positif(ANNUL2042 + 0)) * LIG1",
          "linecol": [
            3290,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIPCAPV",
          "linecol": [
            3290,
            1
          ]
        },
        "linecol": [
          3290,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(PCAPTAXC) * (1 - positif(ANNUL2042 + 0)) * LIG1",
          "linecol": [
            3291,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIPCAPC",
          "linecol": [
            3291,
            1
          ]
        },
        "linecol": [
          3291,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(LOYELEV) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            3293,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGITAXLOY",
          "linecol": [
            3293,
            1
          ]
        },
        "linecol": [
          3293,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CHRAVANT) * (1 - positif(TEFFHRC + COD8YJ)) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            3295,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIHAUT",
          "linecol": [
            3295,
            1
          ]
        },
        "linecol": [
          3295,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CHRTEFF) * positif(TEFFHRC + COD8YJ) * (1 - positif(ANNUL2042)) * LIG1",
          "linecol": [
            3297,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGHRTEFF",
          "linecol": [
            3297,
            1
          ]
        },
        "linecol": [
          3297,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 114850,
      "linecol": [
        3283,
        7
      ]
    },
    "linecol": [
      3283,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3300,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3300,
            23
          ]
        }
      ],
      "linecol": [
        3300,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(BPRESCOMP01) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3301,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCOMP01",
          "linecol": [
            3301,
            1
          ]
        },
        "linecol": [
          3301,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 115100,
      "linecol": [
        3299,
        7
      ]
    },
    "linecol": [
      3299,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3303,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3303,
            22
          ]
        }
      ],
      "linecol": [
        3303,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFBA1 + DEFBA2 + DEFBA3 + DEFBA4 + DEFBA5 + DEFBA6) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3304,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBA",
          "linecol": [
            3304,
            1
          ]
        },
        "linecol": [
          3304,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFBA1) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3306,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBA1",
          "linecol": [
            3306,
            1
          ]
        },
        "linecol": [
          3306,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFBA2) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3307,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBA2",
          "linecol": [
            3307,
            1
          ]
        },
        "linecol": [
          3307,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFBA3) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3308,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBA3",
          "linecol": [
            3308,
            1
          ]
        },
        "linecol": [
          3308,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFBA4) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3309,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBA4",
          "linecol": [
            3309,
            1
          ]
        },
        "linecol": [
          3309,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFBA5) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3310,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBA5",
          "linecol": [
            3310,
            1
          ]
        },
        "linecol": [
          3310,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFBA6) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3311,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFBA6",
          "linecol": [
            3311,
            1
          ]
        },
        "linecol": [
          3311,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFRCMN+DFRCM1+DFRCM2+DFRCM3+DFRCM4+DFRCM5) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3312,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDFRCM",
          "linecol": [
            3312,
            1
          ]
        },
        "linecol": [
          3312,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFRCMN) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3314,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDFRCMN",
          "linecol": [
            3314,
            1
          ]
        },
        "linecol": [
          3314,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFRCM1) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3315,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDFRCM1",
          "linecol": [
            3315,
            1
          ]
        },
        "linecol": [
          3315,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFRCM2) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3316,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDFRCM2",
          "linecol": [
            3316,
            1
          ]
        },
        "linecol": [
          3316,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFRCM3) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3317,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDFRCM3",
          "linecol": [
            3317,
            1
          ]
        },
        "linecol": [
          3317,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFRCM4) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3318,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDFRCM4",
          "linecol": [
            3318,
            1
          ]
        },
        "linecol": [
          3318,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFRCM5) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3319,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDFRCM5",
          "linecol": [
            3319,
            1
          ]
        },
        "linecol": [
          3319,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DPVRCM) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3320,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDRCVM",
          "linecol": [
            3320,
            1
          ]
        },
        "linecol": [
          3320,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DRFRP) * LIG1 * (1-null(4-V_REGCO)) * LIG2",
          "linecol": [
            3321,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDRFRP",
          "linecol": [
            3321,
            1
          ]
        },
        "linecol": [
          3321,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLMRN6 + DLMRN5 + DLMRN4 + DLMRN3 + DLMRN2 + DLMRN1) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3322,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDLMRN",
          "linecol": [
            3322,
            1
          ]
        },
        "linecol": [
          3322,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLMRN6) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3324,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDLMRN6",
          "linecol": [
            3324,
            1
          ]
        },
        "linecol": [
          3324,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLMRN5) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3325,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDLMRN5",
          "linecol": [
            3325,
            1
          ]
        },
        "linecol": [
          3325,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLMRN4) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3326,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDLMRN4",
          "linecol": [
            3326,
            1
          ]
        },
        "linecol": [
          3326,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLMRN3) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3327,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDLMRN3",
          "linecol": [
            3327,
            1
          ]
        },
        "linecol": [
          3327,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLMRN2) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3328,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDLMRN2",
          "linecol": [
            3328,
            1
          ]
        },
        "linecol": [
          3328,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DLMRN1) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3329,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDLMRN1",
          "linecol": [
            3329,
            1
          ]
        },
        "linecol": [
          3329,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCDF1 + BNCDF2 + BNCDF3 + BNCDF4 + BNCDF5 + BNCDF6) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3330,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCDF",
          "linecol": [
            3330,
            1
          ]
        },
        "linecol": [
          3330,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCDF6) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3332,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCDF6",
          "linecol": [
            3332,
            1
          ]
        },
        "linecol": [
          3332,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCDF5) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3333,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCDF5",
          "linecol": [
            3333,
            1
          ]
        },
        "linecol": [
          3333,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCDF4) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3334,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCDF4",
          "linecol": [
            3334,
            1
          ]
        },
        "linecol": [
          3334,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCDF3) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3335,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCDF3",
          "linecol": [
            3335,
            1
          ]
        },
        "linecol": [
          3335,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCDF2) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3336,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCDF2",
          "linecol": [
            3336,
            1
          ]
        },
        "linecol": [
          3336,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(BNCDF1) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3337,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGBNCDF1",
          "linecol": [
            3337,
            1
          ]
        },
        "linecol": [
          3337,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(IRECR) * LIG1 * LIG2",
          "linecol": [
            3338,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIRECR",
          "linecol": [
            3338,
            1
          ]
        },
        "linecol": [
          3338,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MIBDREPNPV) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3340,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMBDREPNPV",
          "linecol": [
            3340,
            1
          ]
        },
        "linecol": [
          3340,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MIBDREPNPC) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3341,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMBDREPNPC",
          "linecol": [
            3341,
            1
          ]
        },
        "linecol": [
          3341,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MIBDREPNPP) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3342,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMBDREPNPP",
          "linecol": [
            3342,
            1
          ]
        },
        "linecol": [
          3342,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MIBDREPV) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3344,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMIBDREPV",
          "linecol": [
            3344,
            1
          ]
        },
        "linecol": [
          3344,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MIBDREPC) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3345,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMIBDREPC",
          "linecol": [
            3345,
            1
          ]
        },
        "linecol": [
          3345,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(MIBDREPP) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3346,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMIBDREPP",
          "linecol": [
            3346,
            1
          ]
        },
        "linecol": [
          3346,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(SPEDREPNPV) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3348,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSPDREPNPV",
          "linecol": [
            3348,
            1
          ]
        },
        "linecol": [
          3348,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(SPEDREPNPC) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3349,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSPDREPNPC",
          "linecol": [
            3349,
            1
          ]
        },
        "linecol": [
          3349,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(SPEDREPNPP) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3350,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSPDREPNPP",
          "linecol": [
            3350,
            1
          ]
        },
        "linecol": [
          3350,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(SPEDREPV) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3352,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSPEDREPV",
          "linecol": [
            3352,
            1
          ]
        },
        "linecol": [
          3352,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(SPEDREPC) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3353,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSPEDREPC",
          "linecol": [
            3353,
            1
          ]
        },
        "linecol": [
          3353,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(SPEDREPP) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3354,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSPEDREPP",
          "linecol": [
            3354,
            1
          ]
        },
        "linecol": [
          3354,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 115200,
      "linecol": [
        3302,
        7
      ]
    },
    "linecol": [
      3302,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3357,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3357,
            23
          ]
        }
      ],
      "linecol": [
        3357,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "( positif(LIGPRELIB + LIG_SURSIS + LIGREPPLU + LIGELURAS + LIGELURASC + LIGABDET + LIGABDETP + LIGABDETM + LIGROBOR + LIGPVIMMO + LIGPVTISOC + LIGMOBNR + LIGDEPCHO + LIGDEPMOB + LIGCOD3SG + LIGCOD3SH + LIGCOD3SL + LIGCOD3SM) + positif(LIG3525 + LIGRCMSOC + LIGRCMIMPAT + LIGABIMPPV + LIGABIMPMV + LIGPV3SB) * (1 - null(2-V_REGCO)) * (1 - null(4-V_REGCO)) ) * LIG1 * LIG2",
          "linecol": [
            3359,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_MEMO",
          "linecol": [
            3359,
            1
          ]
        },
        "linecol": [
          3359,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113760,
      "linecol": [
        3356,
        7
      ]
    },
    "linecol": [
      3356,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3366,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3366,
            23
          ]
        }
      ],
      "linecol": [
        3366,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(present(PPLIB) + present(RCMLIB)) * LIG0 * LIG2",
          "linecol": [
            3368,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPRELIB",
          "linecol": [
            3368,
            1
          ]
        },
        "linecol": [
          3368,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - V_CNR) * positif(RTNC) * LIG1 * LIG2",
          "linecol": [
            3370,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG3525",
          "linecol": [
            3370,
            1
          ]
        },
        "linecol": [
          3370,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ELURASV) * LIG1 * LIG2",
          "linecol": [
            3372,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGELURAS",
          "linecol": [
            3372,
            1
          ]
        },
        "linecol": [
          3372,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ELURASC) * LIG1 * LIG2",
          "linecol": [
            3373,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGELURASC",
          "linecol": [
            3373,
            1
          ]
        },
        "linecol": [
          3373,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPPLU) * LIG1 * LIG2",
          "linecol": [
            3375,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPPLU",
          "linecol": [
            3375,
            1
          ]
        },
        "linecol": [
          3375,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(SURIMP) * LIG1 * LIG2",
          "linecol": [
            3376,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGSURIMP",
          "linecol": [
            3376,
            1
          ]
        },
        "linecol": [
          3376,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVIMPOS) * LIG1 * LIG2",
          "linecol": [
            3377,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPVIMPOS",
          "linecol": [
            3377,
            1
          ]
        },
        "linecol": [
          3377,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(GAINABDET) * LIG1 * LIG2",
          "linecol": [
            3379,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGABDET",
          "linecol": [
            3379,
            1
          ]
        },
        "linecol": [
          3379,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ABDETPLUS) * LIG1 * LIG2",
          "linecol": [
            3380,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGABDETP",
          "linecol": [
            3380,
            1
          ]
        },
        "linecol": [
          3380,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ABDETMOINS) * LIG1 * LIG2",
          "linecol": [
            3381,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGABDETM",
          "linecol": [
            3381,
            1
          ]
        },
        "linecol": [
          3381,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD3SG) * LIG1 * LIG2",
          "linecol": [
            3383,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCOD3SG",
          "linecol": [
            3383,
            1
          ]
        },
        "linecol": [
          3383,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD3SH) * LIG1 * LIG2",
          "linecol": [
            3384,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCOD3SH",
          "linecol": [
            3384,
            1
          ]
        },
        "linecol": [
          3384,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD3SL) * LIG1 * LIG2",
          "linecol": [
            3385,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCOD3SL",
          "linecol": [
            3385,
            1
          ]
        },
        "linecol": [
          3385,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(COD3SM) * LIG1 * LIG2",
          "linecol": [
            3386,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCOD3SM",
          "linecol": [
            3386,
            1
          ]
        },
        "linecol": [
          3386,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVBAR3SB) * LIG1 * LIG2 * (1 - null(4 - V_REGCO))",
          "linecol": [
            3387,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPV3SB",
          "linecol": [
            3387,
            1
          ]
        },
        "linecol": [
          3387,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RCMSOC) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3389,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCMSOC",
          "linecol": [
            3389,
            1
          ]
        },
        "linecol": [
          3389,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RCMIMPAT) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3390,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGRCMIMPAT",
          "linecol": [
            3390,
            1
          ]
        },
        "linecol": [
          3390,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ABIMPPV) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3391,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGABIMPPV",
          "linecol": [
            3391,
            1
          ]
        },
        "linecol": [
          3391,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ABIMPMV) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3392,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGABIMPMV",
          "linecol": [
            3392,
            1
          ]
        },
        "linecol": [
          3392,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(CVNSALC) * LIG1 * LIG2",
          "linecol": [
            3394,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCVNSAL",
          "linecol": [
            3394,
            1
          ]
        },
        "linecol": [
          3394,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(GSALV + GSALC) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3395,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGCDIS",
          "linecol": [
            3395,
            1
          ]
        },
        "linecol": [
          3395,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(RFROBOR) * LIG1 * LIG2",
          "linecol": [
            3396,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGROBOR",
          "linecol": [
            3396,
            1
          ]
        },
        "linecol": [
          3396,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVIMMO) * LIG1 * LIG2",
          "linecol": [
            3397,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPVIMMO",
          "linecol": [
            3397,
            1
          ]
        },
        "linecol": [
          3397,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVTITRESOC) * LIG1 * LIG2",
          "linecol": [
            3398,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPVTISOC",
          "linecol": [
            3398,
            1
          ]
        },
        "linecol": [
          3398,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PVMOBNR) * LIG1 * LIG2",
          "linecol": [
            3399,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGMOBNR",
          "linecol": [
            3399,
            1
          ]
        },
        "linecol": [
          3399,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(DEPCHOBAS + CIBOIBAIL + COD7SA + CINRJBAIL + COD7SB + CRENRJ + COD7SC + TRAMURWC + COD7WB + CINRJ + COD7RG + TRATOIVG + COD7VH + CIDEP15 + COD7RH + MATISOSI + COD7RI + TRAVITWT + COD7WU + MATISOSJ + COD7RJ + VOLISO + COD7RK + PORENT + COD7RL + CHAUBOISN + COD7RN + POMPESP + COD7RP + POMPESR + COD7RR + CHAUFSOL + COD7RS + POMPESQ + COD7RQ + ENERGIEST + COD7RT + DIAGPERF + COD7TV + RESCHAL + COD7TW + COD7RV + COD7RW + COD7RZ) * positif(V_NOTRAIT - 10)",
          "linecol": [
            3401,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEPCHO",
          "linecol": [
            3401,
            1
          ]
        },
        "linecol": [
          3401,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(DEPMOBIL + RDEQPAHA + RDTECH + COD7WD) * positif(V_NOTRAIT - 10)",
          "linecol": [
            3406,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEPMOB",
          "linecol": [
            3406,
            1
          ]
        },
        "linecol": [
          3406,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(DEPCHOBAS - VAR7WY_P) * null(5-V_IND_TRAIT) + DIFF7WY_A)",
          "linecol": [
            3408,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DIFF7WY",
          "linecol": [
            3408,
            1
          ]
        },
        "linecol": [
          3408,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(DEPMOBIL - VAR7WZ_P) * null(5-V_IND_TRAIT) + DIFF7WZ_A)",
          "linecol": [
            3409,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DIFF7WZ",
          "linecol": [
            3409,
            1
          ]
        },
        "linecol": [
          3409,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(abs(COD7WD - VAR7WD_P) * null(5-V_IND_TRAIT) + DIFF7WD_A)",
          "linecol": [
            3410,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DIFF7WD",
          "linecol": [
            3410,
            1
          ]
        },
        "linecol": [
          3410,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "DIFF7WY * positif(DEPCHO) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3412,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEPCHO",
          "linecol": [
            3412,
            1
          ]
        },
        "linecol": [
          3412,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DIFF7WZ + DIFF7WD) * positif(DEPMOB) * LIG1 * LIG2 * (1 - null(2 - V_REGCO)) * (1 - null(4 - V_REGCO))",
          "linecol": [
            3414,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEPMOB",
          "linecol": [
            3414,
            1
          ]
        },
        "linecol": [
          3414,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC1 + DEFLOC2 + DEFLOC3 + DEFLOC4 + DEFLOC5 + DEFLOC6 + DEFLOC7 + DEFLOC8 + DEFLOC9 + DEFLOC10) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3416,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDEFPLOC",
          "linecol": [
            3416,
            1
          ]
        },
        "linecol": [
          3416,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC1) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3418,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC1",
          "linecol": [
            3418,
            1
          ]
        },
        "linecol": [
          3418,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC2) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3419,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC2",
          "linecol": [
            3419,
            1
          ]
        },
        "linecol": [
          3419,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC3) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3420,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC3",
          "linecol": [
            3420,
            1
          ]
        },
        "linecol": [
          3420,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC4) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3421,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC4",
          "linecol": [
            3421,
            1
          ]
        },
        "linecol": [
          3421,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC5) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3422,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC5",
          "linecol": [
            3422,
            1
          ]
        },
        "linecol": [
          3422,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC6) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3423,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC6",
          "linecol": [
            3423,
            1
          ]
        },
        "linecol": [
          3423,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC7) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3424,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC7",
          "linecol": [
            3424,
            1
          ]
        },
        "linecol": [
          3424,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC8) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3425,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC8",
          "linecol": [
            3425,
            1
          ]
        },
        "linecol": [
          3425,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC9) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3426,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC9",
          "linecol": [
            3426,
            1
          ]
        },
        "linecol": [
          3426,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFLOC10) * LIG1 * (1 - null(4-V_REGCO)) * LIG2",
          "linecol": [
            3427,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPLOC10",
          "linecol": [
            3427,
            1
          ]
        },
        "linecol": [
          3427,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 1113870,
      "linecol": [
        3365,
        7
      ]
    },
    "linecol": [
      3365,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3430,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3430,
            23
          ]
        }
      ],
      "linecol": [
        3430,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(DCSGD) * null(5 - V_IND_TRAIT) * INDCTX * LIG1 * LIG2",
          "linecol": [
            3432,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGDCSGD",
          "linecol": [
            3432,
            1
          ]
        },
        "linecol": [
          3432,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 115101,
      "linecol": [
        3429,
        7
      ]
    },
    "linecol": [
      3429,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3435,
            16
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3435,
            24
          ]
        }
      ],
      "linecol": [
        3435,
        16
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPCORSE) * LIG1 * LIG2",
          "linecol": [
            3438,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPCORSE",
          "linecol": [
            3438,
            1
          ]
        },
        "linecol": [
          3438,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPRECH) * LIG1 * LIG2",
          "linecol": [
            3440,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPRECH",
          "linecol": [
            3440,
            1
          ]
        },
        "linecol": [
          3440,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPCICE) * LIG1 * LIG2",
          "linecol": [
            3442,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGREPCICE",
          "linecol": [
            3442,
            1
          ]
        },
        "linecol": [
          3442,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(REPINVPME3 + REPINVPME2 + REPINVPME1 + REPINVPMECU) * LIG1 * LIG2 * (1 - positif(V_CNR)) * (1 - null(2-V_REGCO)) * (1 - null(4-V_REGCO))",
          "linecol": [
            3444,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGPME",
          "linecol": [
            3444,
            1
          ]
        },
        "linecol": [
          3444,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 115102,
      "linecol": [
        3434,
        7
      ]
    },
    "linecol": [
      3434,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3449,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3449,
            23
          ]
        }
      ],
      "linecol": [
        3449,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(REVQTOT) * LIG1 * LIG2 * (1 - INDTXMIN) * (1 - INDTXMOY) * (1 - null(2-V_REGCO) * (1 - LIG1522)) * (1 - null(4-V_REGCO))",
          "linecol": [
            3450,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGIBAEX",
          "linecol": [
            3450,
            1
          ]
        },
        "linecol": [
          3450,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 115103,
      "linecol": [
        3448,
        7
      ]
    },
    "linecol": [
      3448,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3456,
            16
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3456,
            23
          ]
        }
      ],
      "linecol": [
        3456,
        16
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "LIG2 * LIG0",
          "linecol": [
            3457,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGANNUL2042",
          "linecol": [
            3457,
            1
          ]
        },
        "linecol": [
          3457,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFRITS) * LIGANNUL2042",
          "linecol": [
            3459,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG121",
          "linecol": [
            3459,
            1
          ]
        },
        "linecol": [
          3459,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFRIRCM)*positif(RCMFR) * LIGANNUL2042",
          "linecol": [
            3460,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG931",
          "linecol": [
            3460,
            1
          ]
        },
        "linecol": [
          3460,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DEFRIRCM)*positif(REPRCM) * LIGANNUL2042",
          "linecol": [
            3461,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG936",
          "linecol": [
            3461,
            1
          ]
        },
        "linecol": [
          3461,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFANTIMPU) * LIGANNUL2042",
          "linecol": [
            3462,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1111",
          "linecol": [
            3462,
            1
          ]
        },
        "linecol": [
          3462,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DFANTIMPU) * positif(DEFRF4BC) * positif(RDRFPS) * LIGANNUL2042",
          "linecol": [
            3463,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG1112",
          "linecol": [
            3463,
            1
          ]
        },
        "linecol": [
          3463,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 115105,
      "linecol": [
        3455,
        7
      ]
    },
    "linecol": [
      3455,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3466,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3466,
            22
          ]
        }
      ],
      "linecol": [
        3466,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_TRCT)",
          "linecol": [
            3467,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGTRCT",
          "linecol": [
            3467,
            1
          ]
        },
        "linecol": [
          3467,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(ISFBASE) * positif(V_TRCT)",
          "linecol": [
            3468,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFTRCT",
          "linecol": [
            3468,
            1
          ]
        },
        "linecol": [
          3468,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 115107,
      "linecol": [
        3465,
        7
      ]
    },
    "linecol": [
      3465,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3471,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3471,
            22
          ]
        }
      ],
      "linecol": [
        3471,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(AUTOVERSSUP)",
          "linecol": [
            3473,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGVERSUP",
          "linecol": [
            3473,
            1
          ]
        },
        "linecol": [
          3473,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 115108,
      "linecol": [
        3470,
        7
      ]
    },
    "linecol": [
      3470,
      1
    ]
  },
  {
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3476,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3476,
            22
          ]
        }
      ],
      "linecol": [
        3476,
        15
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(IREST + 0)",
          "linecol": [
            3478,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDRESTIT",
          "linecol": [
            3478,
            1
          ]
        },
        "linecol": [
          3478,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(null(1 - NATIMP) + 0)",
          "linecol": [
            3480,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDIMPOS",
          "linecol": [
            3480,
            1
          ]
        },
        "linecol": [
          3480,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "integer",
      "value": 115109,
      "linecol": [
        3475,
        7
      ]
    },
    "linecol": [
      3475,
      1
    ]
  },
  {
    "name": {
      "type": "integer",
      "value": 99902,
      "linecol": [
        3483,
        11
      ]
    },
    "linecol": [
      3483,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGISFBASE) * 3 + positif(LIGISFDEC) * 3 + positif(LIGISFBRUT) * 6 + positif(LIGISFRED) * 2 + positif(LIGISFREDPEN8) * 2 + positif(LIGISFDON) * 2 + positif(LIGISFRAN) + positif(LIGISFCEE) + positif(LIGISFINV) * 2 + positif(LIGISFPMED) + positif(LIGISFPMEI) + positif(LIGISFIP) + positif(LIGISFCPI) + positif(LIGISFIMPU) * 3 + positif(LIGISFPLAF) * 5 + positif(LIGISFE) * 3 + positif(LIGISFNOPEN) * 1 + positif(LIGISFCOR) * 1 + positif(LIGISFRET) * 2 + positif(LIGISF9749) + positif(LIGNMAJISF1) * 2 + positif(LIGISFANT) * 2 + positif(LIGISFNET) * 3 + positif(LIGISF9269) * 3 + positif(LIGISFANNUL) * 3 + positif(LIGISFDEG) * 2 + positif(LIGISFDEGR) * 2 + positif(LIGISFZERO) * 3 + positif(LIGISFNMR) * 4 + positif(LIGISFNMRIS) * 3 + positif(LIGISF0DEG) * 2 + positif(LIGISFNMRDEG) * 3 + positif(LIGISFNMRDEG) * 3 + positif(LIGISFINF8) * 3 + positif(LIGISFNEW) * 2 + positif(LIGISFTRCT) + 0",
          "linecol": [
            3485,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBLIGNESISF",
          "linecol": [
            3485,
            1
          ]
        },
        "linecol": [
          3485,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( NBLIGNESISF - 41 + 0 )",
          "linecol": [
            3522,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNBPAGESISF",
          "linecol": [
            3522,
            1
          ]
        },
        "linecol": [
          3522,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3484,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3484,
            22
          ]
        }
      ],
      "linecol": [
        3484,
        15
      ]
    },
    "type": "regle_declaration",
    "isf": {
      "type": "regle_isf_qualifier",
      "value": "isf",
      "linecol": [
        3483,
        7
      ]
    }
  },
  {
    "name": {
      "type": "integer",
      "value": 99901,
      "linecol": [
        3524,
        11
      ]
    },
    "linecol": [
      3524,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(ISF_LIMINF + ISF_LIMSUP)) * present(ISFBASE) * positif(DISFBASE)",
          "linecol": [
            3527,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISF",
          "linecol": [
            3527,
            1
          ]
        },
        "linecol": [
          3527,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(ISF_LIMINF + ISF_LIMSUP)) * present(ISFBASE)",
          "linecol": [
            3529,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIG_AVISISF",
          "linecol": [
            3529,
            1
          ]
        },
        "linecol": [
          3529,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "si (  (V_NOTRAIT+0 = 14) ou (V_NOTRAIT+0 = 16) ou (V_NOTRAIT+0 = 26) ou (V_NOTRAIT+0 = 36) ou (V_NOTRAIT+0 = 46) ou (V_NOTRAIT+0 = 56) ou (V_NOTRAIT+0 = 66) ) alors (1) sinon (0) finsi",
          "linecol": [
            3531,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDIS14",
          "linecol": [
            3531,
            1
          ]
        },
        "linecol": [
          3531,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "si (  (V_NOTRAIT+0 = 26) ou (V_NOTRAIT+0 = 36) ou (V_NOTRAIT+0 = 46) ou (V_NOTRAIT+0 = 56) ou (V_NOTRAIT+0 = 66) ) alors (1) sinon (0) finsi",
          "linecol": [
            3543,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDIS26",
          "linecol": [
            3543,
            1
          ]
        },
        "linecol": [
          3543,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "si (  (V_NOTRAIT+0 = 23) ou (V_NOTRAIT+0 = 33) ou (V_NOTRAIT+0 = 43) ou (V_NOTRAIT+0 = 53) ou (V_NOTRAIT+0 = 63) ) alors (1) sinon (0) finsi",
          "linecol": [
            3553,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDCTX23",
          "linecol": [
            3553,
            1
          ]
        },
        "linecol": [
          3553,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "INDCTX23 * null( 5-V_IND_TRAIT ) * present(ISFBASE)",
          "linecol": [
            3563,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IND9HI0",
          "linecol": [
            3563,
            1
          ]
        },
        "linecol": [
          3563,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "LIGISF * (1 - positif(ANNUL2042))",
          "linecol": [
            3565,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFBASE",
          "linecol": [
            3565,
            1
          ]
        },
        "linecol": [
          3565,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ISF1) * positif(ISFDEC) * LIGISF * (1 - positif(ANNUL2042))",
          "linecol": [
            3567,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFDEC",
          "linecol": [
            3567,
            1
          ]
        },
        "linecol": [
          3567,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ISFBRUT) * (1 - positif(ANNUL2042)) * LIGISF * (1-null(5-V_IND_TRAIT)) * positif(ISFDONF + ISFDONEURO + ISFPMEDI + ISFPMEIN + ISFFIP + ISFFCPI)  + positif(ISFBRUT) * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT) * positif(present(ISFDONF) + present(ISFDONEURO) + present(ISFPMEDI) + present(ISFPMEIN) + present(ISFFIP) + present(ISFFCPI))",
          "linecol": [
            3569,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFBRUT",
          "linecol": [
            3569,
            1
          ]
        },
        "linecol": [
          3569,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ISFDONF) * (1 - positif(ANNUL2042)) * (1-null(5-V_IND_TRAIT)) * LIGISF + present(ISFDONF) * positif(DISFBASE) * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT)",
          "linecol": [
            3576,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFRAN",
          "linecol": [
            3576,
            1
          ]
        },
        "linecol": [
          3576,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ISFDONEURO) * (1 - positif(ANNUL2042)) * (1-null(5-V_IND_TRAIT)) * LIGISF + present(ISFDONEURO) * positif(DISFBASE) * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT)",
          "linecol": [
            3579,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFCEE",
          "linecol": [
            3579,
            1
          ]
        },
        "linecol": [
          3579,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGISFRAN + LIGISFCEE) * LIGISF",
          "linecol": [
            3582,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFDON",
          "linecol": [
            3582,
            1
          ]
        },
        "linecol": [
          3582,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ISFPMEDI) * (1 - positif(ANNUL2042)) * (1-null(5-V_IND_TRAIT)) * LIGISF + present(ISFPMEDI) * positif(DISFBASE) * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT)",
          "linecol": [
            3584,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFPMED",
          "linecol": [
            3584,
            1
          ]
        },
        "linecol": [
          3584,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ISFPMEIN) * (1 - positif(ANNUL2042)) * (1-null(5-V_IND_TRAIT)) * LIGISF + present(ISFPMEIN) * positif(DISFBASE) * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT) * LIGISF",
          "linecol": [
            3587,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFPMEI",
          "linecol": [
            3587,
            1
          ]
        },
        "linecol": [
          3587,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ISFFIP) * (1 - positif(ANNUL2042)) * (1-null(5-V_IND_TRAIT)) * LIGISF + present(ISFFIP) * positif(DISFBASE) * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT)",
          "linecol": [
            3590,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFIP",
          "linecol": [
            3590,
            1
          ]
        },
        "linecol": [
          3590,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(ISFFCPI) * (1 - positif(ANNUL2042)) * (1-null(5-V_IND_TRAIT)) * LIGISF + present(ISFFCPI) * positif(DISFBASE) * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT)",
          "linecol": [
            3593,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFCPI",
          "linecol": [
            3593,
            1
          ]
        },
        "linecol": [
          3593,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGISFPMED + LIGISFPMEI + LIGISFIP + LIGISFCPI) * LIGISF",
          "linecol": [
            3596,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFINV",
          "linecol": [
            3596,
            1
          ]
        },
        "linecol": [
          3596,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGISFINV + LIGISFDON) * LIGISF * (1 - positif(null((CODE_2042 + CMAJ_ISF)- 8) + null(CMAJ_ISF - 34)) * (1 - COD9ZA))",
          "linecol": [
            3598,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFRED",
          "linecol": [
            3598,
            1
          ]
        },
        "linecol": [
          3598,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGISFINV + LIGISFDON) * LIGISF * positif(null ((CODE_2042 + CMAJ_ISF)- 8) + null(CMAJ_ISF - 34)) * (1 - COD9ZA)",
          "linecol": [
            3601,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFREDPEN8",
          "linecol": [
            3601,
            1
          ]
        },
        "linecol": [
          3601,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( ISFPLAF ) * (1-null(5-V_IND_TRAIT)) * LIGISF * (1 - positif(ANNUL2042)) + present( ISFPLAF )  * positif(DISFBASE) * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT)",
          "linecol": [
            3605,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFPLAF",
          "linecol": [
            3605,
            1
          ]
        },
        "linecol": [
          3605,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DISFBASE) * positif(ISFETRANG) * (1 - positif(ANNUL2042)) * (1-null(5-V_IND_TRAIT)) * LIGISF + positif(DISFBASE) * present(ISFETRANG) * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT)",
          "linecol": [
            3609,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFE",
          "linecol": [
            3609,
            1
          ]
        },
        "linecol": [
          3609,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(DISFBASE) * positif(ISFETRANG+ISFPLAF) * (1 - positif (ISFDONF + ISFDONEURO + ISFPMEDI + ISFPMEIN + ISFFIP + ISFFCPI)) * LIGISF * (1 - positif(ANNUL2042)) * (1-null(5-V_IND_TRAIT)) + positif(DISFBASE) * positif( present(ISFETRANG) + present(ISFPLAF)) * (1 - positif (ISFDONF + ISFDONEURO + ISFPMEDI + ISFPMEIN + ISFFIP + ISFFCPI)) * LIGISF * (1 - positif(ANNUL2042)) * null(5-V_IND_TRAIT) * (1-positif(LIGISFRED + LIGISFREDPEN8))",
          "linecol": [
            3614,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFIMPU",
          "linecol": [
            3614,
            1
          ]
        },
        "linecol": [
          3614,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(ISF4BIS)*positif(DISFBASE) * positif(PISF) * (1 - positif( SEUIL_12 - ISF4BIS)*(1-null(ISF4BIS))) * (1 - positif(ANNUL2042)) * LIGISF * (1-positif(V_NOTRAIT-20)) + positif(V_NOTRAIT-20) * LIGISF * (1 - positif(ANNUL2042))",
          "linecol": [
            3622,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFCOR",
          "linecol": [
            3622,
            1
          ]
        },
        "linecol": [
          3622,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(ISF5)*positif(DISFBASE)* (1 - positif(PISF)) * (1 - positif(LIGISFCOR)) * LIGISF * (1 - positif(ANNUL2042))",
          "linecol": [
            3628,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFNOPEN",
          "linecol": [
            3628,
            1
          ]
        },
        "linecol": [
          3628,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( RETISF) * (1 - positif(ANNUL2042)) * LIGISF * (1 - positif( SEUIL_12 - ISF4BIS)*(1-null(ISF5)))",
          "linecol": [
            3632,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFRET",
          "linecol": [
            3632,
            1
          ]
        },
        "linecol": [
          3632,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( NMAJISF1) * (1 - positif(ANNUL2042)) * LIGISF * (1 - positif( SEUIL_12 - ISF4BIS)*(1-null(ISF5)))",
          "linecol": [
            3635,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGNMAJISF1",
          "linecol": [
            3635,
            1
          ]
        },
        "linecol": [
          3635,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( NMAJISF1) * (1 - positif(ANNUL2042)) * LIGISF * (1 - positif( SEUIL_12 - ISF4BIS)*(1-null(ISF5))) * (1 - positif(V_FLAGR34 + null(CMAJ_ISF - 34)))",
          "linecol": [
            3638,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISF17281",
          "linecol": [
            3638,
            1
          ]
        },
        "linecol": [
          3638,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( NMAJISF1) * (1 - positif(ANNUL2042)) * LIGISF * (1 - positif( SEUIL_12 - ISF4BIS)*(1-null(ISF5))) * positif(V_FLAGR34 + null(CMAJ_ISF - 34))",
          "linecol": [
            3642,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISF17285",
          "linecol": [
            3642,
            1
          ]
        },
        "linecol": [
          3642,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(LIGNMAJISF1) * (1 - positif(LIGISFRET))",
          "linecol": [
            3646,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISF9749",
          "linecol": [
            3646,
            1
          ]
        },
        "linecol": [
          3646,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(positif(PISF)*positif(DISFBASE) * (1-null(5-V_IND_TRAIT)) * (1 - positif( SEUIL_12 - ISF4BIS)*(1-null(ISF5))) * (1 - positif(ANNUL2042)) * LIGISF + (null(5-V_IND_TRAIT)) * positif(LIGISFRET + LIGNMAJISF1) * positif(ISFNAP) * (1 - positif( SEUIL_12 - ISFNAP))) * (1 - positif(INDCTX23))",
          "linecol": [
            3648,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFNET",
          "linecol": [
            3648,
            1
          ]
        },
        "linecol": [
          3648,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "null(ISF5) * (1 - positif(ANNUL2042)) * positif(20-V_NOTRAIT) * LIGISF",
          "linecol": [
            3655,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFZERO",
          "linecol": [
            3655,
            1
          ]
        },
        "linecol": [
          3655,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif( SEUIL_12 - ISF5) * (1 - null(ISF5)) * (1 - positif(INDCTX23)) * positif(20 - V_NOTRAIT) * LIGISF * (1 - positif(ANNUL2042))",
          "linecol": [
            3658,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFNMR",
          "linecol": [
            3658,
            1
          ]
        },
        "linecol": [
          3658,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(V_ANTISF) * positif(V_NOTRAIT-20)",
          "linecol": [
            3663,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFANT",
          "linecol": [
            3663,
            1
          ]
        },
        "linecol": [
          3663,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(null(2- (positif(SEUIL_8 - ISFDEGR) + positif_ou_nul(ISF5-SEUIL_12))) + null(V_ANTISF)) * INDCTX23 * null(5-V_IND_TRAIT) * (1 - positif(ANNUL2042))",
          "linecol": [
            3665,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFDEGR",
          "linecol": [
            3665,
            1
          ]
        },
        "linecol": [
          3665,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(LIGISFDEGR)) * IND9HI0 * positif(ISFDEG)",
          "linecol": [
            3669,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFDEG",
          "linecol": [
            3669,
            1
          ]
        },
        "linecol": [
          3669,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(LIGISFDEGR)) * (1 - null(ISF5)) * positif(SEUIL_12 - ISF4BIS) * positif(DISFBASE) * INDCTX23 * null(5-V_IND_TRAIT) * (1 - positif(ANNUL2042))",
          "linecol": [
            3671,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFNMRDEG",
          "linecol": [
            3671,
            1
          ]
        },
        "linecol": [
          3671,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(LIGISFRET + LIGNMAJISF1)) * (1 - positif( SEUIL_12 - ISFNAP)) * INDIS26",
          "linecol": [
            3675,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISF9269",
          "linecol": [
            3675,
            1
          ]
        },
        "linecol": [
          3675,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(SEUIL_12 - ISFNAP) * INDIS26 * positif(V_NOTRAIT - 20) * (1 - positif(ANNUL2042))",
          "linecol": [
            3677,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFNMRIS",
          "linecol": [
            3677,
            1
          ]
        },
        "linecol": [
          3677,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "IND9HI0 * null(ISF4BIS) * (1 - positif(ANNUL2042))",
          "linecol": [
            3680,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISF0DEG",
          "linecol": [
            3680,
            1
          ]
        },
        "linecol": [
          3680,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "IND9HI0 * positif(LIGISFDEGR) * (1 - positif(ANNUL2042))",
          "linecol": [
            3682,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFINF8",
          "linecol": [
            3682,
            1
          ]
        },
        "linecol": [
          3682,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(ISFBASE) * (1 - positif(20-V_NOTRAIT)) * null(5 - V_IND_TRAIT) * (1 - positif(ANNUL2042))",
          "linecol": [
            3685,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFNEW",
          "linecol": [
            3685,
            1
          ]
        },
        "linecol": [
          3685,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "present(ISFBASE) * positif(ANNUL2042)",
          "linecol": [
            3687,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIGISFANNUL",
          "linecol": [
            3687,
            1
          ]
        },
        "linecol": [
          3687,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            3525,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            3525,
            22
          ]
        }
      ],
      "linecol": [
        3525,
        15
      ]
    },
    "type": "regle_declaration",
    "isf": {
      "type": "regle_isf_qualifier",
      "value": "isf",
      "linecol": [
        3524,
        7
      ]
    }
  }
]
