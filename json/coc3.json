[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                22,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                22,
                23
              ]
            }
          ],
          "linecol": [
            22,
            15
          ]
        }
      ],
      "linecol": [
        22,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "DPVRCM > 0 et BPVRCM + PEA + GAINPEA > 0  ",
          "linecol": [
            25,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A320",
                "linecol": [
                  29,
                  14
                ]
              }
            ],
            "linecol": [
              29,
              7
            ]
          }
        ],
        "linecol": [
          24,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "320",
      "linecol": [
        21,
        7
      ]
    },
    "linecol": [
      21,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                31,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                31,
                23
              ]
            }
          ],
          "linecol": [
            31,
            15
          ]
        }
      ],
      "linecol": [
        31,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "positif(ABDETPLUS + 0) + positif(ABDETMOINS + 0) = 2  ",
          "linecol": [
            35,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A321",
                "linecol": [
                  37,
                  14
                ]
              }
            ],
            "linecol": [
              37,
              7
            ]
          }
        ],
        "linecol": [
          33,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "321",
      "linecol": [
        30,
        7
      ]
    },
    "linecol": [
      30,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                39,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                39,
                23
              ]
            }
          ],
          "linecol": [
            39,
            15
          ]
        }
      ],
      "linecol": [
        39,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "positif(ABIMPPV + 0) = 1 et positif(ABIMPMV + 0) = 1  ",
          "linecol": [
            42,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A323",
                "linecol": [
                  46,
                  14
                ]
              }
            ],
            "linecol": [
              46,
              7
            ]
          }
        ],
        "linecol": [
          41,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "323",
      "linecol": [
        38,
        7
      ]
    },
    "linecol": [
      38,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                48,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                48,
                23
              ]
            }
          ],
          "linecol": [
            48,
            15
          ]
        }
      ],
      "linecol": [
        48,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "V_IND_TRAIT > 0 et positif(PVSURSI + 0) + positif(COD3WM + 0) = 1  ",
          "linecol": [
            51,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A325",
                "linecol": [
                  55,
                  14
                ]
              }
            ],
            "linecol": [
              55,
              7
            ]
          }
        ],
        "linecol": [
          50,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "325",
      "linecol": [
        47,
        7
      ]
    },
    "linecol": [
      47,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                57,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                57,
                23
              ]
            }
          ],
          "linecol": [
            57,
            15
          ]
        }
      ],
      "linecol": [
        57,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "V_IND_TRAIT > 0 et positif(PVIMPOS + 0) + positif(ABPVNOSURSIS + 0) = 1  ",
          "linecol": [
            60,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A326",
                "linecol": [
                  64,
                  14
                ]
              }
            ],
            "linecol": [
              64,
              7
            ]
          }
        ],
        "linecol": [
          59,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "326",
      "linecol": [
        56,
        7
      ]
    },
    "linecol": [
      56,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                66,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                66,
                23
              ]
            }
          ],
          "linecol": [
            66,
            15
          ]
        }
      ],
      "linecol": [
        66,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "V_IND_TRAIT > 0 et positif(CODRVG + 0) + positif(CODNVG + 0) = 1  ",
          "linecol": [
            69,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A32701",
                "linecol": [
                  73,
                  14
                ]
              }
            ],
            "linecol": [
              73,
              7
            ]
          }
        ],
        "linecol": [
          68,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "3271",
      "linecol": [
        65,
        7
      ]
    },
    "linecol": [
      65,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                75,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                75,
                23
              ]
            }
          ],
          "linecol": [
            75,
            15
          ]
        }
      ],
      "linecol": [
        75,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "V_IND_TRAIT > 0 et positif(CODNVG + 0) = 1 et null(4 - CODNVG) = 0  ",
          "linecol": [
            78,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A32702",
                "linecol": [
                  84,
                  14
                ]
              }
            ],
            "linecol": [
              84,
              7
            ]
          }
        ],
        "linecol": [
          77,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "3272",
      "linecol": [
        74,
        7
      ]
    },
    "linecol": [
      74,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                86,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                86,
                23
              ]
            }
          ],
          "linecol": [
            86,
            15
          ]
        }
      ],
      "linecol": [
        86,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "V_IND_TRAIT > 0 et positif(CODRWA + 0) + positif(CODNWA + 0) = 1  ",
          "linecol": [
            89,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A32801",
                "linecol": [
                  93,
                  14
                ]
              }
            ],
            "linecol": [
              93,
              7
            ]
          }
        ],
        "linecol": [
          88,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "3281",
      "linecol": [
        85,
        7
      ]
    },
    "linecol": [
      85,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                95,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                95,
                23
              ]
            }
          ],
          "linecol": [
            95,
            15
          ]
        }
      ],
      "linecol": [
        95,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "V_IND_TRAIT > 0 et positif(CODNWA + 0) = 1 et null(4 - CODNWA) = 0  ",
          "linecol": [
            98,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A32802",
                "linecol": [
                  104,
                  14
                ]
              }
            ],
            "linecol": [
              104,
              7
            ]
          }
        ],
        "linecol": [
          97,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "3282",
      "linecol": [
        94,
        7
      ]
    },
    "linecol": [
      94,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                106,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                106,
                23
              ]
            }
          ],
          "linecol": [
            106,
            15
          ]
        }
      ],
      "linecol": [
        106,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "V_IND_TRAIT > 0 et positif(CODRWB + 0) + positif(CODNWB + 0) = 1  ",
          "linecol": [
            109,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A32901",
                "linecol": [
                  113,
                  14
                ]
              }
            ],
            "linecol": [
              113,
              7
            ]
          }
        ],
        "linecol": [
          108,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "3291",
      "linecol": [
        105,
        7
      ]
    },
    "linecol": [
      105,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                115,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                115,
                23
              ]
            }
          ],
          "linecol": [
            115,
            15
          ]
        }
      ],
      "linecol": [
        115,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "V_IND_TRAIT > 0 et positif(CODNWB + 0) = 1 et null(4 - CODNWB) = 0  ",
          "linecol": [
            118,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A32902",
                "linecol": [
                  124,
                  14
                ]
              }
            ],
            "linecol": [
              124,
              7
            ]
          }
        ],
        "linecol": [
          117,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "3292",
      "linecol": [
        114,
        7
      ]
    },
    "linecol": [
      114,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                126,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                126,
                23
              ]
            }
          ],
          "linecol": [
            126,
            15
          ]
        }
      ],
      "linecol": [
        126,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "RFMIC > 0 et (RFORDI > 0 ou RFDORD > 0 ou RFDHIS > 0 ou FONCI > 0 ou REAMOR > 0 et FONCINB > 0 ou REAMORNB > 0)  ",
          "linecol": [
            129,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A420",
                "linecol": [
                  133,
                  14
                ]
              }
            ],
            "linecol": [
              133,
              7
            ]
          }
        ],
        "linecol": [
          128,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "420",
      "linecol": [
        125,
        7
      ]
    },
    "linecol": [
      125,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                135,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                135,
                23
              ]
            }
          ],
          "linecol": [
            135,
            15
          ]
        }
      ],
      "linecol": [
        135,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "V_IND_TRAIT > 0 et RFMIC > LIM_MICFON  ",
          "linecol": [
            138,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A421",
                "linecol": [
                  142,
                  14
                ]
              }
            ],
            "linecol": [
              142,
              7
            ]
          }
        ],
        "linecol": [
          137,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "421",
      "linecol": [
        134,
        7
      ]
    },
    "linecol": [
      134,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                144,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                144,
                23
              ]
            }
          ],
          "linecol": [
            144,
            15
          ]
        }
      ],
      "linecol": [
        144,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "LOYIMP > 0 et ( present(RFORDI) = 0 et present(FONCI) = 0 et present(FONCINB) = 0 et present(REAMOR) = 0 et present(REAMORNB) = 0 et present(RFDORD) = 0 et present(RFDHIS) = 0 et present(RFMIC) = 0)  ",
          "linecol": [
            147,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A422",
                "linecol": [
                  163,
                  14
                ]
              }
            ],
            "linecol": [
              163,
              7
            ]
          }
        ],
        "linecol": [
          146,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "422",
      "linecol": [
        143,
        7
      ]
    },
    "linecol": [
      143,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                165,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                165,
                23
              ]
            }
          ],
          "linecol": [
            165,
            15
          ]
        }
      ],
      "linecol": [
        165,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "RFROBOR > 0 et RFDANT > 0 et present(RFORDI) = 0 et present(RFDORD) = 0 et present(RFDHIS) = 0  ",
          "linecol": [
            168,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A423",
                "linecol": [
                  178,
                  14
                ]
              }
            ],
            "linecol": [
              178,
              7
            ]
          }
        ],
        "linecol": [
          167,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "423",
      "linecol": [
        164,
        7
      ]
    },
    "linecol": [
      164,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                180,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                180,
                23
              ]
            }
          ],
          "linecol": [
            180,
            15
          ]
        }
      ],
      "linecol": [
        180,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "RFROBOR > 0 et (FONCI > 0 ou REAMOR > 0)  ",
          "linecol": [
            183,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A424",
                "linecol": [
                  189,
                  14
                ]
              }
            ],
            "linecol": [
              189,
              7
            ]
          }
        ],
        "linecol": [
          182,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "424",
      "linecol": [
        179,
        7
      ]
    },
    "linecol": [
      179,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                191,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                191,
                23
              ]
            }
          ],
          "linecol": [
            191,
            15
          ]
        }
      ],
      "linecol": [
        191,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "(V_IND_TRAIT = 4 et (FONCINB < 2 ou FONCINB > 30)) ou (V_IND_TRAIT = 5 et (FONCINB = 1 ou FONCINB > 30))  ",
          "linecol": [
            194,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A42501",
                "linecol": [
                  202,
                  14
                ]
              }
            ],
            "linecol": [
              202,
              7
            ]
          }
        ],
        "linecol": [
          193,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "4251",
      "linecol": [
        190,
        7
      ]
    },
    "linecol": [
      190,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                204,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                204,
                23
              ]
            }
          ],
          "linecol": [
            204,
            15
          ]
        }
      ],
      "linecol": [
        204,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "(V_IND_TRAIT = 4 et positif(FONCI) + present(FONCINB) = 1) ou (V_IND_TRAIT = 5 et positif(FONCI) + positif(FONCINB) = 1)  ",
          "linecol": [
            207,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A42502",
                "linecol": [
                  215,
                  14
                ]
              }
            ],
            "linecol": [
              215,
              7
            ]
          }
        ],
        "linecol": [
          206,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "4252",
      "linecol": [
        203,
        7
      ]
    },
    "linecol": [
      203,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                217,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                217,
                23
              ]
            }
          ],
          "linecol": [
            217,
            15
          ]
        }
      ],
      "linecol": [
        217,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "(V_IND_TRAIT = 4 et (REAMORNB < 2 ou REAMORNB > 14)) ou (V_IND_TRAIT = 5 et (REAMORNB = 1 ou REAMORNB > 14))  ",
          "linecol": [
            220,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A42601",
                "linecol": [
                  228,
                  14
                ]
              }
            ],
            "linecol": [
              228,
              7
            ]
          }
        ],
        "linecol": [
          219,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "4261",
      "linecol": [
        216,
        7
      ]
    },
    "linecol": [
      216,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                230,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                230,
                23
              ]
            }
          ],
          "linecol": [
            230,
            15
          ]
        }
      ],
      "linecol": [
        230,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "(V_IND_TRAIT = 4 et positif(REAMOR) + present(REAMORNB) = 1) ou (V_IND_TRAIT = 5 et positif(REAMOR) + positif(REAMORNB) = 1)  ",
          "linecol": [
            233,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A42602",
                "linecol": [
                  241,
                  14
                ]
              }
            ],
            "linecol": [
              241,
              7
            ]
          }
        ],
        "linecol": [
          232,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "4262",
      "linecol": [
        229,
        7
      ]
    },
    "linecol": [
      229,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                243,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                243,
                23
              ]
            }
          ],
          "linecol": [
            243,
            15
          ]
        }
      ],
      "linecol": [
        243,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "APPLI_COLBERT + APPLI_OCEANS = 0 et positif_ou_nul(NAPT) = 0 et (V_BTNATIMP+0) dans (1,11,71,81) et (positif(V_FORVA + 0) = 1 ou positif(V_FORCA + 0) = 1 ou positif(V_FORPA + 0) = 1)  ",
          "linecol": [
            246,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A534",
                "linecol": [
                  258,
                  14
                ]
              }
            ],
            "linecol": [
              258,
              7
            ]
          }
        ],
        "linecol": [
          245,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "534",
      "linecol": [
        242,
        7
      ]
    },
    "linecol": [
      242,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                260,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                260,
                23
              ]
            }
          ],
          "linecol": [
            260,
            15
          ]
        }
      ],
      "linecol": [
        260,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "(RCSV > 0 et SOMMEA538VB = 0) ou (RCSC > 0 et SOMMEA538CB = 0) ou (RCSP > 0 et SOMMEA538PB = 0)  ",
          "linecol": [
            263,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A538",
                "linecol": [
                  269,
                  14
                ]
              }
            ],
            "linecol": [
              269,
              7
            ]
          }
        ],
        "linecol": [
          262,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "538",
      "linecol": [
        259,
        7
      ]
    },
    "linecol": [
      259,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                271,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                271,
                23
              ]
            }
          ],
          "linecol": [
            271,
            15
          ]
        }
      ],
      "linecol": [
        271,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "APPLI_OCEANS = 0 et ( (PPEACV+0 > 0 et PPENJV+0 > 0) ou (PPEACC+0 > 0 et PPENJC+0 > 0) ou (PPEACP+0 > 0 et PPENJP+0 > 0) )  ",
          "linecol": [
            274,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A542",
                "linecol": [
                  284,
                  14
                ]
              }
            ],
            "linecol": [
              284,
              7
            ]
          }
        ],
        "linecol": [
          273,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "542",
      "linecol": [
        270,
        7
      ]
    },
    "linecol": [
      270,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                286,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                286,
                23
              ]
            }
          ],
          "linecol": [
            286,
            15
          ]
        }
      ],
      "linecol": [
        286,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "APPLI_OCEANS = 0 et positif(PERPIMPATRIE+0) != 1 et V_REGCO+0 != 2 et V_REGCO+0 != 4 et V_CNR+0 != 1 et ((positif(PERP_COTV+0) > 0 et present(PERPPLAFCV)*present(PERPPLAFNUV1)*present(PERPPLAFNUV2)*present(PERPPLAFNUV3) = 0) ou (positif(PERP_COTC+0) > 0 et present(PERPPLAFCC)*present(PERPPLAFNUC1)*present(PERPPLAFNUC2)*present(PERPPLAFNUC3) = 0) ou (positif(PERP_COTP+0) > 0 et present(PERPPLAFCP)*present(PERPPLAFNUP1)*present(PERPPLAFNUP2)*present(PERPPLAFNUP3) = 0))  ",
          "linecol": [
            289,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A600",
                "linecol": [
                  306,
                  14
                ]
              }
            ],
            "linecol": [
              306,
              7
            ]
          }
        ],
        "linecol": [
          288,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "600",
      "linecol": [
        285,
        7
      ]
    },
    "linecol": [
      285,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                308,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                308,
                23
              ]
            }
          ],
          "linecol": [
            308,
            15
          ]
        }
      ],
      "linecol": [
        308,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "APPLI_OCEANS = 0 et V_REGCO+0 != 2 et V_REGCO+0 != 4 et positif(PERPIMPATRIE+0) != 1 et (PERPPLAFCV > LIM_PERPMAXBT ou PERPPLAFCC > LIM_PERPMAXBT)  ",
          "linecol": [
            311,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A601",
                "linecol": [
                  321,
                  14
                ]
              }
            ],
            "linecol": [
              321,
              7
            ]
          }
        ],
        "linecol": [
          310,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "601",
      "linecol": [
        307,
        7
      ]
    },
    "linecol": [
      307,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                323,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                323,
                23
              ]
            }
          ],
          "linecol": [
            323,
            15
          ]
        }
      ],
      "linecol": [
        323,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "APPLI_OCEANS = 0 et V_REGCO+0 != 2 et V_REGCO+0 != 4 et ((positif(RACCOTV+0) > 0 et positif(PERP_COTV+0) = 0) ou (positif(RACCOTC+0) > 0 et positif(PERP_COTC+0) = 0) ou (positif(RACCOTP+0) > 0 et positif(PERP_COTP+0) = 0))  ",
          "linecol": [
            326,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A602",
                "linecol": [
                  336,
                  14
                ]
              }
            ],
            "linecol": [
              336,
              7
            ]
          }
        ],
        "linecol": [
          325,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "602",
      "linecol": [
        322,
        7
      ]
    },
    "linecol": [
      322,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                338,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                338,
                23
              ]
            }
          ],
          "linecol": [
            338,
            15
          ]
        }
      ],
      "linecol": [
        338,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "APPLI_OCEANS = 0 et positif(PERPIMPATRIE + 0) != 1 et positif(V_CALCULIR + 0) = 0 et V_REGCO+0 != 2 et V_REGCO+0 != 4 et ( (positif_ou_nul(PLAF_PERPV) = 1 et (present(PERPPLAFCV) = 0 et present(PERPPLAFNUV1) = 0 et present(PERPPLAFNUV2) = 0 et present(PERPPLAFNUV3) = 0 )) ou (positif_ou_nul(PLAF_PERPC) = 1 et (present(PERPPLAFCC) = 0 et present(PERPPLAFNUC1) = 0 et present(PERPPLAFNUC2) = 0 et present(PERPPLAFNUC3) = 0 )) ou (positif_ou_nul(PLAF_PERPP) = 1 et (present(PERPPLAFCP) = 0 et present(PERPPLAFNUP1) = 0 et present(PERPPLAFNUP2) = 0 et present(PERPPLAFNUP3) = 0 )) ou (positif_ou_nul(PLAF_PERPV) = 1 et (PERPPLAFCV+PERPPLAFNUV1+PERPPLAFNUV2+PERPPLAFNUV3 = V_BTPERPV+V_BTPERPNUV1+V_BTPERPNUV2+V_BTPERPNUV3) ) ou (positif_ou_nul(PLAF_PERPC) = 1 et (PERPPLAFCC+PERPPLAFNUC1+PERPPLAFNUC2+PERPPLAFNUC3 = V_BTPERPC+V_BTPERPNUC1+V_BTPERPNUC2+V_BTPERPNUC3) ) ou (positif_ou_nul(PLAF_PERPP) = 1 et (PERPPLAFCP+PERPPLAFNUP1+PERPPLAFNUP2+PERPPLAFNUP3 = V_BTPERPP+V_BTPERPNUP1+V_BTPERPNUP2+V_BTPERPNUP3) ) ) ",
          "linecol": [
            341,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A603",
                "linecol": [
                  374,
                  14
                ]
              }
            ],
            "linecol": [
              374,
              7
            ]
          }
        ],
        "linecol": [
          340,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "603",
      "linecol": [
        337,
        7
      ]
    },
    "linecol": [
      337,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                376,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                376,
                23
              ]
            }
          ],
          "linecol": [
            376,
            15
          ]
        }
      ],
      "linecol": [
        376,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "APPLI_OCEANS = 0 et (positif(PERPMUTU) = 1 et (V_0AM + V_0AO = 1) et ((V_REGCO+0) dans (1,3,5,6,7)) et positif(PERPIMPATRIE+0) = 0 et (present(PERPPLAFCV) = 0 ou present(PERPPLAFNUV1) = 0 ou present(PERPPLAFNUV2) = 0 ou present(PERPPLAFNUV3) = 0 ou present(PERPPLAFCC) = 0 ou present(PERPPLAFNUC1) = 0 ou present(PERPPLAFNUC2) = 0 ou present(PERPPLAFNUC3) =0)) ",
          "linecol": [
            379,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A604",
                "linecol": [
                  387,
                  14
                ]
              }
            ],
            "linecol": [
              387,
              7
            ]
          }
        ],
        "linecol": [
          378,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "604",
      "linecol": [
        375,
        7
      ]
    },
    "linecol": [
      375,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                389,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                389,
                23
              ]
            }
          ],
          "linecol": [
            389,
            15
          ]
        }
      ],
      "linecol": [
        389,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "APPLI_OCEANS = 0 et V_IND_TRAIT > 0 et PERPV + 0 < EXOCETV + 0 et positif(EXOCETV + 0) = 1  ",
          "linecol": [
            392,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A60501",
                "linecol": [
                  400,
                  14
                ]
              }
            ],
            "linecol": [
              400,
              7
            ]
          }
        ],
        "linecol": [
          391,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "6051",
      "linecol": [
        388,
        7
      ]
    },
    "linecol": [
      388,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                402,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                402,
                23
              ]
            }
          ],
          "linecol": [
            402,
            15
          ]
        }
      ],
      "linecol": [
        402,
        1
      ]
    },
    "type": "verif_declaration",
    "conditions": [
      {
        "expression": {
          "type": "verif_declaration_condition_expression",
          "value": "APPLI_OCEANS = 0 et V_IND_TRAIT > 0 et PERPC + 0 < EXOCETC + 0 et positif(EXOCETC + 0) = 1  ",
          "linecol": [
            405,
            4
          ]
        },
        "type": "verif_declaration_condition",
        "erreurs": [
          {
            "type": "verif_declaration_erreurs",
            "names": [
              {
                "type": "symbol",
                "name": "A60502",
                "linecol": [
                  413,
                  14
                ]
              }
            ],
            "linecol": [
              413,
              7
            ]
          }
        ],
        "linecol": [
          404,
          1
        ]
      }
    ],
    "name": {
      "type": "symbol",
      "name": "6052",
      "linecol": [
        401,
        7
      ]
    },
    "linecol": [
      401,
      1
    ]
  }
]
