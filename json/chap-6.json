[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#\f  ",
    "linecol": [
      21,
      2
    ]
  },
  {
    "type": "comment",
    "value": "####   #    #    ##    #####      #     #####  #####   ######          #####",
    "linecol": [
      23,
      3
    ]
  },
  {
    "type": "comment",
    "value": "#    #  #    #   #  #   #    #     #       #    #    #  #              #",
    "linecol": [
      24,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#       ######  #    #  #    #     #       #    #    #  #####          # ####",
    "linecol": [
      25,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#       #    #  ######  #####      #       #    #####   #              #     #",
    "linecol": [
      26,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#    #  #    #  #    #  #          #       #    #   #   #              #     #",
    "linecol": [
      27,
      2
    ]
  },
  {
    "type": "comment",
    "value": "####   #    #  #    #  #          #       #    #    #  ######   ####   #####",
    "linecol": [
      28,
      3
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      29,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      30,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      31,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      32,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      33,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      34,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      35,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      36,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#                      CALCUL DU NOMBRE DE PARTS",
    "linecol": [
      37,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      38,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      39,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      40,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      41,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#\f",
    "linecol": [
      42,
      2
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                44,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                44,
                24
              ]
            }
          ],
          "linecol": [
            44,
            16
          ]
        }
      ],
      "linecol": [
        44,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "((NSM + NPA + NIN + NSP + NBQAR)* 10)/10",
          "linecol": [
            45,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBPT",
          "linecol": [
            45,
            1
          ]
        },
        "linecol": [
          45,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "V_0CF + V_0CH + V_0CR + V_0DJ + V_0DN + V_0DP",
          "linecol": [
            47,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBPOTE",
          "linecol": [
            47,
            1
          ]
        },
        "linecol": [
          47,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1 + BOOL_0AM) + V_0CF + (V_0CH/2) + V_0CR + V_0DJ + V_0DN",
          "linecol": [
            49,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBFOTH",
          "linecol": [
            49,
            1
          ]
        },
        "linecol": [
          49,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "601",
      "linecol": [
        43,
        7
      ]
    },
    "linecol": [
      43,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                52,
                15
              ]
            }
          ],
          "linecol": [
            52,
            15
          ]
        }
      ],
      "linecol": [
        52,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - present(V_9VV)) * ((NSM + NPA + NIN + NSP + NBQAR)* 10)/10 + V_9VV",
          "linecol": [
            53,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBPT",
          "linecol": [
            53,
            1
          ]
        },
        "linecol": [
          53,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "6010",
      "linecol": [
        51,
        7
      ]
    },
    "linecol": [
      51,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                56,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                56,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                56,
                32
              ]
            }
          ],
          "linecol": [
            56,
            15
          ]
        }
      ],
      "linecol": [
        56,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "1 + BOOL_0AM + V_0AV * min(BOOL_0AZ + EAC + V_0CH + V_0CR, 1 ) + ( V_0AV * BOOL_0AZ * V_0AW * (1 - V_0AP) * (1 - V_0AF) / 2 )",
          "linecol": [
            57,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NSM",
          "linecol": [
            57,
            1
          ]
        },
        "linecol": [
          57,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "6011",
      "linecol": [
        55,
        7
      ]
    },
    "linecol": [
      55,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                60,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                60,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                60,
                32
              ]
            }
          ],
          "linecol": [
            60,
            15
          ]
        }
      ],
      "linecol": [
        60,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "PAC - 0.5 * min( PAC, 2 )",
          "linecol": [
            61,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NPA",
          "linecol": [
            61,
            1
          ]
        },
        "linecol": [
          61,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "6012",
      "linecol": [
        59,
        7
      ]
    },
    "linecol": [
      59,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                63,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                63,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                63,
                32
              ]
            }
          ],
          "linecol": [
            63,
            15
          ]
        }
      ],
      "linecol": [
        63,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "EAC + V_0CR",
          "linecol": [
            64,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PAC",
          "linecol": [
            64,
            1
          ]
        },
        "linecol": [
          64,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "60121",
      "linecol": [
        62,
        7
      ]
    },
    "linecol": [
      62,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                66,
                15
              ]
            }
          ],
          "linecol": [
            66,
            15
          ]
        }
      ],
      "linecol": [
        66,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "((V_0CF + V_0DJ) * (1 - present(V_9XX)))  + V_9XX",
          "linecol": [
            67,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EAC",
          "linecol": [
            67,
            1
          ]
        },
        "linecol": [
          67,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "60122",
      "linecol": [
        65,
        7
      ]
    },
    "linecol": [
      65,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                69,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                69,
                23
              ]
            }
          ],
          "linecol": [
            69,
            15
          ]
        }
      ],
      "linecol": [
        69,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(V_0CF + V_0DJ)",
          "linecol": [
            70,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EAC",
          "linecol": [
            70,
            1
          ]
        },
        "linecol": [
          70,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "601220",
      "linecol": [
        68,
        7
      ]
    },
    "linecol": [
      68,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                72,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                72,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                72,
                32
              ]
            }
          ],
          "linecol": [
            72,
            15
          ]
        }
      ],
      "linecol": [
        72,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "( V_0AP + V_0AF + V_0CG + V_0CR ) * 0.5",
          "linecol": [
            73,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NIN",
          "linecol": [
            73,
            1
          ]
        },
        "linecol": [
          73,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "6013",
      "linecol": [
        71,
        7
      ]
    },
    "linecol": [
      71,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                75,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                75,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                75,
                32
              ]
            }
          ],
          "linecol": [
            75,
            15
          ]
        }
      ],
      "linecol": [
        75,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "NPS + NSA + NCC",
          "linecol": [
            76,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NSP",
          "linecol": [
            76,
            1
          ]
        },
        "linecol": [
          76,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "6014",
      "linecol": [
        74,
        7
      ]
    },
    "linecol": [
      74,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                78,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                78,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                78,
                32
              ]
            }
          ],
          "linecol": [
            78,
            15
          ]
        }
      ],
      "linecol": [
        78,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "V_0AS * BOOL_0AM * (1 - positif(V_0AP + V_0AF)) * 0.5 * positif(max( AGV + 1 - LIM_AGE_LET_S, AGC + 1 - LIM_AGE_LET_S ))",
          "linecol": [
            79,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NCC",
          "linecol": [
            79,
            1
          ]
        },
        "linecol": [
          79,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "60141",
      "linecol": [
        77,
        7
      ]
    },
    "linecol": [
      77,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                82,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                82,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                82,
                32
              ]
            }
          ],
          "linecol": [
            82,
            15
          ]
        }
      ],
      "linecol": [
        82,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(PAC) * V_0BT * positif( 2 - NSM ) * 0.5",
          "linecol": [
            83,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NPS",
          "linecol": [
            83,
            1
          ]
        },
        "linecol": [
          83,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "60142",
      "linecol": [
        81,
        7
      ]
    },
    "linecol": [
      81,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                85,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                85,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                85,
                32
              ]
            }
          ],
          "linecol": [
            85,
            15
          ]
        }
      ],
      "linecol": [
        85,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(1 - positif(PAC+V_0CH)) * min( V_0AG + (V_0AL * (1 - positif (V_0AN))) * ( 1 - positif(positif(V_0AW)*positif_ou_nul(AGV-LIM_AGE_LET_S))) + V_0AW * positif(max(AGV + 1 - LIM_AGE_LET_S, AGC + 1 - LIM_AGE_LET_S)) , 1 ) * ( 1 - V_0AP ) * positif(2 - NSM) * 0.5",
          "linecol": [
            86,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NSA",
          "linecol": [
            86,
            1
          ]
        },
        "linecol": [
          86,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "min( (1 - positif(PAC+V_0CH)) * (null(SFUTILE - 14) + null (SFUTILE - 7) + null (SFUTILE - 15) * (1-positif(NIN)) ) + null(SFUTILE -7) * BOOL_0AZ * V_0AV , 1) * 0.5",
          "linecol": [
            93,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NSA2",
          "linecol": [
            93,
            1
          ]
        },
        "linecol": [
          93,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "60143",
      "linecol": [
        84,
        7
      ]
    },
    "linecol": [
      84,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                104,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                104,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                104,
                32
              ]
            }
          ],
          "linecol": [
            104,
            15
          ]
        }
      ],
      "linecol": [
        104,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif ( V_0BT+0 ) * positif ( V_0AC + V_0AD + 0)",
          "linecol": [
            107,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BOOL_0BT",
          "linecol": [
            107,
            1
          ]
        },
        "linecol": [
          107,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "null (V_0CF+V_0CR+V_0DJ+0)    * (  1/2 * (V_0CH-2) * positif (V_0CH- 2) + 1/4 * positif (V_0CH+0) + 1/4 * positif(V_0CH-1) )",
          "linecol": [
            109,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBQAR1",
          "linecol": [
            109,
            1
          ]
        },
        "linecol": [
          109,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "null(V_0CF+V_0CR+V_0DJ-1) * (1/2 * (V_0CH -1 ) * positif(V_0CH -1) + 1/4 * positif (V_0CH+0) )",
          "linecol": [
            113,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBQAR2",
          "linecol": [
            113,
            1
          ]
        },
        "linecol": [
          113,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif_ou_nul(V_0CF+V_0CR+V_0DJ-2) * 1/2 * V_0CH",
          "linecol": [
            116,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBQAR3",
          "linecol": [
            116,
            1
          ]
        },
        "linecol": [
          116,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "1/4 * V_0CI",
          "linecol": [
            118,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBQAR4",
          "linecol": [
            118,
            1
          ]
        },
        "linecol": [
          118,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "BOOL_0BT * null(V_0CF+V_0CR+V_0DJ+0) * (1/4 * null (V_0CH  -1) + 1/2 *  positif_ou_nul (V_0CH  - 2))",
          "linecol": [
            120,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBQART",
          "linecol": [
            120,
            1
          ]
        },
        "linecol": [
          120,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "NBQAR1 + NBQAR2 + NBQAR3 + NBQAR4 + NBQART",
          "linecol": [
            123,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NBQAR",
          "linecol": [
            123,
            1
          ]
        },
        "linecol": [
          123,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "60200",
      "linecol": [
        103,
        7
      ]
    },
    "linecol": [
      103,
      1
    ]
  }
]
