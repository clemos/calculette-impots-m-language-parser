[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                22,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                22,
                23
              ]
            }
          ],
          "linecol": [
            22,
            15
          ]
        }
      ],
      "linecol": [
        22,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(BNHREV - (BNHDEV * (1 - positif(ART1731BIS*PREM8_11)))) * arr((BNHREV-(BNHDEV * (1 - positif(ART1731BIS*PREM8_11))))*MAJREV) + (1-positif_ou_nul(BNHREV-(BNHDEV * (1 - positif(ART1731BIS*PREM8_11))))) *(BNHREV-(BNHDEV * (1 - positif(ART1731BIS*PREM8_11) )))",
          "linecol": [
            23,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNNSV",
          "linecol": [
            23,
            1
          ]
        },
        "linecol": [
          23,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(BNHREC - (BNHDEC * (1 - positif(ART1731BIS*PREM8_11)))) * arr((BNHREC-(BNHDEC * (1 - positif(ART1731BIS*PREM8_11))))*MAJREV) + (1-positif_ou_nul(BNHREC-(BNHDEC * (1 - positif(ART1731BIS*PREM8_11))))) *(BNHREC-(BNHDEC * (1 - positif(ART1731BIS*PREM8_11) )))",
          "linecol": [
            28,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNNSC",
          "linecol": [
            28,
            1
          ]
        },
        "linecol": [
          28,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(BNHREP - (BNHDEP * (1 - positif(ART1731BIS*PREM8_11) ))) * arr((BNHREP-(BNHDEP * (1 - positif(ART1731BIS*PREM8_11))))*MAJREV) + (1-positif_ou_nul(BNHREP-(BNHDEP * (1 - positif(ART1731BIS*PREM8_11))))) *(BNHREP-(BNHDEP * (1 - positif(ART1731BIS*PREM8_11) )))",
          "linecol": [
            33,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNNSP",
          "linecol": [
            33,
            1
          ]
        },
        "linecol": [
          33,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BNCREV - BNCDEV * (1 - positif(ART1731BIS*PREM8_11)))",
          "linecol": [
            38,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNNAV",
          "linecol": [
            38,
            1
          ]
        },
        "linecol": [
          38,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BNCREC - BNCDEC * (1 - positif(ART1731BIS*PREM8_11)))",
          "linecol": [
            39,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNNAC",
          "linecol": [
            39,
            1
          ]
        },
        "linecol": [
          39,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BNCREP - BNCDEP * (1 - positif(ART1731BIS*PREM8_11)))",
          "linecol": [
            40,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNNAP",
          "linecol": [
            40,
            1
          ]
        },
        "linecol": [
          40,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BNCAABV - BNCAADV * (1 - positif(ART1731BIS*PREM8_11)))",
          "linecol": [
            41,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNNAAV",
          "linecol": [
            41,
            1
          ]
        },
        "linecol": [
          41,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BNCAABC - BNCAADC * (1 - positif(ART1731BIS*PREM8_11)))",
          "linecol": [
            42,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNNAAC",
          "linecol": [
            42,
            1
          ]
        },
        "linecol": [
          42,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BNCAABP - BNCAADP * (1 - positif(ART1731BIS*PREM8_11)))",
          "linecol": [
            43,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNNAAP",
          "linecol": [
            43,
            1
          ]
        },
        "linecol": [
          43,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8610",
      "linecol": [
        21,
        7
      ]
    },
    "linecol": [
      21,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                45,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                45,
                23
              ]
            }
          ],
          "linecol": [
            45,
            15
          ]
        }
      ],
      "linecol": [
        45,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(DNOCEP,max(DNOCEP_P,DNOCEPP2)),ANOCEP)",
          "linecol": [
            46,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VARDNOCEPV",
          "linecol": [
            46,
            1
          ]
        },
        "linecol": [
          46,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(DNOCEPC,max(DNOCEPC_P,DNOCEPCP2)),ANOVEP)",
          "linecol": [
            47,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VARDNOCEPC",
          "linecol": [
            47,
            1
          ]
        },
        "linecol": [
          47,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(DNOCEPP,max(DNOCEPP_P,DNOCEPPP2)),ANOPEP)",
          "linecol": [
            48,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VARDNOCEPP",
          "linecol": [
            48,
            1
          ]
        },
        "linecol": [
          48,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "ANOCEP - DNOCEP + (BNCAABV - BNCAADV)",
          "linecol": [
            49,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NOCEPV",
          "linecol": [
            49,
            1
          ]
        },
        "linecol": [
          49,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "ANOVEP - DNOCEPC + (BNCAABC - BNCAADC)",
          "linecol": [
            51,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NOCEPC",
          "linecol": [
            51,
            1
          ]
        },
        "linecol": [
          51,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "ANOPEP - DNOCEPP + (BNCAABP - BNCAADP)",
          "linecol": [
            53,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NOCEPP",
          "linecol": [
            53,
            1
          ]
        },
        "linecol": [
          53,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(ANOCEP - DNOCEP * (1 - positif(ART1731BIS*PREM8_11))) *arr((ANOCEP- DNOCEP * (1 - positif(ART1731BIS*PREM8_11)))*MAJREV) + positif_ou_nul(DNOCEP * (1 - positif(ART1731BIS*PREM8_11))-ANOCEP) *(ANOCEP- DNOCEP * (1 - positif(ART1731BIS*PREM8_11)))+BNNAAV",
          "linecol": [
            55,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NOCEPIMPV",
          "linecol": [
            55,
            1
          ]
        },
        "linecol": [
          55,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(ANOVEP - DNOCEPC * (1 - positif(ART1731BIS*PREM8_11))) *arr((ANOVEP- DNOCEPC * (1 - positif(ART1731BIS*PREM8_11)))*MAJREV) + positif_ou_nul(DNOCEPC * (1 - positif(ART1731BIS*PREM8_11))-ANOVEP) *(ANOVEP- DNOCEPC * (1 - positif(ART1731BIS*PREM8_11)))+BNNAAC",
          "linecol": [
            60,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NOCEPIMPC",
          "linecol": [
            60,
            1
          ]
        },
        "linecol": [
          60,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(ANOPEP - DNOCEPP * (1 - positif(ART1731BIS*PREM8_11))) *arr((ANOPEP- DNOCEPP * (1 - positif(ART1731BIS*PREM8_11)))*MAJREV) + positif_ou_nul(DNOCEPP * (1 - positif(ART1731BIS*PREM8_11))-ANOPEP) *(ANOPEP- DNOCEPP * (1 - positif(ART1731BIS*PREM8_11)))+BNNAAP",
          "linecol": [
            65,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NOCEPIMPP",
          "linecol": [
            65,
            1
          ]
        },
        "linecol": [
          65,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NOCEPIMPV+NOCEPIMPC+NOCEPIMPP",
          "linecol": [
            70,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NOCEPIMP",
          "linecol": [
            70,
            1
          ]
        },
        "linecol": [
          70,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(4-V_IND_TRAIT) * (DABNCNP6 + DABNCNP5 + DABNCNP4 + DABNCNP3 + DABNCNP2 + DABNCNP1) * (1-positif(ART1731BIS*PREM8_11)) + null(5-V_IND_TRAIT) * max(0,min(DABNCNP6 + DABNCNP5 + DABNCNP4 + DABNCNP3 + DABNCNP2 + DABNCNP1,TOTDABNCNP1731*ART1731BIS*(1-PREM8_11)+ (DABNCNP6 + DABNCNP5 + DABNCNP4 + DABNCNP3 + DABNCNP2 + DABNCNP1) * (1-positif(ART1731BIS*PREM8_11))))",
          "linecol": [
            72,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTDABNCNP",
          "linecol": [
            72,
            1
          ]
        },
        "linecol": [
          72,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "862",
      "linecol": [
        44,
        7
      ]
    },
    "linecol": [
      44,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                77,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                77,
                22
              ]
            }
          ],
          "linecol": [
            77,
            15
          ]
        }
      ],
      "linecol": [
        77,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(somme(i=V,C,P:BNRi) + SPENETPF + max(0,SPENETNPF + NOCEPIMP - TOTDABNCNP)) * (1-ART1731BIS) + (somme(i=V,C,P:BNRi) + SPENETPF + max(0,SPENETNPF + NOCEPIMP - DIDABNCNP+DEFBNCNPF)) * ART1731BIS*(1-PREM8_11) + (somme(i=V,C,P:BNRi) + SPENETPF + max(0,SPENETNPF + NOCEPIMP)) * ART1731BIS*PREM8_11 ",
          "linecol": [
            78,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNN",
          "linecol": [
            78,
            1
          ]
        },
        "linecol": [
          78,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "862019",
      "linecol": [
        76,
        7
      ]
    },
    "linecol": [
      76,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                83,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                83,
                23
              ]
            }
          ],
          "linecol": [
            83,
            15
          ]
        }
      ],
      "linecol": [
        83,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      84,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      84,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      84,
                      14
                    ]
                  }
                ],
                "linecol": [
                  84,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  84,
                  6
                ]
              },
              "linecol": [
                84,
                6
              ]
            }
          ],
          "linecol": [
            84,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "BNRi + SPENETi",
            "linecol": [
              85,
              9
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "BNNi",
            "linecol": [
              85,
              1
            ]
          },
          "linecol": [
            85,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          84,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8621",
      "linecol": [
        82,
        7
      ]
    },
    "linecol": [
      82,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                87,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                87,
                23
              ]
            }
          ],
          "linecol": [
            87,
            15
          ]
        }
      ],
      "linecol": [
        87,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BNRV + BNRC + BNRP",
          "linecol": [
            90,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNRTOT",
          "linecol": [
            90,
            1
          ]
        },
        "linecol": [
          90,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      88,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      88,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      88,
                      14
                    ]
                  }
                ],
                "linecol": [
                  88,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  88,
                  6
                ]
              },
              "linecol": [
                88,
                6
              ]
            }
          ],
          "linecol": [
            88,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "BNNSi + BNNAi",
            "linecol": [
              89,
              8
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "BNRi",
            "linecol": [
              89,
              1
            ]
          },
          "linecol": [
            89,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          88,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "86211",
      "linecol": [
        86,
        7
      ]
    },
    "linecol": [
      86,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                92,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                92,
                23
              ]
            }
          ],
          "linecol": [
            92,
            15
          ]
        }
      ],
      "linecol": [
        92,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=V,C,P:BN1i)",
          "linecol": [
            93,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BN1",
          "linecol": [
            93,
            1
          ]
        },
        "linecol": [
          93,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "863",
      "linecol": [
        91,
        7
      ]
    },
    "linecol": [
      91,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                95,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                95,
                23
              ]
            }
          ],
          "linecol": [
            95,
            15
          ]
        }
      ],
      "linecol": [
        95,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      96,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      96,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      96,
                      14
                    ]
                  }
                ],
                "linecol": [
                  96,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  96,
                  6
                ]
              },
              "linecol": [
                96,
                6
              ]
            }
          ],
          "linecol": [
            96,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "BN1Ai + PVINiE + INVENTi",
            "linecol": [
              97,
              8
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "BN1i",
            "linecol": [
              97,
              1
            ]
          },
          "linecol": [
            97,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          96,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8631",
      "linecol": [
        94,
        7
      ]
    },
    "linecol": [
      94,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                99,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                99,
                23
              ]
            }
          ],
          "linecol": [
            99,
            15
          ]
        }
      ],
      "linecol": [
        99,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      100,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      100,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      100,
                      14
                    ]
                  }
                ],
                "linecol": [
                  100,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  100,
                  6
                ]
              },
              "linecol": [
                100,
                6
              ]
            }
          ],
          "linecol": [
            100,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "BNCPROi + BNCNPi",
            "linecol": [
              101,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPETOTi",
            "linecol": [
              101,
              1
            ]
          },
          "linecol": [
            101,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          100,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "864",
      "linecol": [
        98,
        7
      ]
    },
    "linecol": [
      98,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                103,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                103,
                23
              ]
            }
          ],
          "linecol": [
            103,
            15
          ]
        }
      ],
      "linecol": [
        103,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      104,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      104,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      104,
                      14
                    ]
                  }
                ],
                "linecol": [
                  104,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  104,
                  6
                ]
              },
              "linecol": [
                104,
                6
              ]
            }
          ],
          "linecol": [
            104,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "SPETOTi",
            "linecol": [
              105,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPEBASABi",
            "linecol": [
              105,
              1
            ]
          },
          "linecol": [
            105,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          104,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      106,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      106,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      106,
                      14
                    ]
                  }
                ],
                "linecol": [
                  106,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  106,
                  6
                ]
              },
              "linecol": [
                106,
                6
              ]
            }
          ],
          "linecol": [
            106,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "arr((max(MIN_SPEBNC,(SPEBASABi * SPETXAB/100))) * positif_ou_nul(SPETOTi - MIN_SPEBNC)) + arr((min(MIN_SPEBNC,SPEBASABi )) * positif(MIN_SPEBNC - SPETOTi))",
            "linecol": [
              107,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPEABi",
            "linecol": [
              107,
              1
            ]
          },
          "linecol": [
            107,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          106,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8641",
      "linecol": [
        102,
        7
      ]
    },
    "linecol": [
      102,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                112,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                112,
                23
              ]
            }
          ],
          "linecol": [
            112,
            15
          ]
        }
      ],
      "linecol": [
        112,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      113,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      113,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      113,
                      14
                    ]
                  }
                ],
                "linecol": [
                  113,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  113,
                  6
                ]
              },
              "linecol": [
                113,
                6
              ]
            }
          ],
          "linecol": [
            113,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "arr((SPEABi * BNCPROi)/SPETOTi)",
            "linecol": [
              114,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPEABPi",
            "linecol": [
              114,
              1
            ]
          },
          "linecol": [
            114,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          113,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      115,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      115,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      115,
                      14
                    ]
                  }
                ],
                "linecol": [
                  115,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  115,
                  6
                ]
              },
              "linecol": [
                115,
                6
              ]
            }
          ],
          "linecol": [
            115,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "SPEABi - SPEABPi",
            "linecol": [
              116,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPEABNPi",
            "linecol": [
              116,
              1
            ]
          },
          "linecol": [
            116,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          115,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "86411",
      "linecol": [
        111,
        7
      ]
    },
    "linecol": [
      111,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                118,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                118,
                23
              ]
            }
          ],
          "linecol": [
            118,
            15
          ]
        }
      ],
      "linecol": [
        118,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=V,C,P:(SPENETi))",
          "linecol": [
            125,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SPENET",
          "linecol": [
            125,
            1
          ]
        },
        "linecol": [
          125,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      119,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      119,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      119,
                      14
                    ]
                  }
                ],
                "linecol": [
                  119,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  119,
                  6
                ]
              },
              "linecol": [
                119,
                6
              ]
            }
          ],
          "linecol": [
            119,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "max (0,(BNCPROi - SPEABPi))",
            "linecol": [
              120,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPENETPi",
            "linecol": [
              120,
              1
            ]
          },
          "linecol": [
            120,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          119,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      121,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      121,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      121,
                      14
                    ]
                  }
                ],
                "linecol": [
                  121,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  121,
                  6
                ]
              },
              "linecol": [
                121,
                6
              ]
            }
          ],
          "linecol": [
            121,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "max (0,(BNCNPi - SPEABNPi))",
            "linecol": [
              122,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPENETNPi",
            "linecol": [
              122,
              1
            ]
          },
          "linecol": [
            122,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          121,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      123,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      123,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      123,
                      14
                    ]
                  }
                ],
                "linecol": [
                  123,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  123,
                  6
                ]
              },
              "linecol": [
                123,
                6
              ]
            }
          ],
          "linecol": [
            123,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "SPENETPi + SPENETNPi",
            "linecol": [
              124,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPENETi",
            "linecol": [
              124,
              1
            ]
          },
          "linecol": [
            124,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          123,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8642",
      "linecol": [
        117,
        7
      ]
    },
    "linecol": [
      117,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                127,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                127,
                23
              ]
            }
          ],
          "linecol": [
            127,
            15
          ]
        }
      ],
      "linecol": [
        127,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BNCPROPVV + BNCPROPVC + BNCPROPVP - BNCPMVCTV - BNCPMVCTC - BNCPMVCTP",
          "linecol": [
            128,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SPENETCT",
          "linecol": [
            128,
            1
          ]
        },
        "linecol": [
          128,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BNCNPPVV + BNCNPPVC + BNCNPPVP - BNCNPDCT",
          "linecol": [
            129,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SPENETNPCT",
          "linecol": [
            129,
            1
          ]
        },
        "linecol": [
          129,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8650",
      "linecol": [
        126,
        7
      ]
    },
    "linecol": [
      126,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                131,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                131,
                23
              ]
            }
          ],
          "linecol": [
            131,
            15
          ]
        }
      ],
      "linecol": [
        131,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=V,C,P:SPENETPi) + SPENETCT",
          "linecol": [
            132,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SPENETPF",
          "linecol": [
            132,
            1
          ]
        },
        "linecol": [
          132,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=V,C,P:SPENETNPi) + SPENETNPCT",
          "linecol": [
            133,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SPENETNPF",
          "linecol": [
            133,
            1
          ]
        },
        "linecol": [
          133,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "SPENETPF + SPENETNPF",
          "linecol": [
            134,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNCNPTOT",
          "linecol": [
            134,
            1
          ]
        },
        "linecol": [
          134,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8660",
      "linecol": [
        130,
        7
      ]
    },
    "linecol": [
      130,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                136,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                136,
                23
              ]
            }
          ],
          "linecol": [
            136,
            15
          ]
        }
      ],
      "linecol": [
        136,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=V,C,P:max(0,SPEPVPi + SPEPVNPi))",
          "linecol": [
            141,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SPEPV",
          "linecol": [
            141,
            1
          ]
        },
        "linecol": [
          141,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      137,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      137,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      137,
                      14
                    ]
                  }
                ],
                "linecol": [
                  137,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  137,
                  6
                ]
              },
              "linecol": [
                137,
                6
              ]
            }
          ],
          "linecol": [
            137,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "BNCPRO1Ai - BNCPRODEi",
            "linecol": [
              138,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPEPVPi",
            "linecol": [
              138,
              1
            ]
          },
          "linecol": [
            138,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          137,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      139,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      139,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      139,
                      14
                    ]
                  }
                ],
                "linecol": [
                  139,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  139,
                  6
                ]
              },
              "linecol": [
                139,
                6
              ]
            }
          ],
          "linecol": [
            139,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "BNCNP1Ai - BNCNPDEi",
            "linecol": [
              140,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "SPEPVNPi",
            "linecol": [
              140,
              1
            ]
          },
          "linecol": [
            140,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          139,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8680",
      "linecol": [
        135,
        7
      ]
    },
    "linecol": [
      135,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                144,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                144,
                24
              ]
            }
          ],
          "linecol": [
            144,
            16
          ]
        }
      ],
      "linecol": [
        144,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(BNRTOT+SPENETPF) * BNCPMVCTV + ( 1 - positif_ou_nul(BNRTOT+SPENETPF)) * (BNCPMVCTV-abs(BNRTOT+SPENETPF)) + ( 1 - positif_ou_nul(BNRTOT+SPENETPF)) * null(BNCPMVCTV-abs(BNRTOT+SPENETPF))* BNCPMVCTV ",
          "linecol": [
            146,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DCTSPE",
          "linecol": [
            146,
            1
          ]
        },
        "linecol": [
          146,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(NOCEPIMP+SPENETNPF) * BNCNPDCT + ( 1 - positif_ou_nul(NOCEPIMP+SPENETNPF)) * (BNCNPDCT-abs(NOCEPIMP+SPENETNPF)) + ( 1 - positif_ou_nul(NOCEPIMP+SPENETNPF)) * null(BNCNPDCT-abs(NOCEPIMP+SPENETNPF)) * BNCNPDCT ",
          "linecol": [
            150,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DCTSPENP",
          "linecol": [
            150,
            1
          ]
        },
        "linecol": [
          150,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8690",
      "linecol": [
        143,
        7
      ]
    },
    "linecol": [
      143,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                155,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                155,
                23
              ]
            }
          ],
          "linecol": [
            155,
            15
          ]
        }
      ],
      "linecol": [
        155,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "((1-positif_ou_nul(NOCEPIMP+SPENETNPF)) * abs(NOCEPIMP+SPENETNPF) + positif_ou_nul(NOCEPIMP+SPENETNPF) * positif_ou_nul(DABNCNP5+DABNCNP4+DABNCNP3+DABNCNP2+DABNCNP1-NOCEPIMP-SPENETNPF) * (DABNCNP5+DABNCNP4+DABNCNP3+DABNCNP2+DABNCNP1-NOCEPIMP-SPENETNPF) * null(BNCDF6+BNCDF5+BNCDF4+BNCDF3+BNCDF2)) * (1-positif(ART1731BIS)) +  DEFBNCNPF * positif(ART1731BIS*(1-PREM8_11)) + (DNOCEP +DNOCEPC +DNOCEPP +BNCAADV +BNCAADC +BNCAADP) * positif(ART1731BIS*PREM8_11)",
          "linecol": [
            157,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNCDF1",
          "linecol": [
            157,
            1
          ]
        },
        "linecol": [
          157,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8691",
      "linecol": [
        154,
        7
      ]
    },
    "linecol": [
      154,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                166,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                166,
                23
              ]
            }
          ],
          "linecol": [
            166,
            15
          ]
        }
      ],
      "linecol": [
        166,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "((1-positif_ou_nul(NOCEPIMP+SPENETNPF)) * (DABNCNP1) + positif_ou_nul(NOCEPIMP+SPENETNPF) * min(max(NOCEPIMP+SPENETNPF-DABNCNP6-DABNCNP5-DABNCNP4-DABNCNP3-DABNCNP2,0)-DABNCNP1,DABNCNP1)*(-1) * positif_ou_nul(DABNCNP1-max(NOCEPIMP+SPENETNPF-DABNCNP6-DABNCNP5-DABNCNP4-DABNCNP3-DABNCNP2,0))) * (1-positif(ART1731BIS)) + min(DABNCNP1,DABNCNP - DIDABNCNP) * positif(ART1731BIS*(1-positif(PREM8_11+null(8-CMAJ)+null(11-CMAJ)))) + DABNCNP1 * positif(positif(ART1731BIS*PREM8_11)+null(8-CMAJ)+null(11-CMAJ))",
          "linecol": [
            167,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNCDF2",
          "linecol": [
            167,
            1
          ]
        },
        "linecol": [
          167,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "86911",
      "linecol": [
        165,
        7
      ]
    },
    "linecol": [
      165,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                177,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                177,
                23
              ]
            }
          ],
          "linecol": [
            177,
            15
          ]
        }
      ],
      "linecol": [
        177,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "((1 - positif_ou_nul(NOCEPIMP+SPENETNPF)) * (DABNCNP2) + positif_ou_nul(NOCEPIMP+SPENETNPF) * min(max(NOCEPIMP+SPENETNPF-DABNCNP6-DABNCNP5-DABNCNP4-DABNCNP3,0)-DABNCNP2,DABNCNP2)*(-1) * positif_ou_nul(DABNCNP2-max(NOCEPIMP+SPENETNPF-DABNCNP6-DABNCNP5-DABNCNP4-DABNCNP3,0))) * (1-positif(ART1731BIS)) + min(DABNCNP2,DABNCNP - DIDABNCNP-BNCDF2) * positif(ART1731BIS*(1-positif(PREM8_11+null(8-CMAJ)+null(11-CMAJ)))) + DABNCNP2 * positif(positif(ART1731BIS*PREM8_11)+null(8-CMAJ)+null(11-CMAJ))",
          "linecol": [
            178,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNCDF3",
          "linecol": [
            178,
            1
          ]
        },
        "linecol": [
          178,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "86912",
      "linecol": [
        176,
        7
      ]
    },
    "linecol": [
      176,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                186,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                186,
                23
              ]
            }
          ],
          "linecol": [
            186,
            15
          ]
        }
      ],
      "linecol": [
        186,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "((1 - positif_ou_nul(NOCEPIMP+SPENETNPF)) * (DABNCNP3) + positif_ou_nul(NOCEPIMP+SPENETNPF) * min(max(NOCEPIMP+SPENETNPF-DABNCNP6-DABNCNP5-DABNCNP4,0)-DABNCNP3,DABNCNP3)*(-1) * positif_ou_nul(DABNCNP3-max(NOCEPIMP+SPENETNPF-DABNCNP6-DABNCNP5-DABNCNP4,0))) * (1-positif(ART1731BIS)) + min(DABNCNP3,DABNCNP - DIDABNCNP-BNCDF2-BNCDF3) * positif(ART1731BIS*(1-positif(PREM8_11+null(8-CMAJ)+null(11-CMAJ)))) + DABNCNP3 * positif(positif(ART1731BIS*PREM8_11)+null(8-CMAJ)+null(11-CMAJ))",
          "linecol": [
            187,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNCDF4",
          "linecol": [
            187,
            1
          ]
        },
        "linecol": [
          187,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "86913",
      "linecol": [
        185,
        7
      ]
    },
    "linecol": [
      185,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                196,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                196,
                23
              ]
            }
          ],
          "linecol": [
            196,
            15
          ]
        }
      ],
      "linecol": [
        196,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "((1 - positif_ou_nul(NOCEPIMP+SPENETNPF)) * (DABNCNP4) + positif_ou_nul(NOCEPIMP+SPENETNPF) * min(max(NOCEPIMP+SPENETNPF-DABNCNP6-DABNCNP5,0)-DABNCNP4,DABNCNP4)*(-1) * positif_ou_nul(DABNCNP4-max(NOCEPIMP+SPENETNPF-DABNCNP6-DABNCNP5,0))) * (1-positif(ART1731BIS)) + min(DABNCNP4,DABNCNP - DIDABNCNP-BNCDF2-BNCDF3-BNCDF4) * positif(ART1731BIS*(1-positif(PREM8_11+null(8-CMAJ)+null(11-CMAJ)))) + DABNCNP4 * positif(positif(ART1731BIS*PREM8_11)+null(8-CMAJ)+null(11-CMAJ))",
          "linecol": [
            197,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNCDF5",
          "linecol": [
            197,
            1
          ]
        },
        "linecol": [
          197,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "86914",
      "linecol": [
        195,
        7
      ]
    },
    "linecol": [
      195,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                205,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                205,
                23
              ]
            }
          ],
          "linecol": [
            205,
            15
          ]
        }
      ],
      "linecol": [
        205,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "((1 - positif_ou_nul(NOCEPIMP+SPENETNPF)) * (DABNCNP5) + positif_ou_nul(NOCEPIMP+SPENETNPF) * min(max(NOCEPIMP+SPENETNPF-DABNCNP6,0)-DABNCNP5,DABNCNP5)*(-1) * positif_ou_nul(DABNCNP5-max(NOCEPIMP+SPENETNPF-DABNCNP6,0))) * (1-positif(ART1731BIS)) + min(DABNCNP5,DABNCNP - DIDABNCNP-BNCDF2-BNCDF3-BNCDF4-BNCDF5) * positif(ART1731BIS*(1-positif(PREM8_11+null(8-CMAJ)+null(11-CMAJ)))) + DABNCNP5 * positif(positif(ART1731BIS*PREM8_11)+null(8-CMAJ)+null(11-CMAJ))",
          "linecol": [
            206,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BNCDF6",
          "linecol": [
            206,
            1
          ]
        },
        "linecol": [
          206,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "86915",
      "linecol": [
        204,
        7
      ]
    },
    "linecol": [
      204,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                215,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                215,
                23
              ]
            }
          ],
          "linecol": [
            215,
            15
          ]
        }
      ],
      "linecol": [
        215,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "DABNCNP1 + DABNCNP2 + DABNCNP3 + DABNCNP4 + DABNCNP5 + DABNCNP6",
          "linecol": [
            216,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DABNCNP",
          "linecol": [
            216,
            1
          ]
        },
        "linecol": [
          216,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(DABNCNP,SPENETNPF + NOCEPIMP)",
          "linecol": [
            217,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VAREDABNCNP",
          "linecol": [
            217,
            1
          ]
        },
        "linecol": [
          217,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(NOCEPIMP+SPENETNPF+DIDABNCNP+DNOCEP+DNOCEPC+DNOCEPP+BNCAADV+BNCAADC+BNCAADP )",
          "linecol": [
            218,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEFBNCNP",
          "linecol": [
            218,
            1
          ]
        },
        "linecol": [
          218,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "DEFRIBNC * (1-PREM8_11) * max(0,min(DNOCEP+DNOCEPC+DNOCEPP+BNCAADV+BNCAADC+BNCAADP,-(max(DEFBNCNP1731,max(DEFBNCNP_P,DEFBNCNPP2))-DNOCEP-DNOCEPC-DNOCEPP-BNCAADV-BNCAADC-BNCAADP)))",
          "linecol": [
            219,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEFBNCNPF",
          "linecol": [
            219,
            1
          ]
        },
        "linecol": [
          219,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8692",
      "linecol": [
        214,
        7
      ]
    },
    "linecol": [
      214,
      1
    ]
  }
]
