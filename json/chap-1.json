[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      21,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      22,
      76
    ]
  },
  {
    "type": "comment",
    "value": "####   #    #    ##    #####      #     #####  #####   ######           ##",
    "linecol": [
      23,
      3
    ]
  },
  {
    "type": "comment",
    "value": "#    #  #    #   #  #   #    #     #       #    #    #  #               # #",
    "linecol": [
      24,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#       ######  #    #  #    #     #       #    #    #  #####             #",
    "linecol": [
      25,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#       #    #  ######  #####      #       #    #####   #                 #",
    "linecol": [
      26,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#    #  #    #  #    #  #          #       #    #   #   #                 #",
    "linecol": [
      27,
      2
    ]
  },
  {
    "type": "comment",
    "value": "####   #    #  #    #  #          #       #    #    #  ###### #######  #####",
    "linecol": [
      28,
      3
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      29,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      30,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      31,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      32,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      33,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#                         CALCUL DU NET A PAYER",
    "linecol": [
      34,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      35,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      36,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      37,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      38,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      39,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      40,
      2
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                42,
                15
              ]
            }
          ],
          "linecol": [
            42,
            15
          ]
        }
      ],
      "linecol": [
        42,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif( NAPI + 1 - SEUIL_12 ) +0",
          "linecol": [
            43,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RC1",
          "linecol": [
            43,
            1
          ]
        },
        "linecol": [
          43,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "101",
      "linecol": [
        41,
        7
      ]
    },
    "linecol": [
      41,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                45,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                45,
                22
              ]
            }
          ],
          "linecol": [
            45,
            15
          ]
        }
      ],
      "linecol": [
        45,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPTEMPCX-TOTIRPSANT",
          "linecol": [
            46,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPT",
          "linecol": [
            46,
            1
          ]
        },
        "linecol": [
          46,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - IRESTITIR",
          "linecol": [
            47,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPTIR",
          "linecol": [
            47,
            1
          ]
        },
        "linecol": [
          47,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1010",
      "linecol": [
        44,
        7
      ]
    },
    "linecol": [
      44,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                51,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                51,
                22
              ]
            }
          ],
          "linecol": [
            51,
            15
          ]
        }
      ],
      "linecol": [
        51,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(TOTIRCUM - NONMER -RECUMIR + NONREST) * positif(20 - V_NOTRAIT) + max(0, (TOTIRCUM - NONMER - RECUMIR+NONREST) - (V_TOTIRANT -V_NONMERANT - V_ANTREIR+V_NONRESTANT)) * positif_ou_nul(V_NOTRAIT-20)",
          "linecol": [
            52,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCOROLIR",
          "linecol": [
            52,
            1
          ]
        },
        "linecol": [
          52,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0, NAPCR61 - V_ANTCR)",
          "linecol": [
            54,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPCOROLCS",
          "linecol": [
            54,
            1
          ]
        },
        "linecol": [
          54,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10101",
      "linecol": [
        50,
        7
      ]
    },
    "linecol": [
      50,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                56,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                56,
                21
              ]
            }
          ],
          "linecol": [
            56,
            15
          ]
        }
      ],
      "linecol": [
        56,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si ( NAPINI - V_ANTIR - IRCUM_A + RECUMBIS >= SEUIL_12 ) alors (1) sinon (0) finsi",
          "linecol": [
            57,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RC1",
          "linecol": [
            57,
            1
          ]
        },
        "linecol": [
          57,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10111",
      "linecol": [
        55,
        7
      ]
    },
    "linecol": [
      55,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                62,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                62,
                23
              ]
            }
          ],
          "linecol": [
            62,
            15
          ]
        }
      ],
      "linecol": [
        62,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRB + PIR",
          "linecol": [
            63,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAVIMBIS",
          "linecol": [
            63,
            1
          ]
        },
        "linecol": [
          63,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(max(0,max(ID11-ADO1,IMI)-RED) + ITP + REI + PIR) * V_CR2",
          "linecol": [
            64,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAVIMO",
          "linecol": [
            64,
            1
          ]
        },
        "linecol": [
          64,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1013",
      "linecol": [
        61,
        7
      ]
    },
    "linecol": [
      61,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                67,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                67,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                67,
                32
              ]
            }
          ],
          "linecol": [
            67,
            15
          ]
        }
      ],
      "linecol": [
        67,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "( IRD + PIRD - IRANT ) + TAXASSUR + IPCAPTAXT + IHAUTREVT + TAXLOY + RASAR * V_CR2",
          "linecol": [
            68,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPI",
          "linecol": [
            68,
            1
          ]
        },
        "linecol": [
          68,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1012",
      "linecol": [
        66,
        7
      ]
    },
    "linecol": [
      66,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                75,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                75,
                23
              ]
            }
          ],
          "linecol": [
            75,
            15
          ]
        }
      ],
      "linecol": [
        75,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "inf( MOISAN / 10000 )",
          "linecol": [
            76,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INTMS",
          "linecol": [
            76,
            1
          ]
        },
        "linecol": [
          76,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(( MOISAN/10000 - INTMS )*10000)  * present(MOISAN)",
          "linecol": [
            77,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INTAN",
          "linecol": [
            77,
            1
          ]
        },
        "linecol": [
          77,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif(2006-arr(INTAN))*max(0, (INTAN - (V_ANREV+1) )* 12 + INTMS - 6 ) * TXMOISRETARD + positif_ou_nul(V_ANREV-2006)*max(0, (INTAN - (V_ANREV+1) )* 12 + INTMS - 6 ) * TXMOISRETARD2 + (1-positif(2006-arr(INTAN)))*(1-positif_ou_nul(V_ANREV-2006)) * (((2006 - (V_ANREV+1))*12 - 6) * (TXMOISRETARD * positif(2006 - (V_ANREV+1)) + TXMOISRETARD2 * null(2006-(V_ANREV+1))) + ((INTAN - 2006)*12 + INTMS) * TXMOISRETARD2) ) * present(MOISAN)",
          "linecol": [
            78,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TXINT",
          "linecol": [
            78,
            1
          ]
        },
        "linecol": [
          78,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (CMAJ = 7 ou CMAJ = 10 ou CMAJ = 17 ou CMAJ = 18) alors (10) sinon ( si (CMAJ = 8 ou CMAJ = 11) alors (40) sinon (80) finsi ) finsi",
          "linecol": [
            85,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "COPETO",
          "linecol": [
            85,
            1
          ]
        },
        "linecol": [
          85,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "104114",
      "linecol": [
        74,
        7
      ]
    },
    "linecol": [
      74,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                94,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                94,
                23
              ]
            }
          ],
          "linecol": [
            94,
            15
          ]
        }
      ],
      "linecol": [
        94,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CSG + RDSN + PRS + BREGV + CVNSALC + CDIS + CGLOA + RSE1N  + RSE2N + RSE3N + RSE4N + RSE5N)",
          "linecol": [
            95,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSTOTSSPENA",
          "linecol": [
            95,
            1
          ]
        },
        "linecol": [
          95,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BTO * COPETO / 100) + arr(BTO * COPETO /100) * positif(null(CMAJ-10)+null(CMAJ-17)) + arr((BTOINR) * TXINT / 100)",
          "linecol": [
            96,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOIR",
          "linecol": [
            96,
            1
          ]
        },
        "linecol": [
          96,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "( arr(max(0,PRS-PRSPROV) * COPETO / 100) + arr(max(0,PRS-PRSPROV-PS9YP) * TXINT / 100) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            99,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOPRS",
          "linecol": [
            99,
            1
          ]
        },
        "linecol": [
          99,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "( arr(max(0,CSG-CSGIM) * COPETO / 100) + arr(max(0,CSG-CSGIM-CS9YP) * TXINT / 100) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            101,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOCSG",
          "linecol": [
            101,
            1
          ]
        },
        "linecol": [
          101,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(max(0,RSE1 -CIRSE1 -CSPROVYD) * COPETO / 100) + arr(max(0,RSE1 -CIRSE1 -CSPROVYD-RSE19YP) * TXINT / 100) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            104,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTORSE1",
          "linecol": [
            104,
            1
          ]
        },
        "linecol": [
          104,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(max(0,RSE2 -CIRSE2 -CSPROVRSE2) * COPETO / 100) + arr(max(0,RSE2 -CIRSE2 -CSPROVRSE2-RSE29YP) * TXINT / 100) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            108,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTORSE2",
          "linecol": [
            108,
            1
          ]
        },
        "linecol": [
          108,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(max(0,RSE3 -CIRSE3 -CSPROVYG) * COPETO / 100) + arr(max(0,RSE3 -CIRSE3 -CSPROVYG-RSE39YP) * TXINT / 100) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            112,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTORSE3",
          "linecol": [
            112,
            1
          ]
        },
        "linecol": [
          112,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(max(0,RSE4 -CIRSE4 -CSPROVRSE4) * COPETO / 100) + arr(max(0,RSE4 -CIRSE4 -CSPROVRSE4-RSE49YP) * TXINT / 100) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            116,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTORSE4",
          "linecol": [
            116,
            1
          ]
        },
        "linecol": [
          116,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(max(0,RSE5 -CIRSE5 -CSPROVYE) * COPETO / 100) + arr(max(0,RSE5 -CIRSE5 -CSPROVYE-RSE59YP) * TXINT / 100) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            120,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTORSE5",
          "linecol": [
            120,
            1
          ]
        },
        "linecol": [
          120,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(BREGV  * COPETO / 100) + arr(max(0,BREGV-REGV9YP) * TXINT / 100)) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            124,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOREGV",
          "linecol": [
            124,
            1
          ]
        },
        "linecol": [
          124,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "( arr(max(0,RDSN-CRDSIM) * COPETO / 100) + arr(max(0,RDSN-CRDSIM-RD9YP) * TXINT / 100) ) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            125,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTORDS",
          "linecol": [
            125,
            1
          ]
        },
        "linecol": [
          125,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(max(0,TAXASSUR- min(TAXASSUR+0,max(0,INE-IRB+AVFISCOPTER))+min(0,IRN - IRANT)) * COPETO / 100) + arr(max(0,TAXASSUR- min(TAXASSUR+0,max(0,INE-IRB+AVFISCOPTER))+min(0,IRN - IRANT)) * COPETO /100) * positif(null(CMAJ-10)+null(CMAJ-17)) + arr(max(0,TAXASSUR- min(TAXASSUR+0,max(0,INE-IRB+AVFISCOPTER))+min(0,IRN - IRANT)-TAXA9YI) * TXINT / 100)",
          "linecol": [
            127,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOTAXA",
          "linecol": [
            127,
            1
          ]
        },
        "linecol": [
          127,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(max(0,IPCAPTAXT- min(IPCAPTAXT+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR))+min(0,IRN - IRANT+TAXASSUR)) * COPETO / 100) + arr(max(0,IPCAPTAXT- min(IPCAPTAXT+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR))+min(0,IRN - IRANT+TAXASSUR)) * COPETO /100) * positif(null(CMAJ-10)+null(CMAJ-17)) + arr(max(0,IPCAPTAXT- min(IPCAPTAXT+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR))+min(0,IRN - IRANT+TAXASSUR)-CAP9YI) * TXINT / 100)",
          "linecol": [
            130,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOTPCAP",
          "linecol": [
            130,
            1
          ]
        },
        "linecol": [
          130,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(max(0,TAXLOY- min(TAXLOY+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR-IPCAPTAXT))+min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT)) * COPETO / 100) + arr(max(0,TAXLOY- min(TAXLOY+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR-IPCAPTAXT))+min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT)) * COPETO /100) * positif(null(CMAJ-10)+null(CMAJ-17)) + arr(max(0,TAXLOY- min(TAXLOY+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR-IPCAPTAXT))+min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT)-LOY9YI) * TXINT / 100)",
          "linecol": [
            133,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOTLOY",
          "linecol": [
            133,
            1
          ]
        },
        "linecol": [
          133,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(max(0,IHAUTREVT+min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT+TAXLOY)) * COPETO / 100) + arr(max(0,IHAUTREVT+min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT+TAXLOY)) * COPETO /100) * positif(null(CMAJ-10)+null(CMAJ-17)) + arr(max(0,IHAUTREVT+min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT+TAXLOY)-CHR9YI) * TXINT / 100)",
          "linecol": [
            137,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOTCHR",
          "linecol": [
            137,
            1
          ]
        },
        "linecol": [
          137,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(max(0,CVNSALC - COD8YT) * COPETO / 100) + arr(max(0,CVNSALC - COD8YT-CVN9YP) * TXINT / 100)) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            141,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOCVN",
          "linecol": [
            141,
            1
          ]
        },
        "linecol": [
          141,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(max(0,CDIS-CDISPROV) * COPETO / 100) + arr(max(0,CDISC-CDISPROV-CDIS9YP) * TXINT / 100)) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            144,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOCDIS",
          "linecol": [
            144,
            1
          ]
        },
        "linecol": [
          144,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(max(0,CGLOA-COD8YL) * COPETO / 100) + arr(max(0,CGLOA-COD8YL-GLO9YP) * TXINT / 100)) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)",
          "linecol": [
            147,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOGLOA",
          "linecol": [
            147,
            1
          ]
        },
        "linecol": [
          147,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1041140",
      "linecol": [
        93,
        7
      ]
    },
    "linecol": [
      93,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                152,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                152,
                23
              ]
            }
          ],
          "linecol": [
            152,
            15
          ]
        }
      ],
      "linecol": [
        152,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max( 0 ,IRN-IRANT) + max(0,TAXASSUR- min(TAXASSUR+0,max(0,INE-IRB+AVFISCOPTER))+min(0,IRN - IRANT)) + max(0,IPCAPTAXT- min(IPCAPTAXT+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR))+min(0,IRN - IRANT+TAXASSUR)) + max(0,TAXLOY- min(TAXLOY+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR-IPCAPTAXT)) +min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT)) + max(0,IHAUTREVT+min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT+TAXLOY))",
          "linecol": [
            153,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BINRIR",
          "linecol": [
            153,
            1
          ]
        },
        "linecol": [
          153,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CSG-CSGIM)+ max(0,RDSN-CRDSIM) + max(0,PRS-PRSPROV) + max(0,CVNSALC - COD8YT) + max(0,CDIS - CDISPROV) + max(0,CGLOA-COD8YL) + max(0,RSE1-CSPROVYD) + max(0,RSE2-CSPROVRSE2) + max(0,RSE3-CSPROVYG) + max(0,RSE4-CSPROVRSE4) + max(0,RSE5-CSPROVYE)+BREGV",
          "linecol": [
            158,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BINRPS",
          "linecol": [
            158,
            1
          ]
        },
        "linecol": [
          158,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(ACODELAISINR * BINRIR/(BINRIR+BINRPS))",
          "linecol": [
            161,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VAR9YIIR",
          "linecol": [
            161,
            1
          ]
        },
        "linecol": [
          161,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,ACODELAISINR - VAR9YIIR)",
          "linecol": [
            162,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VAR9YIPS",
          "linecol": [
            162,
            1
          ]
        },
        "linecol": [
          162,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(VAR9YIIR * max( 0 , IRN - IRANT )/BINRIR)",
          "linecol": [
            163,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IR9YI",
          "linecol": [
            163,
            1
          ]
        },
        "linecol": [
          163,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IPCAPTAXT + TAXLOY + IHAUTREVT) * arr(VAR9YIIR * max(0,TAXASSUR- min(TAXASSUR+0,max(0,INE-IRB+AVFISCOPTER))+min(0,IRN - IRANT))/BINRIR) + (1-positif(IPCAPTAXT + TAXLOY + IHAUTREVT)) * max(0,VAR9YIIR - IR9YI)",
          "linecol": [
            164,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXA9YI",
          "linecol": [
            164,
            1
          ]
        },
        "linecol": [
          164,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(TAXLOY + IHAUTREVT) * arr(VAR9YIIR * max(0,IPCAPTAXT- min(IPCAPTAXT+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR))+min(0,IRN - IRANT+TAXASSUR))/BINRIR) + (1-positif(TAXLOY + IHAUTREVT)) * max(0,VAR9YIIR - IR9YI - TAXA9YI)",
          "linecol": [
            166,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CAP9YI",
          "linecol": [
            166,
            1
          ]
        },
        "linecol": [
          166,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IHAUTREVT) * arr(VAR9YIIR * max(0,TAXLOY- min(TAXLOY+0,max(0,INE-IRB+AVFISCOPTER-TAXASSUR-IPCAPTAXT)) +min(0,IRN - IRANT+TAXASSUR+IPCAPTAXT))/BINRIR) +(1-positif(IHAUTREVT)) *  max(0,VAR9YIIR - IR9YI - TAXA9YI - CAP9YI)",
          "linecol": [
            168,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LOY9YI",
          "linecol": [
            168,
            1
          ]
        },
        "linecol": [
          168,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,VAR9YIIR -IR9YI-TAXA9YI-CAP9YI-LOY9YI)",
          "linecol": [
            171,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHR9YI",
          "linecol": [
            171,
            1
          ]
        },
        "linecol": [
          171,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(RDSN+PRS + CVNSALC+CDIS+CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV) * arr(VAR9YIPS * (CSG-CSGIM)/BINRPS) + (1-positif(RDSN+PRS + CVNSALC+CDIS+CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV)) * VAR9YIPS",
          "linecol": [
            172,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CS9YP",
          "linecol": [
            172,
            1
          ]
        },
        "linecol": [
          172,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(PRS + CVNSALC+CDIS+CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV) * arr(VAR9YIPS * (RDSN-CRDSIM)/BINRPS) + (1-positif(PRS + CVNSALC+CDIS+CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV)) * max(0,VAR9YIPS-CS9YP)",
          "linecol": [
            174,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RD9YP",
          "linecol": [
            174,
            1
          ]
        },
        "linecol": [
          174,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(CVNSALC+CDIS+CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV) * arr(VAR9YIPS * (PRS-PRSPROV)/BINRPS) + (1-positif(CVNSALC+CDIS+CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV)) * max(0,VAR9YIPS-CS9YP-RD9YP)",
          "linecol": [
            176,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PS9YP",
          "linecol": [
            176,
            1
          ]
        },
        "linecol": [
          176,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(CDIS+CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV) * arr(VAR9YIPS * (CVNSALC - COD8YT)/BINRPS) +(1-positif(CDIS+CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV)) * max(0,VAR9YIPS-CS9YP-RD9YP-PS9YP)",
          "linecol": [
            178,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CVN9YP",
          "linecol": [
            178,
            1
          ]
        },
        "linecol": [
          178,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV) * arr(VAR9YIPS * (CDIS - CDISPROV)/BINRPS) +(1-positif(CGLOA+RSE1+RSE2+RSE3+RSE4+RSE5+BREGV)) * max(0,VAR9YIPS-CS9YP-RD9YP-PS9YP-CVN9YP)",
          "linecol": [
            180,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CDIS9YP",
          "linecol": [
            180,
            1
          ]
        },
        "linecol": [
          180,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(RSE1+RSE2+RSE3+RSE4+RSE5+BREGV) * arr(VAR9YIPS * (CGLOA-COD8YL) /BINRPS) +(1-positif(RSE1+RSE2+RSE3+RSE4+RSE5+BREGV)) * max(0,VAR9YIPS-CS9YP-RD9YP-PS9YP-CVN9YP-CDIS9YP)",
          "linecol": [
            182,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLO9YP",
          "linecol": [
            182,
            1
          ]
        },
        "linecol": [
          182,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(RSE2+RSE3+RSE4+RSE5+BREGV) * arr(VAR9YIPS * (RSE1-CSPROVYD)/BINRPS) +(1-positif(RSE2+RSE3+RSE4+RSE5+BREGV)) * max(0,VAR9YIPS-CS9YP-RD9YP-PS9YP-CVN9YP-CDIS9YP-GLO9YP)",
          "linecol": [
            184,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE19YP",
          "linecol": [
            184,
            1
          ]
        },
        "linecol": [
          184,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(RSE3+RSE4+RSE5+BREGV) * arr(VAR9YIPS * (RSE2-CSPROVRSE2)/BINRPS) +(1-positif(RSE3+RSE4+RSE5+BREGV)) * max(0,VAR9YIPS-CS9YP-RD9YP-PS9YP-CVN9YP-CDIS9YP-GLO9YP-RSE19YP)",
          "linecol": [
            186,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE29YP",
          "linecol": [
            186,
            1
          ]
        },
        "linecol": [
          186,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(RSE4+RSE5+BREGV) * arr(VAR9YIPS * (RSE3-CSPROVYG)/BINRPS) +(1-positif(RSE4+RSE5+BREGV)) * max(0,VAR9YIPS-CS9YP-RD9YP-PS9YP-CVN9YP-CDIS9YP-GLO9YP-RSE19YP-RSE29YP)",
          "linecol": [
            188,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE39YP",
          "linecol": [
            188,
            1
          ]
        },
        "linecol": [
          188,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(RSE5+BREGV) * arr(VAR9YIPS * (RSE4-CSPROVRSE4)/BINRPS) +(1-positif(RSE5+BREGV)) * max(0,VAR9YIPS-CS9YP-RD9YP-PS9YP-CVN9YP-CDIS9YP-GLO9YP-RSE19YP-RSE29YP-RSE39YP)",
          "linecol": [
            190,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE49YP",
          "linecol": [
            190,
            1
          ]
        },
        "linecol": [
          190,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(BREGV) * arr(VAR9YIPS * (RSE5-CSPROVYE)/BINRPS) +(1-positif(BREGV)) * max(0,VAR9YIPS-CS9YP-RD9YP-PS9YP-CVN9YP-CDIS9YP-GLO9YP-RSE19YP-RSE29YP-RSE39YP-RSE49YP)",
          "linecol": [
            192,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE59YP",
          "linecol": [
            192,
            1
          ]
        },
        "linecol": [
          192,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,VAR9YIPS-CS9YP-RD9YP-PS9YP-CVN9YP-CDIS9YP-GLO9YP-RSE19YP-RSE29YP-RSE39YP-RSE49YP-RSE59YP )",
          "linecol": [
            194,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REGV9YP",
          "linecol": [
            194,
            1
          ]
        },
        "linecol": [
          194,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max( 0 , IRN - IRANT ) * positif( IAMD1 + 1 - SEUIL_61 )",
          "linecol": [
            195,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BTO",
          "linecol": [
            195,
            1
          ]
        },
        "linecol": [
          195,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max( 0 , IRN - IR9YI - IRANT ) * positif( IAMD1 + 1 - SEUIL_61 )",
          "linecol": [
            197,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BTOINR",
          "linecol": [
            197,
            1
          ]
        },
        "linecol": [
          197,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1041141",
      "linecol": [
        151,
        7
      ]
    },
    "linecol": [
      151,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                199,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                199,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                199,
                32
              ]
            }
          ],
          "linecol": [
            199,
            15
          ]
        }
      ],
      "linecol": [
        199,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRN * (positif(5 - V_IND_TRAIT) + (1-positif(5-V_IND_TRAIT)) * ( positif_ou_nul(IRN+PIR-SEUIL_12) + (1 - positif(IRN + PIR)) ))",
          "linecol": [
            200,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRD",
          "linecol": [
            200,
            1
          ]
        },
        "linecol": [
          200,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10211",
      "linecol": [
        198,
        7
      ]
    },
    "linecol": [
      198,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                207,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                207,
                23
              ]
            }
          ],
          "linecol": [
            207,
            15
          ]
        }
      ],
      "linecol": [
        207,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPPS - V_PSANT",
          "linecol": [
            209,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRSD",
          "linecol": [
            209,
            1
          ]
        },
        "linecol": [
          209,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPCS - V_CSANT",
          "linecol": [
            211,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSGD",
          "linecol": [
            211,
            1
          ]
        },
        "linecol": [
          211,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPRD - V_RDANT",
          "linecol": [
            213,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDSD",
          "linecol": [
            213,
            1
          ]
        },
        "linecol": [
          213,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPCVN - V_CVNANT",
          "linecol": [
            215,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CVND",
          "linecol": [
            215,
            1
          ]
        },
        "linecol": [
          215,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPREGV - V_REGVANT",
          "linecol": [
            217,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REGVD",
          "linecol": [
            217,
            1
          ]
        },
        "linecol": [
          217,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPGLOA - V_GLOANT",
          "linecol": [
            219,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CGLOAD",
          "linecol": [
            219,
            1
          ]
        },
        "linecol": [
          219,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPCDIS - V_CDISANT",
          "linecol": [
            221,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CDISD",
          "linecol": [
            221,
            1
          ]
        },
        "linecol": [
          221,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPRSE1 - V_RSE1ANT",
          "linecol": [
            222,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRSE1D",
          "linecol": [
            222,
            1
          ]
        },
        "linecol": [
          222,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPRSE2 - V_RSE2ANT",
          "linecol": [
            223,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRSE2D",
          "linecol": [
            223,
            1
          ]
        },
        "linecol": [
          223,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPRSE3 - V_RSE3ANT",
          "linecol": [
            224,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRSE3D",
          "linecol": [
            224,
            1
          ]
        },
        "linecol": [
          224,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPRSE4 - V_RSE4ANT",
          "linecol": [
            225,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRSE4D",
          "linecol": [
            225,
            1
          ]
        },
        "linecol": [
          225,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NAPRSE5 - V_RSE5ANT",
          "linecol": [
            226,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRSE5D",
          "linecol": [
            226,
            1
          ]
        },
        "linecol": [
          226,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10213",
      "linecol": [
        206,
        7
      ]
    },
    "linecol": [
      206,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                229,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                229,
                21
              ]
            }
          ],
          "linecol": [
            229,
            15
          ]
        }
      ],
      "linecol": [
        229,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CSGC - CICSG)",
          "linecol": [
            230,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSGAC",
          "linecol": [
            230,
            1
          ]
        },
        "linecol": [
          230,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(CSGC + PCSG - CICSG - CSGIM))",
          "linecol": [
            231,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSNET",
          "linecol": [
            231,
            1
          ]
        },
        "linecol": [
          231,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RDSC - CIRDS)",
          "linecol": [
            233,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDSAC",
          "linecol": [
            233,
            1
          ]
        },
        "linecol": [
          233,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(RDSC + PRDS - CIRDS - CRDSIM))",
          "linecol": [
            234,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDNET",
          "linecol": [
            234,
            1
          ]
        },
        "linecol": [
          234,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(PRSC + PPRS - CIPRS - PRSPROV))",
          "linecol": [
            236,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRSNET",
          "linecol": [
            236,
            1
          ]
        },
        "linecol": [
          236,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CVNSALC",
          "linecol": [
            238,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CVNAC",
          "linecol": [
            238,
            1
          ]
        },
        "linecol": [
          238,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(CVNSALC + PCVN - COD8YT))",
          "linecol": [
            239,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CVNNET",
          "linecol": [
            239,
            1
          ]
        },
        "linecol": [
          239,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BREGV + PREGV",
          "linecol": [
            241,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REGVNET",
          "linecol": [
            241,
            1
          ]
        },
        "linecol": [
          241,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CDISC",
          "linecol": [
            243,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CDISAC",
          "linecol": [
            243,
            1
          ]
        },
        "linecol": [
          243,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(CDISC + PCDIS - CDISPROV))",
          "linecol": [
            244,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CDISNET",
          "linecol": [
            244,
            1
          ]
        },
        "linecol": [
          244,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CGLOA",
          "linecol": [
            245,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CGLOAAC",
          "linecol": [
            245,
            1
          ]
        },
        "linecol": [
          245,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(CGLOA + PGLOA-COD8YL ))",
          "linecol": [
            246,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CGLOANET",
          "linecol": [
            246,
            1
          ]
        },
        "linecol": [
          246,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10214",
      "linecol": [
        228,
        7
      ]
    },
    "linecol": [
      228,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                248,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                248,
                21
              ]
            }
          ],
          "linecol": [
            248,
            15
          ]
        }
      ],
      "linecol": [
        248,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE1 - CIRSE1)",
          "linecol": [
            250,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE1AC",
          "linecol": [
            250,
            1
          ]
        },
        "linecol": [
          250,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(RSE1 + PRSE1 - CIRSE1 - CSPROVYD))",
          "linecol": [
            251,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE1NET",
          "linecol": [
            251,
            1
          ]
        },
        "linecol": [
          251,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE2 - CIRSE2)",
          "linecol": [
            253,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE2AC",
          "linecol": [
            253,
            1
          ]
        },
        "linecol": [
          253,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0, RSE8TV - CIRSE8TV - CSPROVYF) + max(0, RSE8SA - CIRSE8SA - CSPROVYN) + PRSE2",
          "linecol": [
            254,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE2NET",
          "linecol": [
            254,
            1
          ]
        },
        "linecol": [
          254,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE3 - CIRSE3 )",
          "linecol": [
            256,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE3AC",
          "linecol": [
            256,
            1
          ]
        },
        "linecol": [
          256,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(RSE3 + PRSE3 - CIRSE3 - CSPROVYG))",
          "linecol": [
            257,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE3NET",
          "linecol": [
            257,
            1
          ]
        },
        "linecol": [
          257,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE4 - CIRSE4 )",
          "linecol": [
            259,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE4AC",
          "linecol": [
            259,
            1
          ]
        },
        "linecol": [
          259,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0, RSE8TX - CIRSE8TX - CSPROVYH) + max(0, RSE8SB - CIRSE8SB - CSPROVYP) + PRSE4",
          "linecol": [
            260,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE4NET",
          "linecol": [
            260,
            1
          ]
        },
        "linecol": [
          260,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE5 - CIRSE5)",
          "linecol": [
            262,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE5AC",
          "linecol": [
            262,
            1
          ]
        },
        "linecol": [
          262,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(RSE5 + PRSE5 - CIRSE5 - CSPROVYE))",
          "linecol": [
            263,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE5NET",
          "linecol": [
            263,
            1
          ]
        },
        "linecol": [
          263,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RSE1NET + RSE2NET + RSE3NET + RSE4NET + RSE5NET",
          "linecol": [
            265,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSENETTOT",
          "linecol": [
            265,
            1
          ]
        },
        "linecol": [
          265,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "102141",
      "linecol": [
        247,
        7
      ]
    },
    "linecol": [
      247,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                267,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                267,
                21
              ]
            }
          ],
          "linecol": [
            267,
            15
          ]
        }
      ],
      "linecol": [
        267,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CSGC + PCSG - CICSG - CSGIM +RDSC + PRDS - CIRDS - CRDSIM+ PRSC + PPRS - CIPRS - PRSPROV + CVNSALC + PCVN - COD8YT + BREGV + PREGV +CDISC + PCDIS - CDISPROV + CGLOA + PGLOA - COD8YL +RSE1 + PRSE1+RSE2 + PRSE2+ RSE3 + PRSE3+RSE4 + PRSE4+ RSE5 + PRSE5 - CIRSE1 - CSPROVYD - CIRSE5 - CSPROVYE - CIRSE2 - CSPROVRSE2 - CIRSE3 - CSPROVYG - CIRSE4 - CSPROVRSE4)",
          "linecol": [
            268,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTCRBRUT",
          "linecol": [
            268,
            1
          ]
        },
        "linecol": [
          268,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CSNET+ RDNET+ PRSNET+ CVNNET+ REGVNET +CDISNET+CGLOANET+ RSE1NET+ RSE2NET+ RSE3NET+ RSE4NET+ RSE5NET",
          "linecol": [
            273,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTCRNET",
          "linecol": [
            273,
            1
          ]
        },
        "linecol": [
          273,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "102142",
      "linecol": [
        266,
        7
      ]
    },
    "linecol": [
      266,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                275,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                275,
                23
              ]
            }
          ],
          "linecol": [
            275,
            15
          ]
        }
      ],
      "linecol": [
        275,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IAR - IAR_A",
          "linecol": [
            277,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IARD",
          "linecol": [
            277,
            1
          ]
        },
        "linecol": [
          277,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10201",
      "linecol": [
        274,
        7
      ]
    },
    "linecol": [
      274,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                280,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                280,
                23
              ]
            }
          ],
          "linecol": [
            280,
            16
          ]
        }
      ],
      "linecol": [
        280,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PIR * (positif(5 - V_IND_TRAIT) + (1-positif(5-V_IND_TRAIT)) * ( positif_ou_nul(IRN+PIR-SEUIL_12) + (1-positif(IRN+PIR)) )) - PIR_A * ( positif_ou_nul(PIR_A-SEUIL_12) + (1-positif(PIR_A)) )",
          "linecol": [
            281,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PIRD",
          "linecol": [
            281,
            1
          ]
        },
        "linecol": [
          281,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPRS * CSREC - PPRS_A * CSRECA",
          "linecol": [
            293,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPRSD",
          "linecol": [
            293,
            1
          ]
        },
        "linecol": [
          293,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PCSG* CSREC - PCSG_A * CSRECA",
          "linecol": [
            294,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PCSGD",
          "linecol": [
            294,
            1
          ]
        },
        "linecol": [
          294,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PRDS * CSREC - PRDS_A * CSRECA",
          "linecol": [
            295,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRDSD",
          "linecol": [
            295,
            1
          ]
        },
        "linecol": [
          295,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PIRD",
          "linecol": [
            296,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PTOTD",
          "linecol": [
            296,
            1
          ]
        },
        "linecol": [
          296,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1041",
      "linecol": [
        279,
        7
      ]
    },
    "linecol": [
      279,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                298,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                298,
                23
              ]
            }
          ],
          "linecol": [
            298,
            15
          ]
        }
      ],
      "linecol": [
        298,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(RDRFPS * (1-null(4-V_REGCO)) + (COD8XK + COD8YK + RDRV + RDRCM + RDNP + RDNCP + RDPTP + ESFP + R1649 + PREREV) * (1-V_CNR)) * (1 - positif( present(RE168) + present(TAX1649))) + (RE168 + TAX1649) * (1-V_CNR)",
          "linecol": [
            300,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BPRS",
          "linecol": [
            300,
            1
          ]
        },
        "linecol": [
          300,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(RDRFAPS * (1-null(4-V_REGCO)) + (RDRVAPS + RDRCMAPS + RDNP + ESFP + R1649 + PREREV) * (1-V_CNR)) * (1 - positif( present(RE168) + present(TAX1649))) + (RE168 + TAX1649) * (1-V_CNR)",
          "linecol": [
            305,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BPRSAPS",
          "linecol": [
            305,
            1
          ]
        },
        "linecol": [
          305,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "114",
      "linecol": [
        297,
        7
      ]
    },
    "linecol": [
      297,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                312,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                312,
                23
              ]
            }
          ],
          "linecol": [
            312,
            15
          ]
        }
      ],
      "linecol": [
        312,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( BPRS * T_PREL_SOC /100 ) * (1 - positif(ANNUL2042))",
          "linecol": [
            313,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRSC",
          "linecol": [
            313,
            1
          ]
        },
        "linecol": [
          313,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( BPRSAPS * T_PREL_SOC /100 ) * (1 - positif(ANNUL2042))",
          "linecol": [
            314,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRSCAPS",
          "linecol": [
            314,
            1
          ]
        },
        "linecol": [
          314,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "113",
      "linecol": [
        311,
        7
      ]
    },
    "linecol": [
      311,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                316,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                316,
                23
              ]
            }
          ],
          "linecol": [
            316,
            15
          ]
        }
      ],
      "linecol": [
        316,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,PRSC - CIPRS)",
          "linecol": [
            317,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRS",
          "linecol": [
            317,
            1
          ]
        },
        "linecol": [
          317,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PRSCAPS - CIPRSAPS",
          "linecol": [
            318,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRSAPS",
          "linecol": [
            318,
            1
          ]
        },
        "linecol": [
          318,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "103103",
      "linecol": [
        315,
        7
      ]
    },
    "linecol": [
      315,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                320,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                320,
                23
              ]
            }
          ],
          "linecol": [
            320,
            15
          ]
        }
      ],
      "linecol": [
        320,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( BCSG * T_CSG / 100) * (1 - positif(ANNUL2042))",
          "linecol": [
            321,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSGC",
          "linecol": [
            321,
            1
          ]
        },
        "linecol": [
          321,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( BCSGAPS * T_CSG / 100) * (1 - positif(ANNUL2042))",
          "linecol": [
            322,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSGCAPS",
          "linecol": [
            322,
            1
          ]
        },
        "linecol": [
          322,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1031",
      "linecol": [
        319,
        7
      ]
    },
    "linecol": [
      319,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                324,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                324,
                23
              ]
            }
          ],
          "linecol": [
            324,
            15
          ]
        }
      ],
      "linecol": [
        324,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BRSE1 * TXTQ/100) * (1 - positif(ANNUL2042))",
          "linecol": [
            326,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE1",
          "linecol": [
            326,
            1
          ]
        },
        "linecol": [
          326,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "ALLECS * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            328,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSE8TV",
          "linecol": [
            328,
            1
          ]
        },
        "linecol": [
          328,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COD8SA * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            329,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSE8SA",
          "linecol": [
            329,
            1
          ]
        },
        "linecol": [
          329,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BRSE8TV * TXTV/100) * (1 - positif(ANNUL2042)) + arr(BRSE8SA * TXTV/100) * (1 - positif(ANNUL2042))",
          "linecol": [
            330,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE2",
          "linecol": [
            330,
            1
          ]
        },
        "linecol": [
          330,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BRSE3 * TXTW/100) * (1 - positif(ANNUL2042))",
          "linecol": [
            333,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE3",
          "linecol": [
            333,
            1
          ]
        },
        "linecol": [
          333,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PENECS * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            335,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSE8TX",
          "linecol": [
            335,
            1
          ]
        },
        "linecol": [
          335,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COD8SB * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            336,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSE8SB",
          "linecol": [
            336,
            1
          ]
        },
        "linecol": [
          336,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BRSE8TX * TXTX/100) * (1 - positif(ANNUL2042)) + arr(BRSE8SB * TXTX/100) * (1 - positif(ANNUL2042))",
          "linecol": [
            337,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE4",
          "linecol": [
            337,
            1
          ]
        },
        "linecol": [
          337,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BRSE5 * TX075/100) * (1 - positif(ANNUL2042))",
          "linecol": [
            340,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE5",
          "linecol": [
            340,
            1
          ]
        },
        "linecol": [
          340,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RSE1 + RSE2 + RSE3 + RSE4 + RSE5",
          "linecol": [
            342,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSETOT",
          "linecol": [
            342,
            1
          ]
        },
        "linecol": [
          342,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "103101",
      "linecol": [
        323,
        7
      ]
    },
    "linecol": [
      323,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                346,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                346,
                23
              ]
            }
          ],
          "linecol": [
            346,
            15
          ]
        }
      ],
      "linecol": [
        346,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CSGC - CICSG)",
          "linecol": [
            347,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSG",
          "linecol": [
            347,
            1
          ]
        },
        "linecol": [
          347,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CSGCAPS - CICSGAPS)",
          "linecol": [
            348,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSGAPS",
          "linecol": [
            348,
            1
          ]
        },
        "linecol": [
          348,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE1 - CIRSE1)",
          "linecol": [
            349,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE1N",
          "linecol": [
            349,
            1
          ]
        },
        "linecol": [
          349,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE2  - CIRSE2)",
          "linecol": [
            350,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE2N",
          "linecol": [
            350,
            1
          ]
        },
        "linecol": [
          350,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE3 - CIRSE3)",
          "linecol": [
            351,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE3N",
          "linecol": [
            351,
            1
          ]
        },
        "linecol": [
          351,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE4  - CIRSE4)",
          "linecol": [
            352,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE4N",
          "linecol": [
            352,
            1
          ]
        },
        "linecol": [
          352,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,RSE5 - CIRSE5)",
          "linecol": [
            353,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE5N",
          "linecol": [
            353,
            1
          ]
        },
        "linecol": [
          353,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1031011",
      "linecol": [
        345,
        7
      ]
    },
    "linecol": [
      345,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                356,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                356,
                23
              ]
            }
          ],
          "linecol": [
            356,
            15
          ]
        }
      ],
      "linecol": [
        356,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , RFCF + RFMIC - MICFR - RFDANT) * (1 - positif(ART1731BIS)) + max(0 , RFCF + RFMIC - MICFR + DEFRF4BC)  * positif(ART1731BIS)",
          "linecol": [
            357,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRF",
          "linecol": [
            357,
            1
          ]
        },
        "linecol": [
          357,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , RFCFPS + RFMIC - MICFR - RFDANT)* (1 - positif(ART1731BIS)) + max(0 , RRFI + REVRF + DEFRF4BC) * positif(ART1731BIS)",
          "linecol": [
            360,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRFPS",
          "linecol": [
            360,
            1
          ]
        },
        "linecol": [
          360,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , RFCFAPS + RFMIC - MICFR - RFDANT ) * (1 - positif(ART1731BIS)) + max(0 , RFCFAPS + RFMIC - MICFR +  DEFRF4BD+DEFRF4BC ) * positif(ART1731BIS)",
          "linecol": [
            363,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRFAPS",
          "linecol": [
            363,
            1
          ]
        },
        "linecol": [
          363,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TRCMABD + DRTNC + RAVC + RCMNAB + RTCAR + RCMPRIVM + RCMIMPAT - RCMSOC -  positif(RCMRDS) * min(RCMRDS , RCMABD + REVACT + RCMAV + PROVIE + RCMHAD  + DISQUO + RCMHAB + INTERE + RCMTNC + REVPEA + COD2FA ) ",
          "linecol": [
            365,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCM1",
          "linecol": [
            365,
            1
          ]
        },
        "linecol": [
          365,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(0,RDRCM1)",
          "linecol": [
            377,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCM1NEG",
          "linecol": [
            377,
            1
          ]
        },
        "linecol": [
          377,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(COD2FA,abs(RDRCM1))",
          "linecol": [
            378,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCM1NEGPLAF",
          "linecol": [
            378,
            1
          ]
        },
        "linecol": [
          378,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(RDRCM1)) * RDRCM1NEGPLAF * (-1) + positif_ou_nul(RDRCM1) * RDRCM1",
          "linecol": [
            379,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCM1BIS",
          "linecol": [
            379,
            1
          ]
        },
        "linecol": [
          379,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDRCM1BIS + COD2FA",
          "linecol": [
            381,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCM",
          "linecol": [
            381,
            1
          ]
        },
        "linecol": [
          381,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RCMABD + RCMTNC + RCMAV + RCMHAD + RCMHAB + REGPRIVM + RCMIMPAT - RCMSOC -  positif(RCMRDS) * min(RCMRDS , RCMABD + RCMAV + RCMHAD + RCMHAB + RCMTNC + COD2FA ) ",
          "linecol": [
            382,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCM1APS",
          "linecol": [
            382,
            1
          ]
        },
        "linecol": [
          382,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(0,RDRCM1APS)",
          "linecol": [
            394,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCM1NEGAPS",
          "linecol": [
            394,
            1
          ]
        },
        "linecol": [
          394,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(COD2FA,abs(RDRCM1APS))",
          "linecol": [
            395,
            21
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCM1NEGPLAFAPS",
          "linecol": [
            395,
            1
          ]
        },
        "linecol": [
          395,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1-positif(RDRCM1APS)) * RDRCM1NEGPLAFAPS * (-1) + positif_ou_nul(RDRCM1APS) * RDRCM1APS",
          "linecol": [
            396,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCM1BISAPS",
          "linecol": [
            396,
            1
          ]
        },
        "linecol": [
          396,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDRCM1BISAPS + COD2FA",
          "linecol": [
            398,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRCMAPS",
          "linecol": [
            398,
            1
          ]
        },
        "linecol": [
          398,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RVBCSG",
          "linecol": [
            399,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRV",
          "linecol": [
            399,
            1
          ]
        },
        "linecol": [
          399,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(RVB1 * TXRVT1 / 100) + arr(RVB2 * TXRVT2 / 100) + arr(RVB3 * TXRVT3 / 100) + arr(RVB4 * TXRVT4 / 100)",
          "linecol": [
            400,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRVAPS",
          "linecol": [
            400,
            1
          ]
        },
        "linecol": [
          400,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RCSV + RCSC + RCSP + max(0,NPLOCNETSF) * (1-null(V_REGCO - 2)) * (1-null(V_REGCO - 4))",
          "linecol": [
            405,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDNP",
          "linecol": [
            405,
            1
          ]
        },
        "linecol": [
          405,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BPVSJ + BPVSK + BPV18V + BPV18C + BPCOPTV + BPCOPTC + BPV40V + BPV40C + BPCOSAV + BPCOSAC + PEA + GAINPEA",
          "linecol": [
            411,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PVTAUXPS",
          "linecol": [
            411,
            1
          ]
        },
        "linecol": [
          411,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(PVBARPS + PVTAUXPS) * (1 - positif(IPVLOC))",
          "linecol": [
            413,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDNCP",
          "linecol": [
            413,
            1
          ]
        },
        "linecol": [
          413,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BAF1AV + BAF1AC + BAF1AP + BA1AV + BA1AC + BA1AP + max(0,MIB1AV - MIBDEV) + max(0,MIB1AC - MIBDEC) + max(0,MIB1AP - MIBDEP) + BI1AV + BI1AC + BI1AP + max(0,MIBNP1AV - MIBNPDEV) + max(0,MIBNP1AC - MIBNPDEC) + max(0,MIBNP1AP - MIBNPDEP) + BI2AV + BI2AC + BI2AP + max(0,BNCPRO1AV - BNCPRODEV) + max(0,BNCPRO1AC - BNCPRODEC) + max(0,BNCPRO1AP - BNCPRODEP) + BN1AV + BN1AC + BN1AP + max(0,BNCNP1AV - BNCNPDEV) + max(0,BNCNP1AC - BNCNPDEC) + max(0,BNCNP1AP - BNCNPDEP) + PVINVE + PVINCE + PVINPE + PVSOCV + PVSOCC ",
          "linecol": [
            414,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDPTP",
          "linecol": [
            414,
            1
          ]
        },
        "linecol": [
          414,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "GLDGRATV + GLDGRATC",
          "linecol": [
            426,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RGLOA",
          "linecol": [
            426,
            1
          ]
        },
        "linecol": [
          426,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(RDRFPS * (1-null(4-V_REGCO)) + (COD8XK + COD8YK + RDRV + RDRCM + RDNP + RDNCP + RDPTP + ESFP + R1649 + PREREV)*(1-V_CNR) ) * (1 - positif(present(RE168) + present(TAX1649))) + (RE168 + TAX1649) * (1-V_CNR)",
          "linecol": [
            429,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCSG",
          "linecol": [
            429,
            1
          ]
        },
        "linecol": [
          429,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(RDRFAPS * (1-null(4-V_REGCO)) + (RDRVAPS + RDRCMAPS + RDNP + ESFP + R1649 + PREREV)*(1-V_CNR)) * (1 - positif(present(RE168) + present(TAX1649))) + (RE168 + TAX1649) * (1-V_CNR)",
          "linecol": [
            434,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCSGAPS",
          "linecol": [
            434,
            1
          ]
        },
        "linecol": [
          434,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "SALECS * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            439,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSE1",
          "linecol": [
            439,
            1
          ]
        },
        "linecol": [
          439,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(ALLECS + COD8SA) * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            441,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSE2",
          "linecol": [
            441,
            1
          ]
        },
        "linecol": [
          441,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "INDECS * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            443,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSE3",
          "linecol": [
            443,
            1
          ]
        },
        "linecol": [
          443,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(PENECS + COD8SB) * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            445,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSE4",
          "linecol": [
            445,
            1
          ]
        },
        "linecol": [
          445,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "SALECSG * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            447,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSE5",
          "linecol": [
            447,
            1
          ]
        },
        "linecol": [
          447,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BRSE1 + BRSE2 + BRSE3 + BRSE4 + BRSE5",
          "linecol": [
            450,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRSETOT",
          "linecol": [
            450,
            1
          ]
        },
        "linecol": [
          450,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10311",
      "linecol": [
        355,
        7
      ]
    },
    "linecol": [
      355,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                452,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                452,
                23
              ]
            }
          ],
          "linecol": [
            452,
            15
          ]
        }
      ],
      "linecol": [
        452,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PRSE1 + PRSE2 + PRSE3 + PRSE4 + PRSE5",
          "linecol": [
            453,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRSETOT",
          "linecol": [
            453,
            1
          ]
        },
        "linecol": [
          453,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RETRSE1 + RETRSE2 + RETRSE3 + RETRSE4 + RETRSE5",
          "linecol": [
            454,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RETRSETOT",
          "linecol": [
            454,
            1
          ]
        },
        "linecol": [
          454,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CSPROVYD + CSPROVYE + CSPROVYF + CSPROVYN + CSPROVYG + CSPROVYH + CSPROVYP",
          "linecol": [
            455,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSEPROVTOT",
          "linecol": [
            455,
            1
          ]
        },
        "linecol": [
          455,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NMAJRSE11 + NMAJRSE21 + NMAJRSE31 + NMAJRSE41 + NMAJRSE51",
          "linecol": [
            456,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE1TOT",
          "linecol": [
            456,
            1
          ]
        },
        "linecol": [
          456,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "NMAJRSE14 + NMAJRSE24 + NMAJRSE34 + NMAJRSE44 + NMAJRSE54",
          "linecol": [
            457,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NMAJRSE4TOT",
          "linecol": [
            457,
            1
          ]
        },
        "linecol": [
          457,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10311111",
      "linecol": [
        451,
        7
      ]
    },
    "linecol": [
      451,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                460,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                460,
                23
              ]
            }
          ],
          "linecol": [
            460,
            15
          ]
        }
      ],
      "linecol": [
        460,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min ((BCSG) * (1-V_CNR), max( 0, (RDRFPS+RDRV +RDNP+ max(0,RDRCM1) + PVBARPS - IPPNCS)  * (1-V_CNR) )) * (1 - positif(present(RE168)+present(TAX1649))) * (1- positif(ABDETPLUS)) + min ((BCSG) * (1-V_CNR), BDCSG3VA)",
          "linecol": [
            462,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDCSG",
          "linecol": [
            462,
            1
          ]
        },
        "linecol": [
          462,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "103111",
      "linecol": [
        459,
        7
      ]
    },
    "linecol": [
      459,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                467,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                467,
                23
              ]
            }
          ],
          "linecol": [
            467,
            15
          ]
        }
      ],
      "linecol": [
        467,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(CSREC+V_GLOANT) * arr((BGLOA-(COD8YL/0.075)) * TX051/100) * (1 - positif(present(RE168)+present(TAX1649))) * positif(NAPCR61)",
          "linecol": [
            469,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DGLOD",
          "linecol": [
            469,
            1
          ]
        },
        "linecol": [
          469,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_IND_TRAIT = 4) alors ((arr((BGLOA -(COD8YL/0.075))* TX051 / 100)) * positif(CSREC))  sinon (abs(DGLOD - V_IDGLOANT)) finsi",
          "linecol": [
            471,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDGLO",
          "linecol": [
            471,
            1
          ]
        },
        "linecol": [
          471,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(ABDETPLUS +0) * min( arr((ABDETPLUS + COD3UA + 0) * TX051/100) , COD3UA)",
          "linecol": [
            478,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSGDED3UA",
          "linecol": [
            478,
            1
          ]
        },
        "linecol": [
          478,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(ABDETPLUS +0) * arr(( PVBARPS - ABDETPLUS - COD3UA + 0) * TX051/100)",
          "linecol": [
            480,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSGDEDAUTRE",
          "linecol": [
            480,
            1
          ]
        },
        "linecol": [
          480,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , CSGDED3UA + CSGDEDAUTRE)",
          "linecol": [
            482,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSGDED",
          "linecol": [
            482,
            1
          ]
        },
        "linecol": [
          482,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(CSGDED)* arr( CSGDED * 100/TX051)",
          "linecol": [
            484,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PVBAR3VA",
          "linecol": [
            484,
            1
          ]
        },
        "linecol": [
          484,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(ABDETPLUS) *  max(0, RDRV + max(0,RDRCM1) + RDRFPS + RDNP + PVBAR3VA - IPPNCS) * (1-V_CNR) * (1 - positif(present(RE168)+present(TAX1649)))",
          "linecol": [
            486,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDCSG3VA",
          "linecol": [
            486,
            1
          ]
        },
        "linecol": [
          486,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "103112",
      "linecol": [
        466,
        7
      ]
    },
    "linecol": [
      466,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                490,
                16
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                490,
                24
              ]
            }
          ],
          "linecol": [
            490,
            16
          ]
        }
      ],
      "linecol": [
        490,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,SALECS-REVCSXA-arr(CSPROVYD/(TX075/100)) ) * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            493,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDRSE1",
          "linecol": [
            493,
            1
          ]
        },
        "linecol": [
          493,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,ALLECS-REVCSXC-arr(CSPROVYF/(TX066/100)) ) * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            496,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDRSE2",
          "linecol": [
            496,
            1
          ]
        },
        "linecol": [
          496,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,INDECS-REVCSXD-arr(CSPROVYG/(TX062/100)) ) * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            499,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDRSE3",
          "linecol": [
            499,
            1
          ]
        },
        "linecol": [
          499,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,PENECS-REVCSXE-arr(CSPROVYH/(TX038/100)) ) * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            502,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDRSE4",
          "linecol": [
            502,
            1
          ]
        },
        "linecol": [
          502,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,SALECSG-REVCSXB-arr(CSPROVYE/(TX075/100)) ) * (1 - positif(present(RE168) + present(TAX1649))) * (1-V_CNR)",
          "linecol": [
            505,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDRSE5",
          "linecol": [
            505,
            1
          ]
        },
        "linecol": [
          505,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(BDRSE1 * TXTQDED/100) + arr(BDRSE2 * TXTVDED/100) + arr(BDRSE3 * TXTWDED/100) + arr(BDRSE4 * TXTXDED/100) + arr(BDRSE5 * TX051/100) ) * positif(CSREC+V_IDRSEANT) * positif(NAPCR61)",
          "linecol": [
            508,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DRSED",
          "linecol": [
            508,
            1
          ]
        },
        "linecol": [
          508,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_IND_TRAIT = 4) alors (positif(CSREC)*(arr(BDRSE1 * TXTQDED/100) + arr(BDRSE2 * TXTVDED/100) + arr(BDRSE3 * TXTWDED/100) + arr(BDRSE4 * TXTXDED/100) + arr(BDRSE5 * TX051/100) ) ) sinon (abs(DRSED - V_IDRSEANT)) finsi",
          "linecol": [
            512,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDRSE",
          "linecol": [
            512,
            1
          ]
        },
        "linecol": [
          512,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "103114",
      "linecol": [
        489,
        7
      ]
    },
    "linecol": [
      489,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                523,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                523,
                21
              ]
            }
          ],
          "linecol": [
            523,
            15
          ]
        }
      ],
      "linecol": [
        523,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(CSREC+V_IDANT) * (arr(BDCSG * T_IDCSG / 100) - DCSGIM-DCSGIM_A)  * positif(NAPCR61)",
          "linecol": [
            524,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DCSGD",
          "linecol": [
            524,
            1
          ]
        },
        "linecol": [
          524,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "si (V_IND_TRAIT = 4) alors ((arr(BDCSG * T_IDCSG / 100)-DCSGIM) * positif(CSREC)) sinon ( si (CRDEG = 0 et NAPCRP = 0) alors (0) sinon (abs(DCSGD - V_IDANT )) finsi ) finsi",
          "linecol": [
            525,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IDCSG",
          "linecol": [
            525,
            1
          ]
        },
        "linecol": [
          525,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1031121",
      "linecol": [
        522,
        7
      ]
    },
    "linecol": [
      522,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                534,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                534,
                23
              ]
            }
          ],
          "linecol": [
            534,
            15
          ]
        }
      ],
      "linecol": [
        534,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(RDRFPS * (1-null(4-V_REGCO)) + (COD8XK + COD8YK + RDRV + RDRCM + RDNP + RDNCP + RDPTP + RGLOA + SALECS + SALECSG + ALLECS + INDECS + PENECS + COD8SA + COD8SB + ESFP + R1649 + PREREV) * (1-V_CNR) ) * (1 - positif(present(RE168) + present(TAX1649))) + (RE168 + TAX1649) * (1-V_CNR)",
          "linecol": [
            535,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRDS",
          "linecol": [
            535,
            1
          ]
        },
        "linecol": [
          535,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(RDRFAPS * (1-null(4-V_REGCO)) + (RDRVAPS + RDRCMAPS + RDNP + SALECS + SALECSG + ALLECS + INDECS + PENECS + ESFP + R1649 + PREREV) *(1-V_CNR) ) * (1 - positif(present(RE168) + present(TAX1649))) + (RE168 + TAX1649) * (1-V_CNR)",
          "linecol": [
            542,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRDSAPS",
          "linecol": [
            542,
            1
          ]
        },
        "linecol": [
          542,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10312",
      "linecol": [
        533,
        7
      ]
    },
    "linecol": [
      533,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                550,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                550,
                23
              ]
            }
          ],
          "linecol": [
            550,
            15
          ]
        }
      ],
      "linecol": [
        550,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( BRDS * T_RDS / 100 ) * (1 - positif(ANNUL2042))",
          "linecol": [
            551,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDSC",
          "linecol": [
            551,
            1
          ]
        },
        "linecol": [
          551,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( BRDSAPS * T_RDS / 100 ) * (1 - positif(ANNUL2042))",
          "linecol": [
            552,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDSCAPS",
          "linecol": [
            552,
            1
          ]
        },
        "linecol": [
          552,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "10313",
      "linecol": [
        549,
        7
      ]
    },
    "linecol": [
      549,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                554,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                554,
                23
              ]
            }
          ],
          "linecol": [
            554,
            15
          ]
        }
      ],
      "linecol": [
        554,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDSC - CIRDS",
          "linecol": [
            555,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDSN",
          "linecol": [
            555,
            1
          ]
        },
        "linecol": [
          555,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDSCAPS - CIRDSAPS",
          "linecol": [
            556,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDSNAPS",
          "linecol": [
            556,
            1
          ]
        },
        "linecol": [
          556,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDSCAC - CIRDSAC",
          "linecol": [
            557,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDSNAC",
          "linecol": [
            557,
            1
          ]
        },
        "linecol": [
          557,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "103102",
      "linecol": [
        553,
        7
      ]
    },
    "linecol": [
      553,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                559,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                559,
                23
              ]
            }
          ],
          "linecol": [
            559,
            15
          ]
        }
      ],
      "linecol": [
        559,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(RDPTP + PVINVE+PVINCE+PVINPE + somme(i=V,C,P:BN1Ai + BI1Ai + BI2Ai + BA1Ai )) * (1 - positif(IPVLOC))",
          "linecol": [
            561,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CSRTF",
          "linecol": [
            561,
            1
          ]
        },
        "linecol": [
          561,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CSRTF",
          "linecol": [
            564,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RDRTF",
          "linecol": [
            564,
            1
          ]
        },
        "linecol": [
          564,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CSRTF",
          "linecol": [
            565,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PSRTF",
          "linecol": [
            565,
            1
          ]
        },
        "linecol": [
          565,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "117180",
      "linecol": [
        558,
        7
      ]
    },
    "linecol": [
      558,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                567,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                567,
                23
              ]
            }
          ],
          "linecol": [
            567,
            15
          ]
        }
      ],
      "linecol": [
        567,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CESSASSV - LIM_ASSUR3)",
          "linecol": [
            568,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASSURV3",
          "linecol": [
            568,
            1
          ]
        },
        "linecol": [
          568,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CESSASSV - BASSURV3 - LIM_ASSUR2)",
          "linecol": [
            569,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASSURV2",
          "linecol": [
            569,
            1
          ]
        },
        "linecol": [
          569,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CESSASSV - BASSURV3 - BASSURV2 - LIM_ASSUR1)",
          "linecol": [
            570,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASSURV1",
          "linecol": [
            570,
            1
          ]
        },
        "linecol": [
          570,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CESSASSC - LIM_ASSUR3)",
          "linecol": [
            571,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASSURC3",
          "linecol": [
            571,
            1
          ]
        },
        "linecol": [
          571,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(CESSASSC -BASSURC3) - LIM_ASSUR2)",
          "linecol": [
            572,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASSURC2",
          "linecol": [
            572,
            1
          ]
        },
        "linecol": [
          572,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(CESSASSC - BASSURC3 -BASSURC2) - LIM_ASSUR1)",
          "linecol": [
            573,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASSURC1",
          "linecol": [
            573,
            1
          ]
        },
        "linecol": [
          573,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CESSASSV",
          "linecol": [
            574,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASSURV",
          "linecol": [
            574,
            1
          ]
        },
        "linecol": [
          574,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CESSASSC",
          "linecol": [
            575,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASSURC",
          "linecol": [
            575,
            1
          ]
        },
        "linecol": [
          575,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BASSURV1 * TX_ASSUR1/100 + BASSURV2 * TX_ASSUR2/100 + BASSURV3 * TX_ASSUR3/100) * (1 - positif(RE168 + TAX1649))",
          "linecol": [
            576,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXASSURV",
          "linecol": [
            576,
            1
          ]
        },
        "linecol": [
          576,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BASSURC1 * TX_ASSUR1/100 + BASSURC2 * TX_ASSUR2/100 + BASSURC3 * TX_ASSUR3/100) * (1 - positif(RE168 + TAX1649))",
          "linecol": [
            577,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXASSURC",
          "linecol": [
            577,
            1
          ]
        },
        "linecol": [
          577,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TAXASSURV + TAXASSURC",
          "linecol": [
            578,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAXASSUR",
          "linecol": [
            578,
            1
          ]
        },
        "linecol": [
          578,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "119",
      "linecol": [
        566,
        7
      ]
    },
    "linecol": [
      566,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                580,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                580,
                23
              ]
            }
          ],
          "linecol": [
            580,
            15
          ]
        }
      ],
      "linecol": [
        580,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(CVNSALAV + CVNSALAC+GLDGRATV+GLDGRATC) * (1-positif(present(TAX1649)+present(RE168)))",
          "linecol": [
            582,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCVNSAL",
          "linecol": [
            582,
            1
          ]
        },
        "linecol": [
          582,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(CVNSALAV + CVNSALAC) * (1-positif(present(TAX1649)+present(RE168)))",
          "linecol": [
            583,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "B3SVN",
          "linecol": [
            583,
            1
          ]
        },
        "linecol": [
          583,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( BCVNSAL * TX10 / 100 ) * (1 - positif(ANNUL2042))",
          "linecol": [
            584,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CVNSALC",
          "linecol": [
            584,
            1
          ]
        },
        "linecol": [
          584,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(GLDGRATV+GLDGRATC) * (1-V_CNR) * (1-positif(present(TAX1649)+present(RE168)))",
          "linecol": [
            586,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BGLOA",
          "linecol": [
            586,
            1
          ]
        },
        "linecol": [
          586,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( BGLOA * TX075 / 100 ) * (1 - positif(ANNUL2042))",
          "linecol": [
            587,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CGLOA",
          "linecol": [
            587,
            1
          ]
        },
        "linecol": [
          587,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(GLDGRATV+GLDGRATC) * V_CNR * (1-positif(present(TAX1649)+present(RE168)))",
          "linecol": [
            589,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BGLOACNR",
          "linecol": [
            589,
            1
          ]
        },
        "linecol": [
          589,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1120",
      "linecol": [
        579,
        7
      ]
    },
    "linecol": [
      579,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                592,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                592,
                23
              ]
            }
          ],
          "linecol": [
            592,
            15
          ]
        }
      ],
      "linecol": [
        592,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(GSALV + GSALC) * (1 - V_CNR)* (1-positif(present(TAX1649)+present(RE168)))",
          "linecol": [
            594,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCDIS",
          "linecol": [
            594,
            1
          ]
        },
        "linecol": [
          594,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BCDIS * TCDIS / 100) * (1 - positif(ANNUL2042))",
          "linecol": [
            596,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CDISC",
          "linecol": [
            596,
            1
          ]
        },
        "linecol": [
          596,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CDISC",
          "linecol": [
            598,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CDIS",
          "linecol": [
            598,
            1
          ]
        },
        "linecol": [
          598,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1125",
      "linecol": [
        591,
        7
      ]
    },
    "linecol": [
      591,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                600,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                600,
                23
              ]
            }
          ],
          "linecol": [
            600,
            15
          ]
        }
      ],
      "linecol": [
        600,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COD2LA * (1 - V_CNR)* (1-positif(present(TAX1649)+present(RE168)))",
          "linecol": [
            602,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BREGV",
          "linecol": [
            602,
            1
          ]
        },
        "linecol": [
          602,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BREGV",
          "linecol": [
            603,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "MREGV",
          "linecol": [
            603,
            1
          ]
        },
        "linecol": [
          603,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "1130",
      "linecol": [
        599,
        7
      ]
    },
    "linecol": [
      599,
      1
    ]
  }
]
