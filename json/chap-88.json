[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "name": {
      "type": "symbol",
      "name": "881",
      "linecol": [
        21,
        7
      ]
    },
    "linecol": [
      21,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max (CODDAJ - ABDOMDAJ,0) * INDEFTSV",
          "linecol": [
            25,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLDOMAVDAJV",
          "linecol": [
            25,
            1
          ]
        },
        "linecol": [
          25,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max (CODEAJ - ABDOMEAJ,0) * INDEFTSV",
          "linecol": [
            26,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLDOMAVEAJV",
          "linecol": [
            26,
            1
          ]
        },
        "linecol": [
          26,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max (CODDBJ - ABDOMDBJ,0) * INDEFTSC",
          "linecol": [
            27,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLDOMAVDBJC",
          "linecol": [
            27,
            1
          ]
        },
        "linecol": [
          27,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max (CODEBJ - ABDOMEBJ,0) * INDEFTSC",
          "linecol": [
            28,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLDOMAVEBJC",
          "linecol": [
            28,
            1
          ]
        },
        "linecol": [
          28,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max (GLD1V - ABGL1V,0) * INDEFTSV",
          "linecol": [
            29,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN1V",
          "linecol": [
            29,
            1
          ]
        },
        "linecol": [
          29,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max (GLD2V - ABGL2V,0) * INDEFTSV",
          "linecol": [
            30,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN2V",
          "linecol": [
            30,
            1
          ]
        },
        "linecol": [
          30,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max (GLD3V - ABGL3V,0) * INDEFTSV",
          "linecol": [
            31,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN3V",
          "linecol": [
            31,
            1
          ]
        },
        "linecol": [
          31,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(CODDAJ - ABDOMDAJ,0) * INDEFTSV",
          "linecol": [
            32,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN4DAJV",
          "linecol": [
            32,
            1
          ]
        },
        "linecol": [
          32,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(max(CODDAJ - ABDOMDAJ,0)+max(CODEAJ - ABDOMEAJ,0)) * INDEFTSV",
          "linecol": [
            33,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN4V",
          "linecol": [
            33,
            1
          ]
        },
        "linecol": [
          33,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max (GLD1C - ABGL1C,0) * INDEFTSC",
          "linecol": [
            34,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN1C",
          "linecol": [
            34,
            1
          ]
        },
        "linecol": [
          34,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max (GLD2C - ABGL2C,0) * INDEFTSC",
          "linecol": [
            35,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN2C",
          "linecol": [
            35,
            1
          ]
        },
        "linecol": [
          35,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max (GLD3C - ABGL3C,0) * INDEFTSC",
          "linecol": [
            36,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN3C",
          "linecol": [
            36,
            1
          ]
        },
        "linecol": [
          36,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(CODDBJ - ABDOMDBJ,0) * INDEFTSC",
          "linecol": [
            37,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN4DBJC",
          "linecol": [
            37,
            1
          ]
        },
        "linecol": [
          37,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(max(CODDBJ - ABDOMDBJ,0)+max(CODEBJ - ABDOMEBJ,0)) * INDEFTSC",
          "linecol": [
            38,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN4C",
          "linecol": [
            38,
            1
          ]
        },
        "linecol": [
          38,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      23,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      23,
                      12
                    ]
                  }
                ],
                "linecol": [
                  23,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  23,
                  6
                ]
              },
              "linecol": [
                23,
                6
              ]
            },
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 3,
                      "linecol": [
                        23,
                        19
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        23,
                        16
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      23,
                      16
                    ]
                  }
                ],
                "linecol": [
                  23,
                  16
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "x",
                "linecol": [
                  23,
                  14
                ]
              },
              "linecol": [
                23,
                14
              ]
            }
          ],
          "linecol": [
            23,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "max (GLDxi - ABGLxi,0) * INDEFTSi",
            "linecol": [
              24,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "GLNAVxi",
            "linecol": [
              24,
              1
            ]
          },
          "linecol": [
            24,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          23,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            22,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            22,
            23
          ]
        }
      ],
      "linecol": [
        22,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "882",
      "linecol": [
        39,
        7
      ]
    },
    "linecol": [
      39,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "TSNV - somme(x=1..3: max(0,GLDxV - ABGLxV))-max(CODDAJ - ABDOMDAJ,0)-max(CODEAJ - ABDOMEAJ,0)",
          "linecol": [
            41,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSV",
          "linecol": [
            41,
            1
          ]
        },
        "linecol": [
          41,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TSNC - somme(x=1..3: max(0,GLDxC - ABGLxC))-max(CODDBJ - ABDOMDBJ,0)-max(CODEBJ - ABDOMEBJ,0)",
          "linecol": [
            42,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSC",
          "linecol": [
            42,
            1
          ]
        },
        "linecol": [
          42,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "( positif(TSV) * ( positif(CARTSV+REMPLAV) * arr(TSV * 2TSNV / EXTSV ) + (1 -positif(CARTSV+REMPLAV)) * (TSV - TSNNV)) + positif(CODDAJ + CODEAJ) * (max(CODDAJ - ABDOMDAJ,0)+max(CODEAJ - ABDOMEAJ,0)))",
          "linecol": [
            61,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSNN2VAFF",
          "linecol": [
            61,
            1
          ]
        },
        "linecol": [
          61,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "( positif(TSC) * ( positif(CARTSC+REMPLAC) * arr(TSC * 2TSNC / EXTSC ) + (1 -positif(CARTSC+REMPLAC)) * (TSC - TSNNC)) + positif(CODDBJ + CODEBJ) * (max(CODDBJ - ABDOMDBJ,0)+max(CODEBJ - ABDOMEBJ,0)))",
          "linecol": [
            67,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSNN2CAFF",
          "linecol": [
            67,
            1
          ]
        },
        "linecol": [
          67,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4:TSNN2iAFF)",
          "linecol": [
            86,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSNN2PAFF",
          "linecol": [
            86,
            1
          ]
        },
        "linecol": [
          86,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        43,
                        11
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        43,
                        8
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      43,
                      8
                    ]
                  }
                ],
                "linecol": [
                  43,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  43,
                  6
                ]
              },
              "linecol": [
                43,
                6
              ]
            }
          ],
          "linecol": [
            43,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "TSNi",
            "linecol": [
              44,
              7
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSi",
            "linecol": [
              44,
              1
            ]
          },
          "linecol": [
            44,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          43,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      45,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      45,
                      10
                    ]
                  }
                ],
                "linecol": [
                  45,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  45,
                  6
                ]
              },
              "linecol": [
                45,
                6
              ]
            }
          ],
          "linecol": [
            45,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "TSNi + PRNi - somme(x=1..3: GLNxi)",
            "linecol": [
              46,
              8
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TPRi",
            "linecol": [
              46,
              1
            ]
          },
          "linecol": [
            46,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          45,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        47,
                        11
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        47,
                        8
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      47,
                      8
                    ]
                  }
                ],
                "linecol": [
                  47,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  47,
                  6
                ]
              },
              "linecol": [
                47,
                6
              ]
            }
          ],
          "linecol": [
            47,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "TSNi + PRNi",
            "linecol": [
              48,
              8
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TPRi",
            "linecol": [
              48,
              1
            ]
          },
          "linecol": [
            48,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          47,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      49,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      49,
                      12
                    ]
                  }
                ],
                "linecol": [
                  49,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  49,
                  6
                ]
              },
              "linecol": [
                49,
                6
              ]
            }
          ],
          "linecol": [
            49,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif(TSi) *arr(TSi *(TSBNi + BPCOSAi + GLDGRATi)/EXTSi ) + (1 -positif(TSi)) * TSi",
            "linecol": [
              50,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSNNi",
            "linecol": [
              50,
              1
            ]
          },
          "linecol": [
            50,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          49,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        52,
                        13
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        52,
                        10
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      52,
                      10
                    ]
                  }
                ],
                "linecol": [
                  52,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  52,
                  6
                ]
              },
              "linecol": [
                52,
                6
              ]
            }
          ],
          "linecol": [
            52,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "(positif(TSi) * arr(TSi * TSBNi /EXTSi ) + (1 -positif(TSi)) * TSi)",
            "linecol": [
              53,
              9
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSNNi",
            "linecol": [
              53,
              1
            ]
          },
          "linecol": [
            53,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          52,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      55,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      55,
                      12
                    ]
                  }
                ],
                "linecol": [
                  55,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  55,
                  6
                ]
              },
              "linecol": [
                55,
                6
              ]
            }
          ],
          "linecol": [
            55,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "( positif(TSi) * ( positif(CARTSi+REMPLAi) * arr(TSi * 2TSNi / EXTSi ) + (1 -positif(CARTSi+REMPLAi)) * (TSi - TSNNi)))",
            "linecol": [
              56,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSNN2i",
            "linecol": [
              56,
              1
            ]
          },
          "linecol": [
            56,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          55,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        73,
                        13
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        73,
                        10
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      73,
                      10
                    ]
                  }
                ],
                "linecol": [
                  73,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  73,
                  6
                ]
              },
              "linecol": [
                73,
                6
              ]
            }
          ],
          "linecol": [
            73,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "( positif(TSi) * ( positif(CARTSPi+REMPLAPi) * arr(TSi * 2TSNi /EXTSi ) + (1 -positif(CARTSPi+REMPLAPi)) * (TSi - TSNNi)))",
            "linecol": [
              74,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSNN2i",
            "linecol": [
              74,
              1
            ]
          },
          "linecol": [
            74,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          73,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        79,
                        13
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        79,
                        10
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      79,
                      10
                    ]
                  }
                ],
                "linecol": [
                  79,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  79,
                  6
                ]
              },
              "linecol": [
                79,
                6
              ]
            }
          ],
          "linecol": [
            79,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "( positif(TSi) * ( positif(CARTSPi+REMPLAPi) * arr(TSi * 2TSNi /EXTSi ) + (1 -positif(CARTSPi+REMPLAPi)) * (TSi - TSNNi)))",
            "linecol": [
              80,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSNN2iAFF",
            "linecol": [
              80,
              1
            ]
          },
          "linecol": [
            80,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          79,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      88,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      88,
                      12
                    ]
                  }
                ],
                "linecol": [
                  88,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  88,
                  6
                ]
              },
              "linecol": [
                88,
                6
              ]
            }
          ],
          "linecol": [
            88,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "( positif(TSi) * ( positif(REMPLAi) * arr(TSi * CARTSi / EXTSi ) + (1 -positif(REMPLAi)) * (TSi - TSNNi)))",
            "linecol": [
              89,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSNN2TSi",
            "linecol": [
              89,
              1
            ]
          },
          "linecol": [
            89,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          88,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        94,
                        13
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        94,
                        10
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      94,
                      10
                    ]
                  }
                ],
                "linecol": [
                  94,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  94,
                  6
                ]
              },
              "linecol": [
                94,
                6
              ]
            }
          ],
          "linecol": [
            94,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "( positif(TSi) * ( positif(REMPLAPi) * arr(TSi * CARTSPi /EXTSi ) + (1 -positif(REMPLAPi)) * (TSi - TSNNi)))",
            "linecol": [
              95,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSNN2TSi",
            "linecol": [
              95,
              1
            ]
          },
          "linecol": [
            95,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          94,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      100,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      100,
                      12
                    ]
                  }
                ],
                "linecol": [
                  100,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  100,
                  6
                ]
              },
              "linecol": [
                100,
                6
              ]
            }
          ],
          "linecol": [
            100,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "(positif(TSi) * (TSi - TSNNi-TSNN2TSi))",
            "linecol": [
              101,
              14
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSNN2REMPi",
            "linecol": [
              101,
              1
            ]
          },
          "linecol": [
            101,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          100,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        102,
                        13
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        102,
                        10
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      102,
                      10
                    ]
                  }
                ],
                "linecol": [
                  102,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  102,
                  6
                ]
              },
              "linecol": [
                102,
                6
              ]
            }
          ],
          "linecol": [
            102,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "(positif(TSi) * (TSi - TSNNi-TSNN2TSi))",
            "linecol": [
              103,
              14
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSNN2REMPi",
            "linecol": [
              103,
              1
            ]
          },
          "linecol": [
            103,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          102,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            40,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            40,
            23
          ]
        }
      ],
      "linecol": [
        40,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "883",
      "linecol": [
        105,
        7
      ]
    },
    "linecol": [
      105,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBFV+PENSALV+CODRAZ) * arr(PRNV * CARPEV / EXPRV) +  (1 -positif(PEBFV+PENSALV+CODRAZ)) * (PRNV -PRRV)",
          "linecol": [
            109,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2V",
          "linecol": [
            109,
            1
          ]
        },
        "linecol": [
          109,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBFC+PENSALC+CODRBZ) * arr(PRNC * CARPEC / EXPRC) +  (1 -positif(PEBFC+PENSALC+CODRBZ)) * (PRNC -PRRC)",
          "linecol": [
            111,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2C",
          "linecol": [
            111,
            1
          ]
        },
        "linecol": [
          111,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBF1+PENSALP1+CODRCZ) * arr(PRN1 * CARPEP1 / EXPR1 ) +  (1 -positif(PEBF1+PENSALP1+CODRCZ)) * (PRN1 -PRR1)",
          "linecol": [
            113,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR21",
          "linecol": [
            113,
            1
          ]
        },
        "linecol": [
          113,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBF2+PENSALP2+CODRDZ) * arr(PRN2 * CARPEP2 / EXPR2 ) +  (1 -positif(PEBF2+PENSALP2+CODRDZ)) * (PRN2 -PRR2)",
          "linecol": [
            115,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR22",
          "linecol": [
            115,
            1
          ]
        },
        "linecol": [
          115,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBF3+PENSALP3+CODREZ) * arr(PRN3 * CARPEP3 / EXPR3 ) +  (1 -positif(PEBF3+PENSALP3+CODREZ)) * (PRN3 -PRR3)",
          "linecol": [
            117,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR23",
          "linecol": [
            117,
            1
          ]
        },
        "linecol": [
          117,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBF4+PENSALP4+CODRFZ) * arr(PRN4 * CARPEP4 / EXPR4 ) +  (1 -positif(PEBF4+PENSALP4+CODRFZ)) * (PRN4 -PRR4)",
          "linecol": [
            119,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR24",
          "linecol": [
            119,
            1
          ]
        },
        "linecol": [
          119,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBFV+PENSALV) * arr(PRNV * CODRAZ / EXPRV) +  (1 -positif(PEBFV+PENSALV)) * (PRNV -PRRV-PRR2V)",
          "linecol": [
            121,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2ZV",
          "linecol": [
            121,
            1
          ]
        },
        "linecol": [
          121,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBFC+PENSALC) * arr(PRNC * CODRBZ / EXPRC) +  (1 -positif(PEBFC+PENSALC)) * (PRNC -PRRC-PRR2C)",
          "linecol": [
            123,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2ZC",
          "linecol": [
            123,
            1
          ]
        },
        "linecol": [
          123,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBF1+PENSALP1) * arr(PRN1 * CODRCZ / EXPR1 ) +  (1 -positif(PEBF1+PENSALP1)) * (PRN1 -PRR1-PRR21)",
          "linecol": [
            125,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2Z1",
          "linecol": [
            125,
            1
          ]
        },
        "linecol": [
          125,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBF2+PENSALP2) * arr(PRN2 * CODRDZ / EXPR2 ) +  (1 -positif(PEBF2+PENSALP2)) * (PRN2 -PRR2-PRR22)",
          "linecol": [
            127,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2Z2",
          "linecol": [
            127,
            1
          ]
        },
        "linecol": [
          127,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBF3+PENSALP3) * arr(PRN3 * CODREZ / EXPR3 ) +  (1 -positif(PEBF3+PENSALP3)) * (PRN3 -PRR3-PRR23)",
          "linecol": [
            129,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2Z3",
          "linecol": [
            129,
            1
          ]
        },
        "linecol": [
          129,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "positif(PEBF4+PENSALP4) * arr(PRN4 * CODRFZ / EXPR4 ) +  (1 -positif(PEBF4+PENSALP4)) * (PRN4 -PRR4-PRR24)",
          "linecol": [
            131,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2Z4",
          "linecol": [
            131,
            1
          ]
        },
        "linecol": [
          131,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4",
          "linecol": [
            133,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2ZP",
          "linecol": [
            133,
            1
          ]
        },
        "linecol": [
          133,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      107,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      107,
                      12
                    ]
                  },
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        107,
                        17
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        107,
                        14
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      107,
                      14
                    ]
                  }
                ],
                "linecol": [
                  107,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  107,
                  6
                ]
              },
              "linecol": [
                107,
                6
              ]
            }
          ],
          "linecol": [
            107,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "arr(PRNi * PRBi / EXPRi)",
            "linecol": [
              108,
              8
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PRRi",
            "linecol": [
              108,
              1
            ]
          },
          "linecol": [
            108,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          107,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      134,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      134,
                      12
                    ]
                  }
                ],
                "linecol": [
                  134,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  134,
                  6
                ]
              },
              "linecol": [
                134,
                6
              ]
            }
          ],
          "linecol": [
            134,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif(PENSALi) * arr(PRNi * PEBFi / EXPRi) + (1 - positif(PENSALi)) * max(0,(PRNi -PRRi -PRR2i-PRR2Zi))",
            "linecol": [
              135,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PENFi",
            "linecol": [
              135,
              1
            ]
          },
          "linecol": [
            135,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          134,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        137,
                        13
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        137,
                        10
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      137,
                      10
                    ]
                  }
                ],
                "linecol": [
                  137,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  137,
                  6
                ]
              },
              "linecol": [
                137,
                6
              ]
            }
          ],
          "linecol": [
            137,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif(PENSALPi) * arr(PRNi * PEBFi / EXPRi) + (1- positif(PENSALPi)) * (PRNi -PRRi -PRR2i-PRR2Zi)",
            "linecol": [
              138,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PENFi",
            "linecol": [
              138,
              1
            ]
          },
          "linecol": [
            138,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          137,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      140,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      140,
                      12
                    ]
                  }
                ],
                "linecol": [
                  140,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  140,
                  6
                ]
              },
              "linecol": [
                140,
                6
              ]
            }
          ],
          "linecol": [
            140,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif(EXPRi) * (PRNi -PRRi -PRR2i -PRR2Zi- PENFi)",
            "linecol": [
              141,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PENALIMi",
            "linecol": [
              141,
              1
            ]
          },
          "linecol": [
            141,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          140,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        142,
                        13
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        142,
                        10
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      142,
                      10
                    ]
                  }
                ],
                "linecol": [
                  142,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  142,
                  6
                ]
              },
              "linecol": [
                142,
                6
              ]
            }
          ],
          "linecol": [
            142,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif(EXPRi) * (PRNi -PRRi -PRR2i -PRR2Zi- PENFi)",
            "linecol": [
              143,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PENALIMi",
            "linecol": [
              143,
              1
            ]
          },
          "linecol": [
            143,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          142,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            106,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            106,
            23
          ]
        }
      ],
      "linecol": [
        106,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "884",
      "linecol": [
        144,
        7
      ]
    },
    "linecol": [
      144,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RV1 + RV2 + RV3 + RV4",
          "linecol": [
            148,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RVTOT",
          "linecol": [
            148,
            1
          ]
        },
        "linecol": [
          148,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      146,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      146,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      146,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      146,
                      16
                    ]
                  }
                ],
                "linecol": [
                  146,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  146,
                  6
                ]
              },
              "linecol": [
                146,
                6
              ]
            }
          ],
          "linecol": [
            146,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "arr(RVBi * TXRVTi / 100)",
            "linecol": [
              147,
              7
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "RVi",
            "linecol": [
              147,
              1
            ]
          },
          "linecol": [
            147,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          146,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            145,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            145,
            23
          ]
        }
      ],
      "linecol": [
        145,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "885",
      "linecol": [
        149,
        7
      ]
    },
    "linecol": [
      149,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "arr(RENTAX * TXRVT1 / 100)",
          "linecol": [
            151,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "2RV1",
          "linecol": [
            151,
            1
          ]
        },
        "linecol": [
          151,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr(RENTAX5 * TXRVT2 / 100)",
          "linecol": [
            152,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "2RV2",
          "linecol": [
            152,
            1
          ]
        },
        "linecol": [
          152,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr(RENTAX6 * TXRVT3 / 100)",
          "linecol": [
            153,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "2RV3",
          "linecol": [
            153,
            1
          ]
        },
        "linecol": [
          153,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr(RENTAX7 * TXRVT4 / 100)",
          "linecol": [
            154,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "2RV4",
          "linecol": [
            154,
            1
          ]
        },
        "linecol": [
          154,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "2RV1 + 2RV2 + 2RV3 + 2RV4",
          "linecol": [
            155,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "T2RV",
          "linecol": [
            155,
            1
          ]
        },
        "linecol": [
          155,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            150,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            150,
            23
          ]
        }
      ],
      "linecol": [
        150,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "886",
      "linecol": [
        156,
        7
      ]
    },
    "linecol": [
      156,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "arr((RVB1 + RENTAX) * TXRVT1 / 100) + arr((RVB2 + RENTAX5) * TXRVT2 / 100) + arr((RVB3 + RENTAX6) * TXRVT3 / 100) + arr((RVB4 + RENTAX7) * TXRVT4 / 100)",
          "linecol": [
            158,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RVBCSG",
          "linecol": [
            158,
            1
          ]
        },
        "linecol": [
          158,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            157,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            157,
            23
          ]
        }
      ],
      "linecol": [
        157,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "887",
      "linecol": [
        163,
        7
      ]
    },
    "linecol": [
      163,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "TSPRT + RVTOT",
          "linecol": [
            165,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSPR",
          "linecol": [
            165,
            1
          ]
        },
        "linecol": [
          165,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            164,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            164,
            23
          ]
        }
      ],
      "linecol": [
        164,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "888",
      "linecol": [
        166,
        7
      ]
    },
    "linecol": [
      166,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4:TSPRi) * (1-PREM8_11) + max(0,TSNN1+PRR1+TSNN2+PRR2+TSNN3+PRR3+TSNN4+PRR4) * PREM8_11",
          "linecol": [
            172,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSPRP",
          "linecol": [
            172,
            1
          ]
        },
        "linecol": [
          172,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=V,C,1..4:TSPRi)*(1-ART1731BIS) + max(0,TSNNV+PRRV+TSNNC+PRRC+TSNN1+PRR1+TSNN2+PRR2+TSNN3+PRR3+TSNN4+PRR4)*ART1731BIS",
          "linecol": [
            173,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSPRTOT",
          "linecol": [
            173,
            1
          ]
        },
        "linecol": [
          173,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4:TSPRDi)",
          "linecol": [
            174,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSPRDP",
          "linecol": [
            174,
            1
          ]
        },
        "linecol": [
          174,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "abs(TSNNV + PRRV + TSNNC + PRRC + TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4) * (1-positif(TSNNV + PRRV + TSNNC + PRRC+ TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4 ))",
          "linecol": [
            175,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSNNT",
          "linecol": [
            175,
            1
          ]
        },
        "linecol": [
          175,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      168,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      168,
                      10
                    ]
                  },
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        168,
                        15
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        168,
                        12
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      168,
                      12
                    ]
                  }
                ],
                "linecol": [
                  168,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  168,
                  6
                ]
              },
              "linecol": [
                168,
                6
              ]
            }
          ],
          "linecol": [
            168,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "(TSNNi + PRRi) * (1-PREM8_11) + max(0,TSNNi + PRRi) * PREM8_11",
            "linecol": [
              169,
              9
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSPRi",
            "linecol": [
              169,
              1
            ]
          },
          "linecol": [
            169,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          168,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      170,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      170,
                      10
                    ]
                  },
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        170,
                        15
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        170,
                        12
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      170,
                      12
                    ]
                  }
                ],
                "linecol": [
                  170,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  170,
                  6
                ]
              },
              "linecol": [
                170,
                6
              ]
            }
          ],
          "linecol": [
            170,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "min(0,TSNNi + PRRi)* ART1731BIS",
            "linecol": [
              171,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "TSPRDi",
            "linecol": [
              171,
              1
            ]
          },
          "linecol": [
            171,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          170,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            167,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            167,
            23
          ]
        }
      ],
      "linecol": [
        167,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8887",
      "linecol": [
        182,
        7
      ]
    },
    "linecol": [
      182,
      1
    ],
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      184,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      184,
                      10
                    ]
                  },
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        184,
                        15
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        184,
                        12
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      184,
                      12
                    ]
                  }
                ],
                "linecol": [
                  184,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  184,
                  6
                ]
              },
              "linecol": [
                184,
                6
              ]
            }
          ],
          "linecol": [
            184,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "max(0,FRNRETi + TSPRDi)",
            "linecol": [
              185,
              14
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "FRNRETENUi",
            "linecol": [
              185,
              1
            ]
          },
          "linecol": [
            185,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          184,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            183,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            183,
            23
          ]
        }
      ],
      "linecol": [
        183,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8810",
      "linecol": [
        186,
        7
      ]
    },
    "linecol": [
      186,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4: TSNN2i)",
          "linecol": [
            188,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSNN2P",
          "linecol": [
            188,
            1
          ]
        },
        "linecol": [
          188,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4: PRR2i)",
          "linecol": [
            189,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRR2P",
          "linecol": [
            189,
            1
          ]
        },
        "linecol": [
          189,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PENF1 + PENF2 + PENF3 + PENF4",
          "linecol": [
            190,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PENFP",
          "linecol": [
            190,
            1
          ]
        },
        "linecol": [
          190,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4",
          "linecol": [
            191,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PENALIMP",
          "linecol": [
            191,
            1
          ]
        },
        "linecol": [
          191,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            187,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            187,
            23
          ]
        }
      ],
      "linecol": [
        187,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8811",
      "linecol": [
        193,
        7
      ]
    },
    "linecol": [
      193,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "2TSNV+CODDAJ+CODEAJ",
          "linecol": [
            195,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSQVO",
          "linecol": [
            195,
            1
          ]
        },
        "linecol": [
          195,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "2TSNC+CODDBJ+CODEBJ",
          "linecol": [
            196,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSQCJ",
          "linecol": [
            196,
            1
          ]
        },
        "linecol": [
          196,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4: 2TSNi )",
          "linecol": [
            197,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TSQPC",
          "linecol": [
            197,
            1
          ]
        },
        "linecol": [
          197,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CARPEV + PEBFV",
          "linecol": [
            198,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRQVO",
          "linecol": [
            198,
            1
          ]
        },
        "linecol": [
          198,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CARPEC + PEBFC",
          "linecol": [
            199,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRQCJ",
          "linecol": [
            199,
            1
          ]
        },
        "linecol": [
          199,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CARPEP1+PEBF1 +  CARPEP2+PEBF2 +  CARPEP3+PEBF3 +  CARPEP4+PEBF4",
          "linecol": [
            200,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRQPC",
          "linecol": [
            200,
            1
          ]
        },
        "linecol": [
          200,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CODRAZ",
          "linecol": [
            204,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRQZV",
          "linecol": [
            204,
            1
          ]
        },
        "linecol": [
          204,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CODRBZ",
          "linecol": [
            205,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRQZC",
          "linecol": [
            205,
            1
          ]
        },
        "linecol": [
          205,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CODRCZ +CODRDZ+CODREZ+CODRFZ",
          "linecol": [
            206,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRQZP",
          "linecol": [
            206,
            1
          ]
        },
        "linecol": [
          206,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PENSALP1 + PENSALP2 + PENSALP3 + PENSALP4",
          "linecol": [
            207,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PENSALP",
          "linecol": [
            207,
            1
          ]
        },
        "linecol": [
          207,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            194,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            194,
            23
          ]
        }
      ],
      "linecol": [
        194,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8812",
      "linecol": [
        208,
        7
      ]
    },
    "linecol": [
      208,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "2PRBV",
          "linecol": [
            210,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRQNV",
          "linecol": [
            210,
            1
          ]
        },
        "linecol": [
          210,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "2PRBC",
          "linecol": [
            211,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRQNC",
          "linecol": [
            211,
            1
          ]
        },
        "linecol": [
          211,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=1..4: 2PRBi)",
          "linecol": [
            212,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PRQNP",
          "linecol": [
            212,
            1
          ]
        },
        "linecol": [
          212,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PRR2V + PRR2ZV + PENALIMV",
          "linecol": [
            213,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PENSTOTV",
          "linecol": [
            213,
            1
          ]
        },
        "linecol": [
          213,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PRR2C + PRR2ZC + PENALIMC",
          "linecol": [
            214,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PENSTOTC",
          "linecol": [
            214,
            1
          ]
        },
        "linecol": [
          214,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "PRR2P + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + PENALIMP",
          "linecol": [
            215,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PENSTOTP",
          "linecol": [
            215,
            1
          ]
        },
        "linecol": [
          215,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            209,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            209,
            23
          ]
        }
      ],
      "linecol": [
        209,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8815",
      "linecol": [
        216,
        7
      ]
    },
    "linecol": [
      216,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=V,C:IPCAPTAXi)",
          "linecol": [
            222,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IPCAPTAXTOT",
          "linecol": [
            222,
            1
          ]
        },
        "linecol": [
          222,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      218,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      218,
                      10
                    ]
                  }
                ],
                "linecol": [
                  218,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  218,
                  6
                ]
              },
              "linecol": [
                218,
                6
              ]
            }
          ],
          "linecol": [
            218,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "PCAPTAXi - arr(PCAPTAXi * TX_DEDPER/100)",
            "linecol": [
              219,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "BPCAPTAXi",
            "linecol": [
              219,
              1
            ]
          },
          "linecol": [
            219,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          218,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      220,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      220,
                      10
                    ]
                  }
                ],
                "linecol": [
                  220,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  220,
                  6
                ]
              },
              "linecol": [
                220,
                6
              ]
            }
          ],
          "linecol": [
            220,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "arr(BPCAPTAXi * T_PCAPTAX/100)",
            "linecol": [
              221,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "IPCAPTAXi",
            "linecol": [
              221,
              1
            ]
          },
          "linecol": [
            221,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          220,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            217,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            217,
            23
          ]
        }
      ],
      "linecol": [
        217,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8816",
      "linecol": [
        223,
        7
      ]
    },
    "linecol": [
      223,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "IPCAPTAXTOT - CICAP",
          "linecol": [
            225,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IPCAPTAXT",
          "linecol": [
            225,
            1
          ]
        },
        "linecol": [
          225,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            224,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            224,
            23
          ]
        }
      ],
      "linecol": [
        224,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  }
]
