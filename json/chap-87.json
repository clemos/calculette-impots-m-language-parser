[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                22,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                22,
                23
              ]
            }
          ],
          "linecol": [
            22,
            15
          ]
        }
      ],
      "linecol": [
        22,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=V,C,P: FEXi)",
          "linecol": [
            23,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XFORFAIT",
          "linecol": [
            23,
            1
          ]
        },
        "linecol": [
          23,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8740",
      "linecol": [
        21,
        7
      ]
    },
    "linecol": [
      21,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                25,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                25,
                23
              ]
            }
          ],
          "linecol": [
            25,
            15
          ]
        }
      ],
      "linecol": [
        25,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=V,C,P: XACCESSi)",
          "linecol": [
            26,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XACCESS",
          "linecol": [
            26,
            1
          ]
        },
        "linecol": [
          26,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8741",
      "linecol": [
        24,
        7
      ]
    },
    "linecol": [
      24,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                28,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                28,
                23
              ]
            }
          ],
          "linecol": [
            28,
            15
          ]
        }
      ],
      "linecol": [
        28,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      29,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      29,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      29,
                      14
                    ]
                  }
                ],
                "linecol": [
                  29,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  29,
                  6
                ]
              },
              "linecol": [
                29,
                6
              ]
            }
          ],
          "linecol": [
            29,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "BAHEXi + BAEXi",
            "linecol": [
              30,
              8
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBAi",
            "linecol": [
              30,
              1
            ]
          },
          "linecol": [
            30,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          29,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      31,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      31,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      31,
                      14
                    ]
                  }
                ],
                "linecol": [
                  31,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  31,
                  6
                ]
              },
              "linecol": [
                31,
                6
              ]
            }
          ],
          "linecol": [
            31,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "BIHEXi + BICEXi",
            "linecol": [
              32,
              9
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBIPi",
            "linecol": [
              32,
              1
            ]
          },
          "linecol": [
            32,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          31,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      33,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      33,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      33,
                      14
                    ]
                  }
                ],
                "linecol": [
                  33,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  33,
                  6
                ]
              },
              "linecol": [
                33,
                6
              ]
            }
          ],
          "linecol": [
            33,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "BICNPHEXi + BICNPEXi",
            "linecol": [
              34,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBINPi",
            "linecol": [
              34,
              1
            ]
          },
          "linecol": [
            34,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          33,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      35,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      35,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      35,
                      14
                    ]
                  }
                ],
                "linecol": [
                  35,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  35,
                  6
                ]
              },
              "linecol": [
                35,
                6
              ]
            }
          ],
          "linecol": [
            35,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "BNHEXi + BNCEXi",
            "linecol": [
              36,
              8
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBNi",
            "linecol": [
              36,
              1
            ]
          },
          "linecol": [
            36,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          35,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      37,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      37,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      37,
                      14
                    ]
                  }
                ],
                "linecol": [
                  37,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  37,
                  6
                ]
              },
              "linecol": [
                37,
                6
              ]
            }
          ],
          "linecol": [
            37,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "BNCNPREXi+BNCNPREXAAi",
            "linecol": [
              38,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBNNPi",
            "linecol": [
              38,
              1
            ]
          },
          "linecol": [
            38,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          37,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8745",
      "linecol": [
        27,
        7
      ]
    },
    "linecol": [
      27,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                40,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                40,
                23
              ]
            }
          ],
          "linecol": [
            40,
            15
          ]
        }
      ],
      "linecol": [
        40,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      41,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      41,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      41,
                      12
                    ]
                  }
                ],
                "linecol": [
                  41,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  41,
                  6
                ]
              },
              "linecol": [
                41,
                6
              ]
            }
          ],
          "linecol": [
            41,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "(BICEXi + BICNOi)",
            "linecol": [
              42,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBICHDi",
            "linecol": [
              42,
              1
            ]
          },
          "linecol": [
            42,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          41,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      43,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      43,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      43,
                      12
                    ]
                  }
                ],
                "linecol": [
                  43,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  43,
                  6
                ]
              },
              "linecol": [
                43,
                6
              ]
            }
          ],
          "linecol": [
            43,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XBICHDi - (BICDNi * (1 - positif(ART1731BIS) ))",
            "linecol": [
              44,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBICNETi",
            "linecol": [
              44,
              1
            ]
          },
          "linecol": [
            44,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          43,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      45,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      45,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      45,
                      12
                    ]
                  }
                ],
                "linecol": [
                  45,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  45,
                  6
                ]
              },
              "linecol": [
                45,
                6
              ]
            }
          ],
          "linecol": [
            45,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XBICNETi + BA1Ai",
            "linecol": [
              46,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBICSi",
            "linecol": [
              46,
              1
            ]
          },
          "linecol": [
            46,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          45,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      47,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      47,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      47,
                      12
                    ]
                  }
                ],
                "linecol": [
                  47,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  47,
                  6
                ]
              },
              "linecol": [
                47,
                6
              ]
            }
          ],
          "linecol": [
            47,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "BICNPEXi + BICREi",
            "linecol": [
              48,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBICNPHDi",
            "linecol": [
              48,
              1
            ]
          },
          "linecol": [
            48,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          47,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      49,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      49,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      49,
                      12
                    ]
                  }
                ],
                "linecol": [
                  49,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  49,
                  6
                ]
              },
              "linecol": [
                49,
                6
              ]
            }
          ],
          "linecol": [
            49,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XBICNPHDi - (min(BICDEi,BICDEi1731+0) * positif(ART1731BIS) + BICDEi * (1 - ART1731BIS))",
            "linecol": [
              50,
              14
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBICNPNETi",
            "linecol": [
              50,
              1
            ]
          },
          "linecol": [
            50,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          49,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      51,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      51,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      51,
                      12
                    ]
                  }
                ],
                "linecol": [
                  51,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  51,
                  6
                ]
              },
              "linecol": [
                51,
                6
              ]
            }
          ],
          "linecol": [
            51,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XBICNPNETi + BI2Ai",
            "linecol": [
              52,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBICNPSi",
            "linecol": [
              52,
              1
            ]
          },
          "linecol": [
            52,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          51,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      53,
                      11
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      53,
                      13
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      53,
                      15
                    ]
                  }
                ],
                "linecol": [
                  53,
                  11
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  53,
                  7
                ]
              },
              "linecol": [
                53,
                7
              ]
            }
          ],
          "linecol": [
            53,
            7
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "max (0 , XBICNETi + max (0,XBICNPNETi ))",
            "linecol": [
              54,
              9
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBITi",
            "linecol": [
              54,
              1
            ]
          },
          "linecol": [
            54,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          53,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      55,
                      11
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      55,
                      13
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      55,
                      15
                    ]
                  }
                ],
                "linecol": [
                  55,
                  11
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  55,
                  7
                ]
              },
              "linecol": [
                55,
                7
              ]
            }
          ],
          "linecol": [
            55,
            7
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif(max(0,XBICNETi + max(0,XBICNPNETi))) * ( BI2Ai  + BI1Ai  )",
            "linecol": [
              56,
              9
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBISi",
            "linecol": [
              56,
              1
            ]
          },
          "linecol": [
            56,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          55,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      59,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      59,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      59,
                      12
                    ]
                  }
                ],
                "linecol": [
                  59,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  59,
                  6
                ]
              },
              "linecol": [
                59,
                6
              ]
            }
          ],
          "linecol": [
            59,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XBICHDi + XBICNPHDi",
            "linecol": [
              60,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XBICIMPi",
            "linecol": [
              60,
              1
            ]
          },
          "linecol": [
            60,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          59,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "872",
      "linecol": [
        39,
        7
      ]
    },
    "linecol": [
      39,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                62,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                62,
                23
              ]
            }
          ],
          "linecol": [
            62,
            15
          ]
        }
      ],
      "linecol": [
        62,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      63,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      63,
                      10
                    ]
                  }
                ],
                "linecol": [
                  63,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  63,
                  6
                ]
              },
              "linecol": [
                63,
                6
              ]
            }
          ],
          "linecol": [
            63,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "somme(x=1..3:GLDxi) + TSBNi + BPCOSAi + TSASSUi + XETRANi + EXOCETi + GLDGRATi",
            "linecol": [
              64,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XTSBi",
            "linecol": [
              64,
              1
            ]
          },
          "linecol": [
            64,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          63,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      67,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      67,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      67,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      67,
                      14
                    ]
                  }
                ],
                "linecol": [
                  67,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  67,
                  6
                ]
              },
              "linecol": [
                67,
                6
              ]
            }
          ],
          "linecol": [
            67,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "TSBNi",
            "linecol": [
              68,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XTSBi",
            "linecol": [
              68,
              1
            ]
          },
          "linecol": [
            68,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          67,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      69,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      69,
                      10
                    ]
                  }
                ],
                "linecol": [
                  69,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  69,
                  6
                ]
              },
              "linecol": [
                69,
                6
              ]
            }
          ],
          "linecol": [
            69,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XTSBi + CARTSi + REMPLAi",
            "linecol": [
              70,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XEXTSi",
            "linecol": [
              70,
              1
            ]
          },
          "linecol": [
            70,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          69,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      71,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      71,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      71,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      71,
                      14
                    ]
                  }
                ],
                "linecol": [
                  71,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  71,
                  6
                ]
              },
              "linecol": [
                71,
                6
              ]
            }
          ],
          "linecol": [
            71,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XTSBi + CARTSPi + REMPLAPi",
            "linecol": [
              72,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XEXTSi",
            "linecol": [
              72,
              1
            ]
          },
          "linecol": [
            72,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          71,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8728",
      "linecol": [
        61,
        7
      ]
    },
    "linecol": [
      61,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                74,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                74,
                23
              ]
            }
          ],
          "linecol": [
            74,
            15
          ]
        }
      ],
      "linecol": [
        74,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      75,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      75,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      75,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      75,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      75,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      75,
                      20
                    ]
                  }
                ],
                "linecol": [
                  75,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  75,
                  6
                ]
              },
              "linecol": [
                75,
                6
              ]
            }
          ],
          "linecol": [
            75,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "arr (XEXTSi * TX_DEDFORFTS /100)",
            "linecol": [
              76,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XTPS10i",
            "linecol": [
              76,
              1
            ]
          },
          "linecol": [
            76,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          75,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      77,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      77,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      77,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      77,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      77,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      77,
                      20
                    ]
                  }
                ],
                "linecol": [
                  77,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  77,
                  6
                ]
              },
              "linecol": [
                77,
                6
              ]
            }
          ],
          "linecol": [
            77,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "min( PLAF_DEDFORFTS , XTPS10i )",
            "linecol": [
              78,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XDFNi",
            "linecol": [
              78,
              1
            ]
          },
          "linecol": [
            78,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          77,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8731",
      "linecol": [
        73,
        7
      ]
    },
    "linecol": [
      73,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                80,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                80,
                23
              ]
            }
          ],
          "linecol": [
            80,
            15
          ]
        }
      ],
      "linecol": [
        80,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      81,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      81,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      81,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      81,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      81,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      81,
                      20
                    ]
                  }
                ],
                "linecol": [
                  81,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  81,
                  6
                ]
              },
              "linecol": [
                81,
                6
              ]
            }
          ],
          "linecol": [
            81,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "max( min(XTSBi,DEDMINi) , XDFNi )",
            "linecol": [
              82,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "X10MINSi",
            "linecol": [
              82,
              1
            ]
          },
          "linecol": [
            82,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          81,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      83,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      83,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      83,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      83,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      83,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      83,
                      20
                    ]
                  }
                ],
                "linecol": [
                  83,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  83,
                  6
                ]
              },
              "linecol": [
                83,
                6
              ]
            }
          ],
          "linecol": [
            83,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif_ou_nul(X10MINSi-FRNi)",
            "linecol": [
              84,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XIND_10i",
            "linecol": [
              84,
              1
            ]
          },
          "linecol": [
            84,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          83,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      85,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      85,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      85,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      85,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      85,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      85,
                      20
                    ]
                  }
                ],
                "linecol": [
                  85,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  85,
                  6
                ]
              },
              "linecol": [
                85,
                6
              ]
            }
          ],
          "linecol": [
            85,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "X10MINSi",
            "linecol": [
              86,
              8
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XDFi",
            "linecol": [
              86,
              1
            ]
          },
          "linecol": [
            86,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          85,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      87,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      87,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      87,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      87,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      87,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      87,
                      20
                    ]
                  }
                ],
                "linecol": [
                  87,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  87,
                  6
                ]
              },
              "linecol": [
                87,
                6
              ]
            }
          ],
          "linecol": [
            87,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XDFi * XIND_10i + FRDi * (1 - XIND_10i)",
            "linecol": [
              88,
              9
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XFPTi",
            "linecol": [
              88,
              1
            ]
          },
          "linecol": [
            88,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          87,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      89,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      89,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      89,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      89,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      89,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      89,
                      20
                    ]
                  }
                ],
                "linecol": [
                  89,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  89,
                  6
                ]
              },
              "linecol": [
                89,
                6
              ]
            }
          ],
          "linecol": [
            89,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XEXTSi - XFPTi",
            "linecol": [
              90,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XTSNTi",
            "linecol": [
              90,
              1
            ]
          },
          "linecol": [
            90,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          89,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8729",
      "linecol": [
        79,
        7
      ]
    },
    "linecol": [
      79,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                92,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                92,
                23
              ]
            }
          ],
          "linecol": [
            92,
            15
          ]
        }
      ],
      "linecol": [
        92,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      93,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      93,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      93,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      93,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      93,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      93,
                      20
                    ]
                  }
                ],
                "linecol": [
                  93,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  93,
                  6
                ]
              },
              "linecol": [
                93,
                6
              ]
            }
          ],
          "linecol": [
            93,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "positif (-XTSNTi) * min (0 , XTSNTi) + positif_ou_nul (XTSNTi) * XTSNTi",
            "linecol": [
              94,
              9
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XTSNi",
            "linecol": [
              94,
              1
            ]
          },
          "linecol": [
            94,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          93,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8734",
      "linecol": [
        91,
        7
      ]
    },
    "linecol": [
      91,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                97,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                97,
                23
              ]
            }
          ],
          "linecol": [
            97,
            15
          ]
        }
      ],
      "linecol": [
        97,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "somme(i=V,C:XEXOCETi)",
          "linecol": [
            115,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XEXOCET",
          "linecol": [
            115,
            1
          ]
        },
        "linecol": [
          115,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      98,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      98,
                      12
                    ]
                  }
                ],
                "linecol": [
                  98,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  98,
                  6
                ]
              },
              "linecol": [
                98,
                6
              ]
            }
          ],
          "linecol": [
            98,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "XTSNi -  somme(x=1..3: max(0,GLDxi - ABGLxi))",
            "linecol": [
              99,
              8
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XTSi",
            "linecol": [
              99,
              1
            ]
          },
          "linecol": [
            99,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          98,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      100,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      100,
                      12
                    ]
                  }
                ],
                "linecol": [
                  100,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  100,
                  6
                ]
              },
              "linecol": [
                100,
                6
              ]
            }
          ],
          "linecol": [
            100,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "arr( positif(XTSNi) * XTSNi * (TSASSUi/XEXTSi)) * XIND_10i + (1-XIND_10i) * TSASSUi",
            "linecol": [
              101,
              10
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XTSNNi",
            "linecol": [
              101,
              1
            ]
          },
          "linecol": [
            101,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          100,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      105,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      105,
                      12
                    ]
                  }
                ],
                "linecol": [
                  105,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  105,
                  6
                ]
              },
              "linecol": [
                105,
                6
              ]
            }
          ],
          "linecol": [
            105,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "arr( positif(XTSNi) * XTSNi * (XETRANi/XEXTSi)) * XIND_10i + (1-XIND_10i) * XETRANi",
            "linecol": [
              106,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XETSNNi",
            "linecol": [
              106,
              1
            ]
          },
          "linecol": [
            106,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          105,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      110,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      110,
                      12
                    ]
                  }
                ],
                "linecol": [
                  110,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  110,
                  6
                ]
              },
              "linecol": [
                110,
                6
              ]
            }
          ],
          "linecol": [
            110,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "arr( positif(XTSNi) * XTSNi * (EXOCETi/XEXTSi)) * XIND_10i + (1-XIND_10i) * EXOCETi",
            "linecol": [
              111,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "XEXOCETi",
            "linecol": [
              111,
              1
            ]
          },
          "linecol": [
            111,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          110,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8735",
      "linecol": [
        96,
        7
      ]
    },
    "linecol": [
      96,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                118,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                118,
                23
              ]
            }
          ],
          "linecol": [
            118,
            15
          ]
        }
      ],
      "linecol": [
        118,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "ELURASC + ELURASV",
          "linecol": [
            119,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "XELU",
          "linecol": [
            119,
            1
          ]
        },
        "linecol": [
          119,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "876",
      "linecol": [
        117,
        7
      ]
    },
    "linecol": [
      117,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                121,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                121,
                23
              ]
            }
          ],
          "linecol": [
            121,
            15
          ]
        }
      ],
      "linecol": [
        121,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(BPVSJ + BPVSK + BPV18V + BPV18C + BPCOPTV + BPCOPTC + BPV40V + BPV40C + PEA + GAINPEA)",
          "linecol": [
            123,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PVTAUX",
          "linecol": [
            123,
            1
          ]
        },
        "linecol": [
          123,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "880",
      "linecol": [
        120,
        7
      ]
    },
    "linecol": [
      120,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                125,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                125,
                23
              ]
            }
          ],
          "linecol": [
            125,
            15
          ]
        }
      ],
      "linecol": [
        125,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "arr(GLN2 * GL2 / REV2)",
          "linecol": [
            126,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN2NET",
          "linecol": [
            126,
            1
          ]
        },
        "linecol": [
          126,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr(GLN3 * GL3 / REV3)",
          "linecol": [
            127,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GLN3NET",
          "linecol": [
            127,
            1
          ]
        },
        "linecol": [
          127,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TEGL1 + TEGL2 + TEGL3 + RPQ4 + somme (x=V,C,1..4 : TERPQPRRx+TERPQPRRZx+ TEGLFx+ TERPQTSx+ TERPQTSREMPx+TERPQPALIMx) + TERPQRF1 + TEGLRF2 + TERPQRCMDC + TERPQRCMFU + TERPQRCMCH + TERPQRCMTS + TERPQRCMGO + TERPQRCMTR + TERPQRVO + TERPQRVO5 + TERPQRVO6 + TERPQRVO7",
          "linecol": [
            128,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "QUOKIRE",
          "linecol": [
            128,
            1
          ]
        },
        "linecol": [
          128,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "875",
      "linecol": [
        124,
        7
      ]
    },
    "linecol": [
      124,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                133,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                133,
                23
              ]
            }
          ],
          "linecol": [
            133,
            15
          ]
        }
      ],
      "linecol": [
        133,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "BPCAPTAXV + BPCAPTAXC + somme( i=V,C,P: XBAi+XBIPi+XBINPi+XBNi+XBNNPi) + somme (i=V,C,P: MIBEXi + MIBNPEXi + BNCPROEXi + XSPENPi) + somme (i=V,C,P: BNCCRi) + somme (i=V,C,P: BNCCRFi) + somme (i=V,C: XETSNNi) + somme (i=V,C: XEXOCETi) + somme (i=V,C: XTSNNi) + somme (i=V,C: XTSNNTYi) + somme (i=V,C,1,2,3,4: XHSUPTSNNi) + XFORFAIT + XACCESS + RCMLIB + PPLIB + GAINABDET + RCMEXCREF + RCM2FA + XELU + RCMIMPAT + PVIMMO + PVMOBNR + PVTITRESOC + BTP3A + (1 - positif( IPVLOC )) * (1-positif(present(TAX1649)+present(RE168))) * ( PVTAUX                                                                      ) ",
          "linecol": [
            135,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "VARREVKIRE",
          "linecol": [
            135,
            1
          ]
        },
        "linecol": [
          135,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0,(BPVRCM + COD3SG + COD3SL + ABDETPLUS + ABIMPPV) - (DPVRCM + COD3SH + COD3SM + ABDETMOINS + ABIMPMV))",
          "linecol": [
            159,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PVTXEFF2",
          "linecol": [
            159,
            1
          ]
        },
        "linecol": [
          159,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(PVTAXSB + BPVRCM - PVTXEFF2) * positif(present(IPTEFN) + present(IPTEFP))",
          "linecol": [
            160,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PVTXEFF",
          "linecol": [
            160,
            1
          ]
        },
        "linecol": [
          160,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "(1-null(IND_TDR)) * arr ( max ( 0, ( (1-positif((max(0,VARIPTEFP-PVTXEFF) * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) +((VARIPTEFN+PVTXEFF*present(IPTEFN)) * positif(ART1731BIS) + (IPTEFN+PVTXEFF*present(IPTEFN)) * (1 - ART1731BIS))+INDTEFF)) * (RI1RFR) + positif((max(0,VARIPTEFP-PVTXEFF) * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) +((VARIPTEFN+PVTXEFF*present(IPTEFN)) * positif(ART1731BIS) + (IPTEFN+PVTXEFF*present(IPTEFN)) * (1 - ART1731BIS))+INDTEFF) * (max(0,VARIPTEFP-PVTXEFF) * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) + positif((max(0,VARIPTEFP-PVTXEFF) * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) +((VARIPTEFN+PVTXEFF*present(IPTEFN)) * positif(ART1731BIS) + (IPTEFN+PVTXEFF*present(IPTEFN)) * (1 - ART1731BIS))+INDTEFF) * positif(- TEFFN - DRBG - RNIDF + (APERPV + APERPC + APERPP)* (1 - positif(null(2-V_REGCO) + null(4-V_REGCO))) + QUOKIRE)* ( (APERPV + APERPC + APERPP)* (1 - positif(null(2-V_REGCO) + null(4-V_REGCO))) + QUOKIRE ) + max(0,TEFFREVTOTRFR*INDTEFF) * (1-positif((max(0,VARIPTEFP- PVTXEFF) * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)))) ) * (1-present(IND_TDR)) + IND_TDR + (1-positif((max(0,VARIPTEFP - PVTXEFF)* positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) +((VARIPTEFN+PVTXEFF*present(IPTEFN)) * positif(ART1731BIS) + (IPTEFN+PVTXEFF*present(IPTEFN))* (1 - ART1731BIS))+INDTEFF)) * (QUOKIRE + (APERPV + APERPC + APERPP)* (1 - positif(null(2-V_REGCO) + null(4-V_REGCO))) ) +  VARREVKIRE ) ) ",
          "linecol": [
            161,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REVKIRE",
          "linecol": [
            161,
            1
          ]
        },
        "linecol": [
          161,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "TGL1 + TGL2 + TGL3 + TGL4 + somme (x=V,C,1..4 : TGLPRRx+TGLPRRZx+ TGLFx+ TGLTSx+ TGLTSREMPx+TGLPALIMx) + TGLRF1 + TGLRF2 + TGLRCMDC + TGLRCMFU + TGLRCMCH + TGLRCMTS + TGLRCMGO + TGLRCMTR + TGLRVO + TGLRVO5 + TGLRVO6 + TGLRVO7",
          "linecol": [
            190,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "QUOKIREHR",
          "linecol": [
            190,
            1
          ]
        },
        "linecol": [
          190,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "((1-null(IND_TDR)) * arr ( max ( 0, ( (1-positif((max(0,VARIPTEFP-PVTXEFF)  * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) +((VARIPTEFN+PVTXEFF*present(IPTEFN))  * positif(ART1731BIS) + (IPTEFN+ PVTXEFF*present(IPTEFN)) * (1 - ART1731BIS))+INDTEFF)) * (RI1RFRHR) + positif((max(0,VARIPTEFP-PVTXEFF)  * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) +((VARIPTEFN+PVTXEFF*present(IPTEFN))  * positif(ART1731BIS) + (IPTEFN+ PVTXEFF*present(IPTEFN)) * (1 - ART1731BIS))+INDTEFF) * (max(0,VARIPTEFP-PVTXEFF)  * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) + positif((max(0,VARIPTEFP-PVTXEFF)  * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) +((VARIPTEFN+PVTXEFF*present(IPTEFN))  * positif(ART1731BIS) + (IPTEFN+PVTXEFF*present(IPTEFN))  * (1 - ART1731BIS))+INDTEFF) * positif(- TEFFN - DRBG - RNIDF + (APERPV + APERPC + APERPP)* (1 - positif(null(2-V_REGCO) + null(4-V_REGCO))) + QUOKIREHR)* ( (APERPV + APERPC + APERPP)* (1 - positif(null(2-V_REGCO) + null(4-V_REGCO))) + QUOKIREHR ) + max(0,TEFFREVTOTRFRHR*INDTEFF) * (1-positif((max(0,VARIPTEFP- PVTXEFF) * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)))) ) * (1-present(IND_TDR)) + IND_TDR + (1-positif((max(0,VARIPTEFP- PVTXEFF) * positif(ART1731BIS) + max(0,IPTEFP-PVTXEFF) * (1 - ART1731BIS)) +((VARIPTEFN+PVTXEFF*present(IPTEFN)) * positif(ART1731BIS) + (IPTEFN+PVTXEFF*present(IPTEFN)) * (1 - ART1731BIS))+INDTEFF)) * (QUOKIREHR + (APERPV + APERPC + APERPP)* (1 - positif(null(2-V_REGCO) + null(4-V_REGCO)))) +  VARREVKIRE ) ) ) * (1-present(COD8YM)) + COD8YM",
          "linecol": [
            194,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REVKIREHR",
          "linecol": [
            194,
            1
          ]
        },
        "linecol": [
          194,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      188,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      188,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      188,
                      12
                    ]
                  }
                ],
                "linecol": [
                  188,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  188,
                  6
                ]
              },
              "linecol": [
                188,
                6
              ]
            }
          ],
          "linecol": [
            188,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "expression",
            "value": "BNCCRi + BNCCRFi",
            "linecol": [
              189,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "BNCCREAi",
            "linecol": [
              189,
              1
            ]
          },
          "linecol": [
            189,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          188,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "8727",
      "linecol": [
        132,
        7
      ]
    },
    "linecol": [
      132,
      1
    ]
  },
  {
    "application": {
      "type": "regle_application",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                221,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                221,
                22
              ]
            }
          ],
          "linecol": [
            221,
            15
          ]
        }
      ],
      "linecol": [
        221,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "PPENBJ",
          "linecol": [
            222,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CDEVDUR_NBJ",
          "linecol": [
            222,
            1
          ]
        },
        "linecol": [
          222,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr(REVKIRE * 360/CDEVDUR_NBJ)",
          "linecol": [
            223,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CKIREDUR",
          "linecol": [
            223,
            1
          ]
        },
        "linecol": [
          223,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "CKIREDUR",
          "linecol": [
            224,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REVKIREDUR2",
          "linecol": [
            224,
            1
          ]
        },
        "linecol": [
          224,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "410",
      "linecol": [
        220,
        7
      ]
    },
    "linecol": [
      220,
      1
    ]
  }
]
