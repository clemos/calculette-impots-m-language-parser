[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "name": {
      "type": "symbol",
      "name": "8200",
      "linecol": [
        22,
        7
      ]
    },
    "linecol": [
      22,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "18000 + max(0, arr( max(0, RI1 + TONEQUO1) * (4/100))) * (1 - positif((VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)))) + max(0, arr( max(0, (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)) + TONEQUOM1 )* (4/100)) ) * positif( (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)) )",
          "linecol": [
            24,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIMIT12",
          "linecol": [
            24,
            1
          ]
        },
        "linecol": [
          24,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "18000 + max(0, arr( max(0, RI1 + TONEQUO1) * (6/100))) * (1 - positif( (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)))) + max(0, arr( max(0, (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)) + TONEQUOM1 ) * (6/100)) ) * positif( (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)) )",
          "linecol": [
            33,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIMIT11",
          "linecol": [
            33,
            1
          ]
        },
        "linecol": [
          33,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "20000 + max(0, arr( max(0, RI1 + TONEQUO1) * (8/100))) * (1 - positif( (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)))) + max(0, arr( max(0, (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)) + TONEQUOM1 ) * (8/100)) ) * positif( (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)))",
          "linecol": [
            42,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIMIT10",
          "linecol": [
            42,
            1
          ]
        },
        "linecol": [
          42,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "25000 + max(0, arr( max(0, RI1 + TONEQUO1) * (10/100))) * (1 - positif( (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)))) + max(0, arr( max(0, (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)) + TONEQUOM1 ) * (10/100)) ) * positif( (VARRMOND * positif(ART1731BIS) + RMOND * (1 - ART1731BIS)))",
          "linecol": [
            51,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIMIT9",
          "linecol": [
            51,
            1
          ]
        },
        "linecol": [
          51,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            23,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            23,
            23
          ]
        }
      ],
      "linecol": [
        23,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8201",
      "linecol": [
        61,
        7
      ]
    },
    "linecol": [
      61,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "NAPTIR - (PIR+PTAXA+PPCAP+PHAUTREV+PTAXLOY) * positif(abs(NAPTIR))",
          "linecol": [
            63,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "NAPSANSPENA",
          "linecol": [
            63,
            1
          ]
        },
        "linecol": [
          63,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "V_NAPTEO * (1 - 2 * V_NEGTEO) - NAPSANSPENA",
          "linecol": [
            64,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AVFISCO",
          "linecol": [
            64,
            1
          ]
        },
        "linecol": [
          64,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            62,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            62,
            23
          ]
        }
      ],
      "linecol": [
        62,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8202",
      "linecol": [
        66,
        7
      ]
    },
    "linecol": [
      66,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "AVPLAF9 + AVPLAF10 + AVPLAF11 + AVPLAF12 + AVPLAF13",
          "linecol": [
            68,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AVFISCOPTER",
          "linecol": [
            68,
            1
          ]
        },
        "linecol": [
          68,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            67,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            67,
            23
          ]
        }
      ],
      "linecol": [
        67,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "82463",
      "linecol": [
        69,
        7
      ]
    },
    "linecol": [
      69,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, arr( RSOC4+RSOC8 + RSOC34+RSOC38 - ( RSOC4+RSOC8 + RSOC34+RSOC38 )*(TX65/100)) ) * (1 - V_CNR) * (1-ART1731BIS)",
          "linecol": [
            72,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A13RSOC",
          "linecol": [
            72,
            1
          ]
        },
        "linecol": [
          72,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            70,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            70,
            23
          ]
        }
      ],
      "linecol": [
        70,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "82462",
      "linecol": [
        75,
        7
      ]
    },
    "linecol": [
      75,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, arr(RSOC3+RSOC7 + RSOC26+RSOC30 + RSOC33+RSOC37 - ( RSOC3+RSOC7 + RSOC26+RSOC30 + RSOC33+RSOC37 )*(TX65/100)) ) * (1 - V_CNR) * (1-ART1731BIS)",
          "linecol": [
            79,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A12RSOC",
          "linecol": [
            79,
            1
          ]
        },
        "linecol": [
          79,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            76,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            76,
            23
          ]
        }
      ],
      "linecol": [
        76,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "82461",
      "linecol": [
        83,
        7
      ]
    },
    "linecol": [
      83,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, arr( RSOC2+RSOC6 + RSOC19+RSOC22 + RSOC25+RSOC29 + RSOC32+RSOC36 - (RSOC2+RSOC6 + RSOC19+RSOC22 + RSOC25+RSOC29 + RSOC32+RSOC36)*(TX65/100))  ) * (1-ART1731BIS) * (1 - V_CNR)",
          "linecol": [
            86,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A11RSOC",
          "linecol": [
            86,
            1
          ]
        },
        "linecol": [
          86,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            84,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            84,
            23
          ]
        }
      ],
      "linecol": [
        84,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8246",
      "linecol": [
        92,
        7
      ]
    },
    "linecol": [
      92,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, arr( RSOC1+RSOC5 + RSOC14+RSOC16 + RSOC18+RSOC21 + RSOC24+RSOC28 + RSOC31+RSOC35 - (RSOC1+RSOC5 + RSOC14+RSOC16 + RSOC18+RSOC21 + RSOC24+RSOC28 + RSOC31+RSOC35)*(TX65/100))  )*(1-ART1731BIS) * (1 - V_CNR)",
          "linecol": [
            95,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A10RSOC",
          "linecol": [
            95,
            1
          ]
        },
        "linecol": [
          95,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            93,
            16
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            93,
            24
          ]
        }
      ],
      "linecol": [
        93,
        16
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "82473",
      "linecol": [
        101,
        7
      ]
    },
    "linecol": [
      101,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "( RENT18 + RENT24 + RLOC106 + RLOC112 + max (0 , RENT12+RENT36 + RENT06+RENT30 + RLOC100+RLOC124 + RLOC94+RLOC120 - ( arr((RENT12+RENT36)*(5263/10000)) + arr((RENT06+RENT30)*(625/1000)) + arr((RLOC100+RLOC124)*(5263/10000)) + arr((RLOC94+RLOC120)*(625/1000)) )) ) * (1 - V_CNR)",
          "linecol": [
            105,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A13RENT1",
          "linecol": [
            105,
            1
          ]
        },
        "linecol": [
          105,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, A13RENT1 * (1-ART1731BIS) + min( A13RENT1731+0 , A13RENT1 ) *ART1731BIS ) * (1 - V_CNR)",
          "linecol": [
            113,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A13RENT",
          "linecol": [
            113,
            1
          ]
        },
        "linecol": [
          113,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            102,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            102,
            23
          ]
        }
      ],
      "linecol": [
        102,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "82472",
      "linecol": [
        116,
        7
      ]
    },
    "linecol": [
      116,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "( RENT17 + RENT23 + RLOC105 + RLOC111 + RLOC67 + RLOC74 + max (0 , RENT11+RENT35 + RENT05+RENT29 + RLOC60+RLOC88 + RLOC53+RLOC81 + RLOC99+RLOC123 + RLOC93+RLOC119 - (arr((RENT11+RENT35)*(5263/10000)) + arr((RENT05+RENT29)*(625/1000)) + arr((RLOC60+RLOC88)*(5263/10000)) + arr((RLOC53+RLOC81)*(625/1000)) + arr((RLOC99+RLOC123)*(5263/10000)) + arr((RLOC93+RLOC119)*(625/1000)))) ) * (1 - V_CNR)",
          "linecol": [
            120,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A12RENT1",
          "linecol": [
            120,
            1
          ]
        },
        "linecol": [
          120,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, A12RENT1 * (1-ART1731BIS) + min( A12RENT1731+0 , A12RENT1 ) *ART1731BIS ) * (1 - V_CNR)",
          "linecol": [
            128,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A12RENT",
          "linecol": [
            128,
            1
          ]
        },
        "linecol": [
          128,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            117,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            117,
            23
          ]
        }
      ],
      "linecol": [
        117,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "82471",
      "linecol": [
        130,
        7
      ]
    },
    "linecol": [
      130,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "( RENT14+RENT20+RENT16+RENT22+RLOC102+RLOC108+RLOC104+RLOC110 +RLOC34+RLOC63+RLOC70+RLOC66+RLOC73 + max (0 , RLOC29+RLOC44 + RLOC24+RLOC39 + RLOC56+RLOC84 + RLOC49+RLOC77 + RLOC59+RLOC87 + RLOC52+RLOC80 + RENT08+RENT32 + RENT02+RENT26 + RENT10+RENT34 + RENT04+RENT28 + RLOC96+RLOC116 + RLOC90+RLOC114 + RLOC98+RLOC122 + RLOC92+RLOC118  - ( arr((RLOC29+RLOC44)*(5263/10000)) + arr((RLOC24+RLOC39)*(625/1000)) + arr((RLOC56+RLOC84)*(5263/10000)) + arr((RLOC49+RLOC77)*(625/1000)) + arr((RLOC59+RLOC87)*(5263/10000)) + arr((RLOC52+RLOC80)*(625/1000)) + arr((RENT08+RENT32)*(5263/10000)) + arr((RENT02+RENT26)*(625/1000)) + arr((RENT10+RENT34)*(5263/10000)) + arr((RENT04+RENT28)*(625/1000)) + arr((RLOC96+RLOC116)*(5263/10000))+ arr((RLOC90+RLOC114)*(625/1000))+ arr((RLOC98+RLOC122)*(5263/10000))+ arr((RLOC92+RLOC118)*(625/1000)))) ) * (1 - V_CNR)",
          "linecol": [
            133,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A11RENT1",
          "linecol": [
            133,
            1
          ]
        },
        "linecol": [
          133,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, A11RENT1 * (1-ART1731BIS) + min( A11RENT1731+0 , A11RENT1 ) *ART1731BIS ) * (1 - V_CNR)",
          "linecol": [
            149,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A11RENT",
          "linecol": [
            149,
            1
          ]
        },
        "linecol": [
          149,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            131,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            131,
            23
          ]
        }
      ],
      "linecol": [
        131,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8247",
      "linecol": [
        151,
        7
      ]
    },
    "linecol": [
      151,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "( RENT13+RENT19+RENT15+RENT21+RLOC101+RLOC107+RLOC103+RLOC109 +RLOC13+RLOC31+RLOC33+RLOC62+RLOC69+RLOC65+RLOC72 + max (0 , RLOC11+RLOC17 + RLOC09+RLOC15 + RLOC26+RLOC41 + RLOC21+RLOC36 + RLOC28+RLOC43 + RLOC55+RLOC83 + RLOC48+RLOC76 + RLOC58+RLOC86 + RLOC51+RLOC79 + RLOC23+RLOC38 + RENT07+RENT31 + RENT01+RENT25 + RENT09+RENT33 + RENT03+RENT27 + RLOC95+RLOC115 + RLOC89+RLOC113 + RLOC97+RLOC121 + RLOC91+RLOC117  - (arr((RLOC11+RLOC17)*(50/100)) + arr((RLOC09+RLOC15)*(60/100)) + arr((RLOC26+RLOC41)*(50/100)) + arr((RLOC21+RLOC36)*(60/100)) + arr((RLOC55+RLOC83)*(50/100)) + arr((RLOC48+RLOC76)*(60/100)) + arr((RLOC28+RLOC43)*(5263/10000)) + arr((RLOC23+RLOC38)*(625/1000)) + arr((RLOC58+RLOC86)*(5263/10000)) + arr((RLOC51+RLOC79)*(625/1000)) + arr((RENT07+RENT31)*(5263/10000)) + arr((RENT01+RENT25)*(625/1000))+ arr((RENT09+RENT33)*(5263/10000)) + arr((RENT03+RENT27)*(625/1000))+ arr((RLOC95+RLOC115)*(5263/10000)) + arr((RLOC89+RLOC113)*(625/1000)) + arr((RLOC97+RLOC121)*(5263/10000)) + arr((RLOC91+RLOC117)*(625/1000)))) ) * (1 - V_CNR)",
          "linecol": [
            154,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A10RENT1",
          "linecol": [
            154,
            1
          ]
        },
        "linecol": [
          154,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, A10RENT1 * (1-ART1731BIS) + min( A10RENT1731+0 , A10RENT1 ) *ART1731BIS ) * (1 - V_CNR)",
          "linecol": [
            172,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A10RENT",
          "linecol": [
            172,
            1
          ]
        },
        "linecol": [
          172,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            152,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            152,
            23
          ]
        }
      ],
      "linecol": [
        152,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "82492",
      "linecol": [
        174,
        7
      ]
    },
    "linecol": [
      174,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max( 0, PLAF_FOREST1 * (1 + BOOL_0AM) - ACOTFOR)",
          "linecol": [
            177,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAFRED_FORTRA",
          "linecol": [
            177,
            1
          ]
        },
        "linecol": [
          177,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min (REPSINFOR+REPFOR + REPSINFOR1+REPFOR1 + REPSINFOR2 + REPFOR2+REPSINFOR2+ REPFOR3+REPSINFOR4 , PLAFRED_FORTRA) - (REPSINFOR+REPFOR + REPSINFOR1+REPFOR1 + REPSINFOR2 + REPFOR2+REPSINFOR2)) * (1 - V_CNR)",
          "linecol": [
            179,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASE7UXI",
          "linecol": [
            179,
            1
          ]
        },
        "linecol": [
          179,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr((BASE7UXI)* TX18 / 100 )",
          "linecol": [
            182,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BA13UXI",
          "linecol": [
            182,
            1
          ]
        },
        "linecol": [
          182,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            175,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            175,
            23
          ]
        }
      ],
      "linecol": [
        175,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "824921",
      "linecol": [
        183,
        7
      ]
    },
    "linecol": [
      183,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min( BA13UXI ,IDOM11-DEC11-RCOTFOR-RREPA-RAIDE-RDIFAGRI-RFORET-RFIPDOM-RFIPC-RCINE -RRESTIMO-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RINNO-RSOUFIP-RRIRENOV -RLOGDOM-RCREAT-RCOMP-RRETU-RDONS-RDUFLOTOT-RPINELTOT-RNOUV-RPLAFREPME4 -A9RFOR-A10RFOR-A11RFOR-A12RFOR ) ) * (1-ART1731BIS)",
          "linecol": [
            185,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A13UXI",
          "linecol": [
            185,
            1
          ]
        },
        "linecol": [
          185,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            184,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            184,
            23
          ]
        }
      ],
      "linecol": [
        184,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "824922",
      "linecol": [
        191,
        7
      ]
    },
    "linecol": [
      191,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(min (RDFOREST, PLAF_FOREST * (1 + BOOL_0AM))) * (1 - V_CNR)",
          "linecol": [
            194,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASE7UN",
          "linecol": [
            194,
            1
          ]
        },
        "linecol": [
          194,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr(BASE7UN * TX18 / 100 )",
          "linecol": [
            195,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BA14UN",
          "linecol": [
            195,
            1
          ]
        },
        "linecol": [
          195,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min( BA14UN ,IDOM11-DEC11-RCOTFOR-RREPA-RAIDE-RDIFAGRI-RFORET-RFIPDOM-RFIPC-RCINE -RRESTIMO-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RINNO-RSOUFIP-RRIRENOV -RLOGDOM-RCREAT-RCOMP-RRETU-RDONS-RDUFLOTOT-RPINELTOT-RNOUV-RPLAFREPME4 -A9RFOR-A10RFOR-A11RFOR-A12RFOR-A13UXI) ) * (1-ART1731BIS)",
          "linecol": [
            197,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A14UN",
          "linecol": [
            197,
            1
          ]
        },
        "linecol": [
          197,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            192,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            192,
            23
          ]
        }
      ],
      "linecol": [
        192,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "824923",
      "linecol": [
        206,
        7
      ]
    },
    "linecol": [
      206,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "( A13UXI + A14UN ) * (1-ART1731BIS)",
          "linecol": [
            208,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A13RFOR",
          "linecol": [
            208,
            1
          ]
        },
        "linecol": [
          208,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            207,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            207,
            23
          ]
        }
      ],
      "linecol": [
        207,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "824910",
      "linecol": [
        212,
        7
      ]
    },
    "linecol": [
      212,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min (REPFOR+REPSINFOR + REPFOR1+REPSINFOR1 + REPFOR2+REPSINFOR2+REPSINFOR3 , PLAFRED_FORTRA) - (REPFOR+REPSINFOR + REPFOR1+REPSINFOR1+REPSINFOR2)) * (1 - V_CNR)",
          "linecol": [
            215,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASE7UWH",
          "linecol": [
            215,
            1
          ]
        },
        "linecol": [
          215,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr(BASE7UWH * TX18 / 100 )",
          "linecol": [
            218,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BA12RFOR",
          "linecol": [
            218,
            1
          ]
        },
        "linecol": [
          218,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min( BA12RFOR ,IDOM11-DEC11-RCOTFOR-RREPA-RAIDE-RDIFAGRI-RFORET-RFIPDOM-RFIPC-RCINE -RRESTIMO-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RINNO-RSOUFIP-RRIRENOV -RLOGDOM-RCREAT-RCOMP-RRETU-RDONS-RDUFLOTOT-RPINELTOT-RNOUV-RPLAFREPME4 -A9RFOR-A10RFOR-A11RFOR)  ) * (1-ART1731BIS)",
          "linecol": [
            220,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A12RFOR",
          "linecol": [
            220,
            1
          ]
        },
        "linecol": [
          220,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            213,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            213,
            23
          ]
        }
      ],
      "linecol": [
        213,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "82491",
      "linecol": [
        228,
        7
      ]
    },
    "linecol": [
      228,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min (REPFOR + REPSINFOR + REPFOR1 + REPSINFOR1 + REPSINFOR2 , PLAFRED_FORTRA) - (REPFOR + REPSINFOR + REPSINFOR1)) * (1 - V_CNR)",
          "linecol": [
            231,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASE7UVG",
          "linecol": [
            231,
            1
          ]
        },
        "linecol": [
          231,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr(BASE7UVG * TX22 / 100 )",
          "linecol": [
            234,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BA11RFOR",
          "linecol": [
            234,
            1
          ]
        },
        "linecol": [
          234,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min( BA11RFOR ,IDOM11-DEC11-RCOTFOR-RREPA-RAIDE-RDIFAGRI-RFORET-RFIPDOM-RFIPC-RCINE -RRESTIMO-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RINNO-RSOUFIP-RRIRENOV -RLOGDOM-RCREAT-RCOMP-RRETU-RDONS-RDUFLOTOT-RPINELTOT-RNOUV-RPLAFREPME4 -A9RFOR-A10RFOR) ) * (1-ART1731BIS)",
          "linecol": [
            236,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A11RFOR",
          "linecol": [
            236,
            1
          ]
        },
        "linecol": [
          236,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            229,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            229,
            23
          ]
        }
      ],
      "linecol": [
        229,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8249",
      "linecol": [
        244,
        7
      ]
    },
    "linecol": [
      244,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min (REPFOR + REPSINFOR + REPSINFOR1, PLAFRED_FORTRA) - REPSINFOR) * (1 - V_CNR)",
          "linecol": [
            246,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BASE7UTF",
          "linecol": [
            246,
            1
          ]
        },
        "linecol": [
          246,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "arr(BASE7UTF * TX25 / 100 )",
          "linecol": [
            249,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BA10RFOR",
          "linecol": [
            249,
            1
          ]
        },
        "linecol": [
          249,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min( BA10RFOR ,IDOM11-DEC11-RCOTFOR-RREPA-RAIDE-RDIFAGRI-RFORET-RFIPDOM-RFIPC-RCINE -RRESTIMO-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RINNO-RSOUFIP-RRIRENOV -RLOGDOM-RCREAT-RCOMP-RRETU-RDONS-RDUFLOTOT-RPINELTOT-RNOUV-RPLAFREPME4 -A9RFOR ) ) * (1-ART1731BIS)",
          "linecol": [
            251,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A10RFOR",
          "linecol": [
            251,
            1
          ]
        },
        "linecol": [
          251,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            245,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            245,
            23
          ]
        }
      ],
      "linecol": [
        245,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "82500",
      "linecol": [
        259,
        7
      ]
    },
    "linecol": [
      259,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "arr( min ( REPSINFOR , PLAFRED_FORTRA) * TX25 / 100 ) * (1 - V_CNR)",
          "linecol": [
            262,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BA9RFOR",
          "linecol": [
            262,
            1
          ]
        },
        "linecol": [
          262,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min( BA9RFOR ,IDOM11-DEC11-RCOTFOR-RREPA-RAIDE-RDIFAGRI-RFORET-RFIPDOM-RFIPC-RCINE -RRESTIMO-RSOCREPR-RRPRESCOMP-RHEBE-RSURV-RINNO-RSOUFIP-RRIRENOV -RLOGDOM-RCREAT-RCOMP-RRETU-RDONS-RDUFLOTOT-RPINELTOT-RNOUV-RPLAFREPME4) ) * (1-ART1731BIS)",
          "linecol": [
            264,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A9RFOR",
          "linecol": [
            264,
            1
          ]
        },
        "linecol": [
          264,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            260,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            260,
            23
          ]
        }
      ],
      "linecol": [
        260,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8252",
      "linecol": [
        272,
        7
      ]
    },
    "linecol": [
      272,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RTOURREP*positif(REPINVTOU) + RTOUHOTR*positif(INVLOGHOT) * (1-positif(null(2-V_REGCO)+null(4-V_REGCO))) + RTOUREPA*positif(INVLOGREHA)",
          "linecol": [
            274,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A10TOURSOC_1",
          "linecol": [
            274,
            1
          ]
        },
        "linecol": [
          274,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, A10TOURSOC_1 * (1-ART1731BIS) + min(A10TOURSOC1731+0 , A10TOURSOC_1) * ART1731BIS )",
          "linecol": [
            278,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A10TOURSOC",
          "linecol": [
            278,
            1
          ]
        },
        "linecol": [
          278,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            273,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            273,
            23
          ]
        }
      ],
      "linecol": [
        273,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8250",
      "linecol": [
        282,
        7
      ]
    },
    "linecol": [
      282,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RCOTFOR + RFIPDOM + RAIDE + RFIPC + RINNO + RSOUFIP + RRIRENOV + RDUFLOEKL + RPINELTOT + A13RFOR + arr(RSNCF + RSNCU + RSNCC + RSNCR + RPLAFREPME4) + RCODOU + CIDEVDUR + CIGARD + CIADCRE + CIHABPRIN + CILOYIMP + CIFORET   +  RDUFREPFI +  RDUFLOGIH + RCODJT + RILMPE + RILMOA + RPATNAT",
          "linecol": [
            285,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A13REELA",
          "linecol": [
            285,
            1
          ]
        },
        "linecol": [
          285,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "RCINE + RLOG32 + RLOG39 + A13RSOC + A13RENT",
          "linecol": [
            306,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A13REELB",
          "linecol": [
            306,
            1
          ]
        },
        "linecol": [
          306,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            283,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            283,
            23
          ]
        }
      ],
      "linecol": [
        283,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8254",
      "linecol": [
        311,
        7
      ]
    },
    "linecol": [
      311,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min(V_A13REELA, V_DIFTEOREEL))",
          "linecol": [
            315,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AUBAINE13A",
          "linecol": [
            315,
            1
          ]
        },
        "linecol": [
          315,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min(V_A13REELB, V_DIFTEOREEL - AUBAINE13A))",
          "linecol": [
            316,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AUBAINE13B",
          "linecol": [
            316,
            1
          ]
        },
        "linecol": [
          316,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            312,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            312,
            23
          ]
        }
      ],
      "linecol": [
        312,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8255",
      "linecol": [
        318,
        7
      ]
    },
    "linecol": [
      318,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "A12RFOR  + A12RRESTIMO  + RLOG25 * (1-ART1731BIS) + min (RLOG251731+0 , RLOG25) * ART1731BIS + RLOG31 * (1-ART1731BIS) + RLOG38 * (1-ART1731BIS)  + RTOURREP * positif(COD7UY) + RTOUREPA * positif(COD7UZ)  + arr( RSNCN + RSNCQ )  + RCELRREDMG + RCELRREDMH + RCELREPGV + RCELREPGJ + RCELREPYJ + RCELREPYB + RCELREPYI + RCELREPYA + RCELJOQR + RCEL2012 + RCELFD + RCELFABC  + RCODIF + RCODIG + RCODID + RILMJV + RILMJS + RCODJU + RILMPD + RILMOB  + RPATNAT3  + A12RSOC  + A12RENT",
          "linecol": [
            321,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A12REEL",
          "linecol": [
            321,
            1
          ]
        },
        "linecol": [
          321,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            319,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            319,
            23
          ]
        }
      ],
      "linecol": [
        319,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8256",
      "linecol": [
        348,
        7
      ]
    },
    "linecol": [
      348,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max( 0, min( V_A12REEL , V_DIFTEOREEL - AUBAINE13A - AUBAINE13B ))",
          "linecol": [
            351,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AUBAINE12",
          "linecol": [
            351,
            1
          ]
        },
        "linecol": [
          351,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            349,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            349,
            23
          ]
        }
      ],
      "linecol": [
        349,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8260",
      "linecol": [
        353,
        7
      ]
    },
    "linecol": [
      353,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(RLOG16 + RLOG21 + RLOG24) * (1 - ART1731BIS) + (min(RLOG161731+0,RLOG16) + min(RLOG211731+0,RLOG21) + min(RLOG241731+0, RLOG24)) * ART1731BIS + RLOG28 + RLOG30 + RLOG35 +RLOG37   + A11RSOC  + arr( RSNCM )  + RCELRREDLF + RCELRREDLZ + RCELRREDLX + RCELREPHG + RCELREPHA + RCELREPGW + RCELREPGL + RCELREPGK + RCELREPYK + RCELREPYD + RCELREPYC + RCELCOM + RCEL + RCELJP + RCELJBGL  + RCODIE + RCODIN + RCODIV + RCODIJ + RILMIZ + RILMIA + RILMJI + RILMJW + RILMPC + RILMOC  + RTOURREP*positif(INVLOCXN) + RTOUREPA*positif(INVLOCXV)  + RPATNAT2  + A11RENT  + A11RFOR",
          "linecol": [
            355,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A11REEL",
          "linecol": [
            355,
            1
          ]
        },
        "linecol": [
          355,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            354,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            354,
            23
          ]
        }
      ],
      "linecol": [
        354,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8261",
      "linecol": [
        382,
        7
      ]
    },
    "linecol": [
      382,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max( 0, min( V_A11REEL , V_DIFTEOREEL - AUBAINE13A-AUBAINE13B-AUBAINE12 ))",
          "linecol": [
            385,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AUBAINE11",
          "linecol": [
            385,
            1
          ]
        },
        "linecol": [
          385,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            383,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            383,
            23
          ]
        }
      ],
      "linecol": [
        383,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8262",
      "linecol": [
        386,
        7
      ]
    },
    "linecol": [
      386,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(RLOG11 + RLOG13 + RLOG15 + RLOG18 + RLOG20 + RLOG23 + RLOG26 + RLOG27 + RLOG29) * (1-ART1731BIS) + (min(RLOG111731+0, RLOG11) + min(RLOG131731+0 , RLOG13) + min(RLOG151731+0, RLOG15) + min(RLOG181731+0, RLOG18) + min(RLOG201731+0, RLOG20) + min(RLOG231731+0, RLOG23)) * ART1731BIS + RLOG33 + RLOG34 + RLOG36   + A10RSOC  + arr( RSNCL )  + A10RENT  + RCELRREDLC + RCELRREDLD + RCELRREDLS + RCELRREDLT + RCELREPHW + RCELREPHV + RCELREPHD + RCELREPHH + RCELREPHB + RCELREPGX + RCELREPGS + RCELREPGP + RCELREPYL + RCELREPYF + RCELREPYE + RCELHJK + RCELNQ + RCELNBGL  + RINVRED + RREPMEU + RCODIM + RCODIL + RILMIH + RILMIB + RILMJC +RILMJX + RILMPB + RILMOD  + A10TOURSOC  + RPATNAT1  + A10RFOR",
          "linecol": [
            390,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "A10REEL",
          "linecol": [
            390,
            1
          ]
        },
        "linecol": [
          390,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            387,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            387,
            23
          ]
        }
      ],
      "linecol": [
        387,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8263",
      "linecol": [
        419,
        7
      ]
    },
    "linecol": [
      419,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max( 0, min( V_A10REEL , V_DIFTEOREEL - AUBAINE13A-AUBAINE13B-AUBAINE12-AUBAINE11 ))",
          "linecol": [
            422,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AUBAINE10",
          "linecol": [
            422,
            1
          ]
        },
        "linecol": [
          422,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            420,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            420,
            23
          ]
        }
      ],
      "linecol": [
        420,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8280",
      "linecol": [
        424,
        7
      ]
    },
    "linecol": [
      424,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, V_DIFTEOREEL - AUBAINE13A - AUBAINE13B - AUBAINE12 - AUBAINE11 - AUBAINE10)",
          "linecol": [
            427,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AUBAINE9",
          "linecol": [
            427,
            1
          ]
        },
        "linecol": [
          427,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            425,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            425,
            23
          ]
        }
      ],
      "linecol": [
        425,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8290",
      "linecol": [
        428,
        7
      ]
    },
    "linecol": [
      428,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "max(0, AUBAINE13A - LIM10000 ) * positif(V_DIFTEOREEL)",
          "linecol": [
            430,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AVPLAF13A",
          "linecol": [
            430,
            1
          ]
        },
        "linecol": [
          430,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, min(AUBAINE13A , LIM10000) + AUBAINE13B - LIM18000 ) * positif(V_DIFTEOREEL)",
          "linecol": [
            432,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AVPLAF13B",
          "linecol": [
            432,
            1
          ]
        },
        "linecol": [
          432,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "AVPLAF13A + AVPLAF13B",
          "linecol": [
            434,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AVPLAF13",
          "linecol": [
            434,
            1
          ]
        },
        "linecol": [
          434,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 - AVPLAF13 - LIMIT12) * positif(V_DIFTEOREEL)",
          "linecol": [
            436,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AVPLAF12",
          "linecol": [
            436,
            1
          ]
        },
        "linecol": [
          436,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 + AUBAINE11 - AVPLAF13 - AVPLAF12 - LIMIT11) * positif(V_DIFTEOREEL)",
          "linecol": [
            439,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AVPLAF11",
          "linecol": [
            439,
            1
          ]
        },
        "linecol": [
          439,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 + AUBAINE11 + AUBAINE10 - AVPLAF13 - AVPLAF12 - AVPLAF11 - LIMIT10) * positif(V_DIFTEOREEL)",
          "linecol": [
            442,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AVPLAF10",
          "linecol": [
            442,
            1
          ]
        },
        "linecol": [
          442,
          1
        ]
      },
      {
        "expression": {
          "type": "expression",
          "value": "max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 + AUBAINE11 + AUBAINE10 + AUBAINE9 - AVPLAF13 - AVPLAF12 - AVPLAF11 - AVPLAF10 - LIMIT9) * positif(V_DIFTEOREEL)",
          "linecol": [
            445,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AVPLAF9",
          "linecol": [
            445,
            1
          ]
        },
        "linecol": [
          445,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            429,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            429,
            23
          ]
        }
      ],
      "linecol": [
        429,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8321",
      "linecol": [
        448,
        7
      ]
    },
    "linecol": [
      448,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RFORDI + RFROBOR",
          "linecol": [
            450,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RFTEO",
          "linecol": [
            450,
            1
          ]
        },
        "linecol": [
          450,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            449,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            449,
            23
          ]
        }
      ],
      "linecol": [
        449,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8331",
      "linecol": [
        451,
        7
      ]
    },
    "linecol": [
      451,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "(RFORDI + RFROBOR - min( min(RFDORD,RFDORD1731+0) * positif(ART1731BIS) + RFDORD * (1 - ART1731BIS)  + min(RFDANT,RFDANT1731+0) * positif(ART1731BIS) + RFDANT * (1 - ART1731BIS) ,  RFORDI + RFROBOR ) - RFDHIS * (1 - ART1731BIS)  ) * present(RFROBOR) + RRFI * (1-present(RFROBOR))",
          "linecol": [
            455,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RFNTEO",
          "linecol": [
            455,
            1
          ]
        },
        "linecol": [
          455,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            452,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            452,
            23
          ]
        }
      ],
      "linecol": [
        452,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  },
  {
    "name": {
      "type": "symbol",
      "name": "8341",
      "linecol": [
        466,
        7
      ]
    },
    "linecol": [
      466,
      1
    ],
    "variables": [
      {
        "expression": {
          "type": "expression",
          "value": "RFNTEO",
          "linecol": [
            468,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RRFTEO",
          "linecol": [
            468,
            1
          ]
        },
        "linecol": [
          468,
          1
        ]
      }
    ],
    "applications": {
      "type": "symbol_enumeration",
      "value": [
        {
          "type": "symbol",
          "name": "iliad",
          "linecol": [
            467,
            15
          ]
        },
        {
          "type": "symbol",
          "name": "batch",
          "linecol": [
            467,
            23
          ]
        }
      ],
      "linecol": [
        467,
        15
      ]
    },
    "type": "regle_declaration",
    "qualifiers": []
  }
]
