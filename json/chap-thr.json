[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                22,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                22,
                23
              ]
            }
          ],
          "linecol": [
            22,
            15
          ]
        }
      ],
      "linecol": [
        22,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_BTRFRHR1 * (1-positif_ou_nul(RFRH1)) + RFRH1",
          "linecol": [
            23,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRBTRFR1",
          "linecol": [
            23,
            1
          ]
        },
        "linecol": [
          23,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_BTRFRHR2 * (1-positif_ou_nul(RFRH2)) + RFRH2",
          "linecol": [
            24,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRBTRFR2",
          "linecol": [
            24,
            1
          ]
        },
        "linecol": [
          24,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(V_BTRFRHR1 * (1-positif(RFRH1)) + RFRH1) + positif_ou_nul(V_BTRFRHR2 * (1-positif(RFRH2)) + RFRH2)",
          "linecol": [
            25,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRNBTRFR",
          "linecol": [
            25,
            1
          ]
        },
        "linecol": [
          25,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr((HRBTRFR1 + HRBTRFR2) /2)",
          "linecol": [
            26,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRMOYBTRFR",
          "linecol": [
            26,
            1
          ]
        },
        "linecol": [
          26,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(REVKIREHR - (1.5 * HRMOYBTRFR))",
          "linecol": [
            27,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRLIM15",
          "linecol": [
            27,
            1
          ]
        },
        "linecol": [
          27,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(LIMHR1 * (1+BOOL_0AM) - HRBTRFR2)",
          "linecol": [
            28,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRLIMBTRFR2",
          "linecol": [
            28,
            1
          ]
        },
        "linecol": [
          28,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(LIMHR1 * (1+BOOL_0AM) - HRBTRFR1)",
          "linecol": [
            29,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRLIMBTRFR1",
          "linecol": [
            29,
            1
          ]
        },
        "linecol": [
          29,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(null(2-HRNBTRFR)*positif(HRLIM15)*positif(HRLIMBTRFR1*HRLIMBTRFR2)* (1-positif(CASECHR+0)))",
          "linecol": [
            30,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRCONDTHEO",
          "linecol": [
            30,
            1
          ]
        },
        "linecol": [
          30,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr((REVKIREHR - HRMOYBTRFR) / 2)",
          "linecol": [
            31,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRBASEFRAC",
          "linecol": [
            31,
            1
          ]
        },
        "linecol": [
          31,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "HRBASEFRAC + HRMOYBTRFR",
          "linecol": [
            32,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HRBASELISSE",
          "linecol": [
            32,
            1
          ]
        },
        "linecol": [
          32,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(LIMHRTX1 * (1+BOOL_0AM)-REVKIREHR) * ((REVKIREHR - LIMHR1 * (1+BOOL_0AM))*TXHR1/100) + (LIMHR1 * (1+BOOL_0AM) * TXHR1/100) * positif(REVKIREHR - LIMHRTX1 * (1+BOOL_0AM))",
          "linecol": [
            33,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRREEL1",
          "linecol": [
            33,
            1
          ]
        },
        "linecol": [
          33,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(REVKIREHR - LIMHR2*(1+BOOL_0AM))*TXHR2/100)",
          "linecol": [
            35,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRREEL2",
          "linecol": [
            35,
            1
          ]
        },
        "linecol": [
          35,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(max(0,CHRREEL1 + CHRREEL2))",
          "linecol": [
            36,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRREELTOT",
          "linecol": [
            36,
            1
          ]
        },
        "linecol": [
          36,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(positif_ou_nul(LIMHRTX1 * (1+BOOL_0AM)-HRBASELISSE) * ((HRBASELISSE - LIMHR1 * (1+BOOL_0AM))*TXHR1/100) + (LIMHR1 * (1+BOOL_0AM) * TXHR1/100)* positif(HRBASELISSE - LIMHRTX1 * (1+BOOL_0AM)))",
          "linecol": [
            37,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRTHEO11",
          "linecol": [
            37,
            1
          ]
        },
        "linecol": [
          37,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(max(0,(HRBASELISSE - LIMHR2*(1+BOOL_0AM))*TXHR2/100))",
          "linecol": [
            39,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRTHEO21",
          "linecol": [
            39,
            1
          ]
        },
        "linecol": [
          39,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(max(0,CHRTHEO11 + CHRTHEO21)*2)",
          "linecol": [
            40,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRTHEOTOT",
          "linecol": [
            40,
            1
          ]
        },
        "linecol": [
          40,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , REVKIREHR - LIMHR1 * (1 + BOOL_0AM))",
          "linecol": [
            41,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BHAUTREV",
          "linecol": [
            41,
            1
          ]
        },
        "linecol": [
          41,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(max(0,min(CHRREELTOT,CHRTHEOTOT)) * HRCONDTHEO + CHRREELTOT * (1-HRCONDTHEO) )",
          "linecol": [
            42,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRAVANT",
          "linecol": [
            42,
            1
          ]
        },
        "linecol": [
          42,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(CHRAVANT * (REVKIREHR - TEFFHRC+COD8YJ)/ REVKIREHR)",
          "linecol": [
            44,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRTEFF",
          "linecol": [
            44,
            1
          ]
        },
        "linecol": [
          44,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CHRAVANT * (1-positif(positif(IPMOND)+positif(INDTEFF))) + CHRTEFF * positif(positif(IPMOND)+positif(INDTEFF))",
          "linecol": [
            45,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CHRAPRES",
          "linecol": [
            45,
            1
          ]
        },
        "linecol": [
          45,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "80000",
      "linecol": [
        21,
        7
      ]
    },
    "linecol": [
      21,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                47,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                47,
                23
              ]
            }
          ],
          "linecol": [
            47,
            15
          ]
        }
      ],
      "linecol": [
        47,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,CHRAPRES - CICHR)",
          "linecol": [
            48,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IHAUTREVT",
          "linecol": [
            48,
            1
          ]
        },
        "linecol": [
          48,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "80005",
      "linecol": [
        46,
        7
      ]
    },
    "linecol": [
      46,
      1
    ]
  }
]
