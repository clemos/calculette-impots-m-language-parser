[
  {
    "type": "comment",
    "value": "#*************************************************************************************************************************",
    "linecol": [
      1,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      2,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Copyright or © or Copr.[DGFIP][2015]",
    "linecol": [
      3,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      4,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel a été initialement développé par la Direction Générale des ",
    "linecol": [
      5,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Finances Publiques pour permettre le calcul de l'impôt sur le revenu 2015 ",
    "linecol": [
      6,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#au titre des revenus perçus en 2014. La présente version a permis la ",
    "linecol": [
      7,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#génération du moteur de calcul des chaînes de taxation des rôles d'impôt ",
    "linecol": [
      8,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#sur le revenu de ce millésime.",
    "linecol": [
      9,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      10,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Ce logiciel est régi par la licence CeCILL 2.1 soumise au droit français ",
    "linecol": [
      11,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#et respectant les principes de diffusion des logiciels libres. Vous pouvez ",
    "linecol": [
      12,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#utiliser, modifier et/ou redistribuer ce programme sous les conditions de ",
    "linecol": [
      13,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#la licence CeCILL 2.1 telle que diffusée par le CEA, le CNRS et l'INRIA  sur ",
    "linecol": [
      14,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#le site \"http://www.cecill.info\".",
    "linecol": [
      15,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      16,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#Le fait que vous puissiez accéder à cet en-tête signifie que vous avez pris ",
    "linecol": [
      17,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#connaissance de la licence CeCILL 2.1 et que vous en avez accepté les termes.",
    "linecol": [
      18,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      19,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#**************************************************************************************************************************",
    "linecol": [
      20,
      1
    ]
  },
  {
    "type": "comment",
    "value": "#####",
    "linecol": [
      21,
      74
    ]
  },
  {
    "type": "comment",
    "value": "####   #    #    ##    #####      #     #####  #####   ######         #     #",
    "linecol": [
      22,
      3
    ]
  },
  {
    "type": "comment",
    "value": "#    #  #    #   #  #   #    #     #       #    #    #  #                    #",
    "linecol": [
      23,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#       ######  #    #  #    #     #       #    #    #  #####           #####",
    "linecol": [
      24,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#       #    #  ######  #####      #       #    #####   #                    #",
    "linecol": [
      25,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#    #  #    #  #    #  #          #       #    #   #   #              #     #",
    "linecol": [
      26,
      2
    ]
  },
  {
    "type": "comment",
    "value": "####   #    #  #    #  #          #       #    #    #  ###### #######  #####",
    "linecol": [
      27,
      3
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      28,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      29,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      30,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      31,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      32,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      33,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      34,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#                       CALCUL DE L'IMPOT NET",
    "linecol": [
      35,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      36,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      37,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      38,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      39,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      40,
      2
    ]
  },
  {
    "type": "comment",
    "value": "#",
    "linecol": [
      41,
      2
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                43,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                43,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                43,
                32
              ]
            }
          ],
          "linecol": [
            43,
            15
          ]
        }
      ],
      "linecol": [
        43,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( 0, IAN + AVFISCOPTER - IRE ) + max( 0, IAN + AVFISCOPTER - IRE ) * positif( IAMD1 + 1 - SEUIL_61)",
          "linecol": [
            45,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRN",
          "linecol": [
            45,
            1
          ]
        },
        "linecol": [
          45,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "301",
      "linecol": [
        42,
        7
      ]
    },
    "linecol": [
      42,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                49,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                49,
                24
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                49,
                32
              ]
            }
          ],
          "linecol": [
            49,
            15
          ]
        }
      ],
      "linecol": [
        49,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( 0, IAN + AVFISCOPTER - IRE ) + max( 0, IAN + AVFISCOPTER - IRE )",
          "linecol": [
            51,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAR",
          "linecol": [
            51,
            1
          ]
        },
        "linecol": [
          51,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3010",
      "linecol": [
        48,
        7
      ]
    },
    "linecol": [
      48,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                54,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                54,
                23
              ]
            }
          ],
          "linecol": [
            54,
            15
          ]
        }
      ],
      "linecol": [
        54,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(arr((BPTP3 + BPTPD + BPTPG) * TX16/100),arr(CIIMPPRO * TX_CREREVET/100 )) + min(arr(BPTP19 * TX19/100),arr(CIIMPPRO2 * TX19/100 ))",
          "linecol": [
            55,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CREREVET",
          "linecol": [
            55,
            1
          ]
        },
        "linecol": [
          55,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CIIMPPRO + CIIMPPRO2",
          "linecol": [
            58,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIIMPPROTOT",
          "linecol": [
            58,
            1
          ]
        },
        "linecol": [
          58,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "302",
      "linecol": [
        53,
        7
      ]
    },
    "linecol": [
      53,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                60,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                60,
                23
              ]
            }
          ],
          "linecol": [
            60,
            15
          ]
        }
      ],
      "linecol": [
        60,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(arr(BPTP18 * TX18/100),arr(COD8XF * TX18/100 )) + min(arr(BPTP4I * TX30/100),arr(COD8XG * TX30/100 )) + min(arr(BPTP40 * TX41/100),arr(COD8XH * TX41/100 ))",
          "linecol": [
            61,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ICI8XFH",
          "linecol": [
            61,
            1
          ]
        },
        "linecol": [
          61,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(arr(RCM2FA * TX24/100),arr(COD8XV * TX24/100 )) * (1 - positif(null(2 - V_REGCO)+null(4-V_REGCO)))",
          "linecol": [
            64,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ICI8XV",
          "linecol": [
            64,
            1
          ]
        },
        "linecol": [
          64,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(arr(BPTP18 * TX18/100),arr(COD8XF * TX18/100 )) + min(arr(RCM2FA * TX24/100),arr(COD8XV * TX24/100 )) * (1 - positif(null(2 - V_REGCO)+null(4-V_REGCO))) + min(arr(BPTP4I * TX30/100),arr(COD8XG * TX30/100 )) + min(arr(BPTP40 * TX41/100),arr(COD8XH * TX41/100 ))",
          "linecol": [
            65,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ICIGLO",
          "linecol": [
            65,
            1
          ]
        },
        "linecol": [
          65,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COD8XF + COD8XG + COD8XH",
          "linecol": [
            70,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIGLOTOT",
          "linecol": [
            70,
            1
          ]
        },
        "linecol": [
          70,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-IRETS-CRDIE-ICREREVET,ICI8XV))",
          "linecol": [
            71,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CI8XV",
          "linecol": [
            71,
            1
          ]
        },
        "linecol": [
          71,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-IRETS-CRDIE-ICREREVET-CI8XV,ICI8XFH))",
          "linecol": [
            72,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CI8XFH",
          "linecol": [
            72,
            1
          ]
        },
        "linecol": [
          72,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-IRETS-CRDIE-ICREREVET,ICIGLO))",
          "linecol": [
            73,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIGLO",
          "linecol": [
            73,
            1
          ]
        },
        "linecol": [
          73,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30202",
      "linecol": [
        59,
        7
      ]
    },
    "linecol": [
      59,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                75,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                75,
                23
              ]
            }
          ],
          "linecol": [
            75,
            15
          ]
        }
      ],
      "linecol": [
        75,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IAD11 + ITP - CIRCMAVFT - IRETS - min(IAD11 , CRCFA), min(ITP,CREREVET)))",
          "linecol": [
            77,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ICREREVET",
          "linecol": [
            77,
            1
          ]
        },
        "linecol": [
          77,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3025",
      "linecol": [
        74,
        7
      ]
    },
    "linecol": [
      74,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                80,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                80,
                23
              ]
            },
            {
              "type": "symbol",
              "name": "bareme",
              "linecol": [
                80,
                31
              ]
            }
          ],
          "linecol": [
            80,
            15
          ]
        }
      ],
      "linecol": [
        80,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(CIRCMAVFT + IRETS + min(max(0,IAD11-CIRCMAVFT-IRETS) , CRCFA) + ICREREVET + CIGLO + CICULTUR + CIGPA + CIDONENTR + CICORSE + CIRECH + CICOMPEMPL) * (1-positif(RE168+TAX1649))",
          "linecol": [
            82,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INE",
          "linecol": [
            82,
            1
          ]
        },
        "linecol": [
          82,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max( 0, (IRB - AVFISCOPTER + ((- CIRCMAVFT - IRETS - min(max(0,IAD11-CIRCMAVFT-IRETS) , CRCFA) - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR - CICORSE - CIRECH - CICOMPEMPL) * (1 - positif(RE168 + TAX1649))) + min(TAXASSUR+0 , max(0,INE-IRB+AVFISCOPTER)) + min(IPCAPTAXTOT+0 , max(0,INE-IRB+AVFISCOPTER - min(TAXASSUR+0,max(0,INE-IRB+AVFISCOPTER)))) + min(TAXLOY+0 ,max(0,INE-IRB+AVFISCOPTER - min(IPCAPTAXTOT+0 , max(0,INE-IRB+AVFISCOPTER - min(TAXASSUR+0,max(0,INE-IRB+AVFISCOPTER)))) - min(TAXASSUR+0 , max(0,INE-IRB+AVFISCOPTER)))) ) ) ",
          "linecol": [
            85,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAN",
          "linecol": [
            85,
            1
          ]
        },
        "linecol": [
          85,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3026",
      "linecol": [
        79,
        7
      ]
    },
    "linecol": [
      79,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                106,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                106,
                23
              ]
            }
          ],
          "linecol": [
            106,
            15
          ]
        }
      ],
      "linecol": [
        106,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1- positif(RE168+TAX1649+0)) * ( CIDIREPARGNE + EPAV + CRICH + CICORSENOW + CIGE + CIDEVDUR + CITEC +  IPELUS + CICA + CIGARD + CISYND + CIPRETUD + CIADCRE + CIHABPRIN + CREFAM + CREAPP +CREAGRIBIO + CREPROSP + CRESINTER + CREFORMCHENT + CREINTERESSE + CREARTS + CICONGAGRI + CRERESTAU + CILOYIMP + AUTOVERSLIB + PPETOTX - PPERSA + CI2CK + CIFORET + CIEXCEDENT + COD8TL * (1 - positif(RE168 + TAX1649)) )",
          "linecol": [
            107,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRE",
          "linecol": [
            107,
            1
          ]
        },
        "linecol": [
          107,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRE + (BCIGA * (1 - positif(RE168+TAX1649)))",
          "linecol": [
            119,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRE2",
          "linecol": [
            119,
            1
          ]
        },
        "linecol": [
          119,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3021",
      "linecol": [
        105,
        7
      ]
    },
    "linecol": [
      105,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                121,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                121,
                23
              ]
            }
          ],
          "linecol": [
            121,
            15
          ]
        }
      ],
      "linecol": [
        121,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IPRECH * (1 - positif(RE168+TAX1649))",
          "linecol": [
            123,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRICH",
          "linecol": [
            123,
            1
          ]
        },
        "linecol": [
          123,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3022",
      "linecol": [
        120,
        7
      ]
    },
    "linecol": [
      120,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                125,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                125,
                23
              ]
            }
          ],
          "linecol": [
            125,
            15
          ]
        }
      ],
      "linecol": [
        125,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB + TAXASSUR + IPCAPTAXTOT +TAXLOY - AVFISCOPTER , RCMAVFT * (1 - positif(null(2 - V_REGCO)+null(4-V_REGCO)))))",
          "linecol": [
            126,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRCMAVFT",
          "linecol": [
            126,
            1
          ]
        },
        "linecol": [
          126,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30221",
      "linecol": [
        124,
        7
      ]
    },
    "linecol": [
      124,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                128,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                128,
                23
              ]
            }
          ],
          "linecol": [
            128,
            15
          ]
        }
      ],
      "linecol": [
        128,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr((COD3VE * TX45/100) + (COD3UV * TX30/100))* (1 - positif(RE168 + TAX1649))",
          "linecol": [
            129,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIEXCEDENT",
          "linecol": [
            129,
            1
          ]
        },
        "linecol": [
          129,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "302229",
      "linecol": [
        127,
        7
      ]
    },
    "linecol": [
      127,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                131,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                131,
                23
              ]
            }
          ],
          "linecol": [
            131,
            15
          ]
        }
      ],
      "linecol": [
        131,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "DIREPARGNE * (1 - positif(RE168 + TAX1649)) * (1 - positif(null(2 - V_REGCO)+null(4-V_REGCO)))",
          "linecol": [
            132,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIDIREPARGNE",
          "linecol": [
            132,
            1
          ]
        },
        "linecol": [
          132,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "COD2CK * (1 - positif(RE168 + TAX1649)) * (1 - positif(null(2 - V_REGCO)+null(4-V_REGCO)))",
          "linecol": [
            133,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CI2CK",
          "linecol": [
            133,
            1
          ]
        },
        "linecol": [
          133,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30222",
      "linecol": [
        130,
        7
      ]
    },
    "linecol": [
      130,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                135,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                135,
                22
              ]
            }
          ],
          "linecol": [
            135,
            15
          ]
        }
      ],
      "linecol": [
        135,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BAILOC98 * TX_BAIL / 100) * (1 - positif(RE168 + TAX1649))",
          "linecol": [
            136,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICA",
          "linecol": [
            136,
            1
          ]
        },
        "linecol": [
          136,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30226",
      "linecol": [
        134,
        7
      ]
    },
    "linecol": [
      134,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                138,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                138,
                23
              ]
            }
          ],
          "linecol": [
            138,
            15
          ]
        }
      ],
      "linecol": [
        138,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(arr(IPQ1 * REGCI / (RB018XR + TONEQUO )) * (1 - positif(RE168+TAX1649)))",
          "linecol": [
            139,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRCFA",
          "linecol": [
            139,
            1
          ]
        },
        "linecol": [
          139,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023",
      "linecol": [
        137,
        7
      ]
    },
    "linecol": [
      137,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                141,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                141,
                23
              ]
            }
          ],
          "linecol": [
            141,
            15
          ]
        }
      ],
      "linecol": [
        141,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(min(COD8PA,IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT)*present(COD8PA)+(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT)*(1-present(COD8PA)) , (IPSOUR * (1 - positif(RE168+TAX1649)))))",
          "linecol": [
            142,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRETS",
          "linecol": [
            142,
            1
          ]
        },
        "linecol": [
          142,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231",
      "linecol": [
        140,
        7
      ]
    },
    "linecol": [
      140,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                144,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                144,
                23
              ]
            }
          ],
          "linecol": [
            144,
            15
          ]
        }
      ],
      "linecol": [
        144,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB-REI-AVFISCOPTER-CIRCMAVFT-IRETS,(min(IAD11-CIRCMAVFT-IRETS,CRCFA) * (1 - positif(RE168+TAX1649)))))",
          "linecol": [
            145,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRDIE",
          "linecol": [
            145,
            1
          ]
        },
        "linecol": [
          145,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "-CRDIE+0",
          "linecol": [
            146,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRDIE2",
          "linecol": [
            146,
            1
          ]
        },
        "linecol": [
          146,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023101",
      "linecol": [
        143,
        7
      ]
    },
    "linecol": [
      143,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                148,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                148,
                23
              ]
            }
          ],
          "linecol": [
            148,
            15
          ]
        }
      ],
      "linecol": [
        148,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(CIAQCUL * TX_CIAQCUL / 100)",
          "linecol": [
            149,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIAQCUL",
          "linecol": [
            149,
            1
          ]
        },
        "linecol": [
          149,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-REI-IRETS-CRDIE-ICREREVET-CIGLO,min(IAD11+ITP+TAXASSUR+TAXLOY +IPCAPTAXTOT+CHRAPRES,BCIAQCUL)))",
          "linecol": [
            150,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICULTUR",
          "linecol": [
            150,
            1
          ]
        },
        "linecol": [
          150,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023102",
      "linecol": [
        147,
        7
      ]
    },
    "linecol": [
      147,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                152,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                152,
                23
              ]
            }
          ],
          "linecol": [
            152,
            15
          ]
        }
      ],
      "linecol": [
        152,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CRIGA",
          "linecol": [
            153,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIGA",
          "linecol": [
            153,
            1
          ]
        },
        "linecol": [
          153,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-IRETS-CRDIE-ICREREVET-CIGLO-CICULTUR,BCIGA))",
          "linecol": [
            154,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIGPA",
          "linecol": [
            154,
            1
          ]
        },
        "linecol": [
          154,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023103",
      "linecol": [
        151,
        7
      ]
    },
    "linecol": [
      151,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                156,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                156,
                23
              ]
            }
          ],
          "linecol": [
            156,
            15
          ]
        }
      ],
      "linecol": [
        156,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDMECENAT * (1-V_CNR)",
          "linecol": [
            157,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIDONENTR",
          "linecol": [
            157,
            1
          ]
        },
        "linecol": [
          157,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-REI-IRETS-CRDIE-ICREREVET-CIGLO-CICULTUR-CIGPA,BCIDONENTR))",
          "linecol": [
            158,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIDONENTR",
          "linecol": [
            158,
            1
          ]
        },
        "linecol": [
          158,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023104",
      "linecol": [
        155,
        7
      ]
    },
    "linecol": [
      155,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                160,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                160,
                23
              ]
            }
          ],
          "linecol": [
            160,
            15
          ]
        }
      ],
      "linecol": [
        160,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-IPPRICORSE-IRETS-CRDIE-ICREREVET-CIGLO-CICULTUR-CIGPA-CIDONENTR,CIINVCORSE+IPREPCORSE))",
          "linecol": [
            161,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICORSE",
          "linecol": [
            161,
            1
          ]
        },
        "linecol": [
          161,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY-AVFISCOPTER-CIRCMAVFT-IPPRICORSE-IRETS-CRDIE-ICREREVET-CIGLO-CICULTUR-CIGPA-CIDONENTR,CIINVCORSE+IPREPCORSE))+CICORSENOW",
          "linecol": [
            162,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICORSEAVIS",
          "linecol": [
            162,
            1
          ]
        },
        "linecol": [
          162,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CIINVCORSE + IPREPCORSE + CICORSENOW",
          "linecol": [
            163,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTCORSE",
          "linecol": [
            163,
            1
          ]
        },
        "linecol": [
          163,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023105",
      "linecol": [
        159,
        7
      ]
    },
    "linecol": [
      159,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                165,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                165,
                23
              ]
            }
          ],
          "linecol": [
            165,
            15
          ]
        }
      ],
      "linecol": [
        165,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-IRETS-CRDIE-ICREREVET-CIGLO-CICULTUR-CIGPA-CIDONENTR-CICORSE,IPCHER))",
          "linecol": [
            166,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRECH",
          "linecol": [
            166,
            1
          ]
        },
        "linecol": [
          166,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023106",
      "linecol": [
        164,
        7
      ]
    },
    "linecol": [
      164,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                168,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                168,
                23
              ]
            }
          ],
          "linecol": [
            168,
            15
          ]
        }
      ],
      "linecol": [
        168,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-IRETS-CRDIE-ICREREVET-CIGLO-CICULTUR-CIGPA-CIDONENTR-CICORSE-CIRECH,COD8UW))",
          "linecol": [
            169,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICOMPEMPL",
          "linecol": [
            169,
            1
          ]
        },
        "linecol": [
          169,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(COD8UW + COD8TL) * (1 - positif(RE168+TAX1649))",
          "linecol": [
            171,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DIEMPLOI",
          "linecol": [
            171,
            1
          ]
        },
        "linecol": [
          171,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(CICOMPEMPL + COD8TL) * (1 - positif(RE168+TAX1649))",
          "linecol": [
            173,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIEMPLOI",
          "linecol": [
            173,
            1
          ]
        },
        "linecol": [
          173,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "abs(min(0 ,IRB+TAXASSUR+IPCAPTAXTOT+TAXLOY -AVFISCOPTER-CIRCMAVFT-IRETS-CRDIE-ICREREVET-CIGLO-CICULTUR-CIGPA-CIDONENTR-CICORSE-CIRECH-CICOMPEMPL))",
          "linecol": [
            175,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IRECR",
          "linecol": [
            175,
            1
          ]
        },
        "linecol": [
          175,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231061",
      "linecol": [
        167,
        7
      ]
    },
    "linecol": [
      167,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                177,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                177,
                23
              ]
            }
          ],
          "linecol": [
            177,
            15
          ]
        }
      ],
      "linecol": [
        177,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "abs(CIINVCORSE+IPREPCORSE-CICORSE)",
          "linecol": [
            178,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPCORSE",
          "linecol": [
            178,
            1
          ]
        },
        "linecol": [
          178,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "abs(IPCHER - CIRECH)",
          "linecol": [
            179,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPRECH",
          "linecol": [
            179,
            1
          ]
        },
        "linecol": [
          179,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "abs(COD8UW - CICOMPEMPL)",
          "linecol": [
            180,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPCICE",
          "linecol": [
            180,
            1
          ]
        },
        "linecol": [
          180,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231051",
      "linecol": [
        176,
        7
      ]
    },
    "linecol": [
      176,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                182,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                182,
                23
              ]
            }
          ],
          "linecol": [
            182,
            15
          ]
        }
      ],
      "linecol": [
        182,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CRECONGAGRI * (1-V_CNR)",
          "linecol": [
            183,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICONGAGRI",
          "linecol": [
            183,
            1
          ]
        },
        "linecol": [
          183,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023107",
      "linecol": [
        181,
        7
      ]
    },
    "linecol": [
      181,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                185,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                185,
                23
              ]
            }
          ],
          "linecol": [
            185,
            15
          ]
        }
      ],
      "linecol": [
        185,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(IPCAPTAXTOT,arr((PRELIBXT - arr(PRELIBXT * TX10/100))*T_PCAPTAX/100))",
          "linecol": [
            186,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCICAP",
          "linecol": [
            186,
            1
          ]
        },
        "linecol": [
          186,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,(PRELIBXT - arr(PRELIBXT * TX10/100)))",
          "linecol": [
            187,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCICAPAVIS",
          "linecol": [
            187,
            1
          ]
        },
        "linecol": [
          187,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB + TAXASSUR + IPCAPTAXTOT +TAXLOY +CHRAPRES - AVFISCOPTER ,min(IPCAPTAXTOT,BCICAP)))",
          "linecol": [
            188,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICAP",
          "linecol": [
            188,
            1
          ]
        },
        "linecol": [
          188,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231071",
      "linecol": [
        184,
        7
      ]
    },
    "linecol": [
      184,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                190,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                190,
                23
              ]
            }
          ],
          "linecol": [
            190,
            15
          ]
        }
      ],
      "linecol": [
        190,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(CHRAPRES * (REGCI*(1-present(COD8XY))+COD8XY+0) / (REVKIREHR - TEFFHRC+COD8YJ))",
          "linecol": [
            191,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCICHR",
          "linecol": [
            191,
            1
          ]
        },
        "linecol": [
          191,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(IRB + TAXASSUR + IPCAPTAXTOT +TAXLOY +CHRAPRES - AVFISCOPTER-CICAP ,min(CHRAPRES,BCICHR)))",
          "linecol": [
            192,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICHR",
          "linecol": [
            192,
            1
          ]
        },
        "linecol": [
          192,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231072",
      "linecol": [
        189,
        7
      ]
    },
    "linecol": [
      189,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                194,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                194,
                23
              ]
            }
          ],
          "linecol": [
            194,
            15
          ]
        }
      ],
      "linecol": [
        194,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0 , min(RDSYVO+0,arr(TX_BASECOTSYN/100* (TSBV*IND_10V - BPCOSAV + EXPRV)))) + max(0 , min(RDSYCJ+0,arr(TX_BASECOTSYN/100* (TSBC*IND_10C - BPCOSAC + EXPRC)))) + min(RDSYPP+0,arr(TX_BASECOTSYN/100* (somme(i=1..4:TSBi *IND_10i + EXPRi))))",
          "linecol": [
            195,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCOS",
          "linecol": [
            195,
            1
          ]
        },
        "linecol": [
          195,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(TX_REDCOTSYN/100 * BCOS) * (1 - V_CNR)",
          "linecol": [
            203,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CISYND",
          "linecol": [
            203,
            1
          ]
        },
        "linecol": [
          203,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDSYVO + RDSYCJ + RDSYPP",
          "linecol": [
            205,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DSYND",
          "linecol": [
            205,
            1
          ]
        },
        "linecol": [
          205,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BCOS * (1-V_CNR)",
          "linecol": [
            207,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ASYND",
          "linecol": [
            207,
            1
          ]
        },
        "linecol": [
          207,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "407015",
      "linecol": [
        193,
        7
      ]
    },
    "linecol": [
      193,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                210,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                210,
                23
              ]
            }
          ],
          "linecol": [
            210,
            15
          ]
        }
      ],
      "linecol": [
        210,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IRE - EPAV + CICORSE + CICULTUR + CIGPA + CIRCMAVFT",
          "linecol": [
            212,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAVF",
          "linecol": [
            212,
            1
          ]
        },
        "linecol": [
          212,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BCIGA + IPRECH + IPCHER + IPELUS + RCMAVFT + DIREPARGNE + COD3VE + COD3UV) * (1 - positif(RE168+TAX1649)) + CIRCMAVFT * positif(RE168+TAX1649)",
          "linecol": [
            215,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DIAVF2",
          "linecol": [
            215,
            1
          ]
        },
        "linecol": [
          215,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(CIDIREPARGNE + IPRECH + CIRECH + IPELUS + CIRCMAVFT + CIGPA + CIEXCEDENT + 0) * (1 - positif(RE168 + TAX1649)) + CIRCMAVFT * positif(RE168 + TAX1649)",
          "linecol": [
            218,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAVF2",
          "linecol": [
            218,
            1
          ]
        },
        "linecol": [
          218,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "IAVF2 + CREFAM + CREAPP",
          "linecol": [
            221,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "IAVFGP",
          "linecol": [
            221,
            1
          ]
        },
        "linecol": [
          221,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023108",
      "linecol": [
        209,
        7
      ]
    },
    "linecol": [
      209,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                224,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                224,
                23
              ]
            }
          ],
          "linecol": [
            224,
            15
          ]
        }
      ],
      "linecol": [
        224,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "EPAV",
          "linecol": [
            226,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "I2DH",
          "linecol": [
            226,
            1
          ]
        },
        "linecol": [
          226,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "3023109",
      "linecol": [
        223,
        7
      ]
    },
    "linecol": [
      223,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                229,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                229,
                23
              ]
            }
          ],
          "linecol": [
            229,
            15
          ]
        }
      ],
      "linecol": [
        229,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(V_BTGECUM * (1 - present(DEPMOBIL)) + DEPMOBIL)",
          "linecol": [
            230,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BTANTGECUM",
          "linecol": [
            230,
            1
          ]
        },
        "linecol": [
          230,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(V_BTGECUMWL * (1 - present(COD7WD)) + COD7WD)",
          "linecol": [
            231,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BTANTGECUMWL",
          "linecol": [
            231,
            1
          ]
        },
        "linecol": [
          231,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max( (   PLAF_GE2 * (1 + BOOL_0AM) + PLAF_GE2_PACQAR * (V_0CH + V_0DP) + PLAF_GE2_PAC * (V_0CR + V_0CF + V_0DJ + V_0DN) ) - BTANTGECUM , 0 )",
          "linecol": [
            232,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "P2GE",
          "linecol": [
            232,
            1
          ]
        },
        "linecol": [
          232,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDTECH + RDEQPAHA",
          "linecol": [
            238,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BGEDECL",
          "linecol": [
            238,
            1
          ]
        },
        "linecol": [
          238,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(RDEQPAHA , P2GE) * (1 - V_CNR)",
          "linecol": [
            239,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BGEPAHA",
          "linecol": [
            239,
            1
          ]
        },
        "linecol": [
          239,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,P2GE + PLAF_GE2 * (1 + BOOL_0AM) -  BGEPAHA - BTANTGECUMWL)",
          "linecol": [
            240,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "P2GEWL",
          "linecol": [
            240,
            1
          ]
        },
        "linecol": [
          240,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(RDTECH , P2GEWL) * (1 - V_CNR)",
          "linecol": [
            242,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BGTECH",
          "linecol": [
            242,
            1
          ]
        },
        "linecol": [
          242,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BGTECH + BGEPAHA",
          "linecol": [
            243,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTBGE",
          "linecol": [
            243,
            1
          ]
        },
        "linecol": [
          243,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BGEPAHA * TX25 / 100 ) * (1 - V_CNR)",
          "linecol": [
            244,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RGEPAHA",
          "linecol": [
            244,
            1
          ]
        },
        "linecol": [
          244,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BGTECH * TX40 / 100 ) * (1 - V_CNR)",
          "linecol": [
            245,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RGTECH",
          "linecol": [
            245,
            1
          ]
        },
        "linecol": [
          245,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr (RGTECH + RGEPAHA ) * (1 - positif(RE168 + TAX1649)) * (1 - V_CNR)",
          "linecol": [
            246,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIGE",
          "linecol": [
            246,
            1
          ]
        },
        "linecol": [
          246,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(P2GE,BGEPAHA + BGTECH)+BTANTGECUM",
          "linecol": [
            247,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GECUM",
          "linecol": [
            247,
            1
          ]
        },
        "linecol": [
          247,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,BGTECH + BGEPAHA - min(P2GE,BGEPAHA + BGTECH)+BTANTGECUMWL)",
          "linecol": [
            248,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GECUMWL",
          "linecol": [
            248,
            1
          ]
        },
        "linecol": [
          248,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CREAIDE",
          "linecol": [
            249,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DAIDC",
          "linecol": [
            249,
            1
          ]
        },
        "linecol": [
          249,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BADCRE * (1-V_CNR)",
          "linecol": [
            250,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AAIDC",
          "linecol": [
            250,
            1
          ]
        },
        "linecol": [
          250,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr (BADCRE * TX_AIDOMI /100) * (1 - positif(RE168 + TAX1649)) * (1 - V_CNR)",
          "linecol": [
            251,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIADCRE",
          "linecol": [
            251,
            1
          ]
        },
        "linecol": [
          251,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231011",
      "linecol": [
        228,
        7
      ]
    },
    "linecol": [
      228,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                253,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                253,
                23
              ]
            }
          ],
          "linecol": [
            253,
            15
          ]
        }
      ],
      "linecol": [
        253,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "LOYIMP",
          "linecol": [
            254,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DLOYIMP",
          "linecol": [
            254,
            1
          ]
        },
        "linecol": [
          254,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "DLOYIMP",
          "linecol": [
            255,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ALOYIMP",
          "linecol": [
            255,
            1
          ]
        },
        "linecol": [
          255,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(ALOYIMP*TX_LOYIMP/100) * (1 - positif(RE168 + TAX1649))",
          "linecol": [
            256,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CILOYIMP",
          "linecol": [
            256,
            1
          ]
        },
        "linecol": [
          256,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231012",
      "linecol": [
        252,
        7
      ]
    },
    "linecol": [
      252,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                258,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                258,
                23
              ]
            }
          ],
          "linecol": [
            258,
            15
          ]
        }
      ],
      "linecol": [
        258,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CIBOIBAIL  + COD7SA  + CINRJBAIL  + COD7SB  + CRENRJ  + COD7SC  + TRAMURWC + COD7WB  + CINRJ  + COD7RG  + TRATOIVG  + COD7VH  + CIDEP15  + COD7RH + MATISOSI  + COD7RI  + TRAVITWT  + COD7WU  + MATISOSJ  + COD7RJ  + VOLISO + COD7RK  + PORENT  + COD7RL  + CHAUBOISN  + COD7RN  + POMPESP  + COD7RP + POMPESR  + COD7RR  + CHAUFSOL  + COD7RS  + POMPESQ  + COD7RQ  + ENERGIEST + COD7RT  + DIAGPERF  + COD7TV  + RESCHAL  + COD7TW  + COD7RV  + COD7RW  + COD7RZ",
          "linecol": [
            261,
            3
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DDEVDUR",
          "linecol": [
            260,
            1
          ]
        },
        "linecol": [
          260,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max( (   PLAF_DEVDUR * (1 + BOOL_0AM) + PLAF_GE2_PACQAR * (V_0CH+V_0DP) + PLAF_GE2_PAC * (V_0CR+V_0CF+V_0DJ+V_0DN) ) - (V_BTDEVDUR*(1-present(DEPCHOBAS))+DEPCHOBAS) , 0 )",
          "linecol": [
            268,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PDEVDUR",
          "linecol": [
            268,
            1
          ]
        },
        "linecol": [
          268,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(CIBOIBAIL + CINRJBAIL + CRENRJ + CINRJ + CIDEP15 + MATISOSI + MATISOSJ + VOLISO + PORENT + CHAUBOISN + POMPESP + POMPESR + CHAUFSOL + POMPESQ + ENERGIEST + DIAGPERF + RESCHAL + TRAMURWC + TRATOIVG + TRAVITWT) * 1 + 0",
          "linecol": [
            272,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BQRESS",
          "linecol": [
            272,
            1
          ]
        },
        "linecol": [
          272,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif((present(TRAVITWT)+present(COD7WU)) * (present(TRAMURWC)+present(COD7WB)) +(present(TRAVITWT)+present(COD7WU)) * (present(TRATOIVG)+present(COD7VH)) +(present(TRAVITWT)+present(COD7WU)) * (present(CHAUBOISN)+present(COD7RN)) +(present(TRAVITWT)+present(COD7WU)) * (present(POMPESR)+present(COD7RR)+present(CHAUFSOL)+present(COD7RS)) +(present(TRAVITWT)+present(COD7WU)) * (present(CIBOIBAIL)+present(COD7SA)+present(CINRJBAIL)+present(COD7SB) +present(POMPESP)+present(COD7RP)+present(POMPESQ)+present(COD7RQ) +present(ENERGIEST)+present(COD7RT)) +(present(TRAMURWC)+present(COD7WB)) * (present(TRATOIVG)+present(COD7VH)) +(present(TRAMURWC)+present(COD7WB)) * (present(CHAUBOISN)+present(COD7RN)) +(present(TRAMURWC)+present(COD7WB)) * (present(POMPESR)+present(COD7RR)+present(CHAUFSOL)+present(COD7RS)) +(present(TRAMURWC)+present(COD7WB)) * (present(CIBOIBAIL)+present(COD7SA)+present(CINRJBAIL)+present(COD7SB) +present(POMPESP)+present(COD7RP)+present(POMPESQ)+present(COD7RQ) +present(ENERGIEST)+present(COD7RT)) +(present(TRATOIVG)+present(COD7VH)) * (present(CHAUBOISN)+present(COD7RN)) +(present(TRATOIVG)+present(COD7VH)) * (present(CHAUBOISN)+present(COD7RN)) +(present(TRATOIVG)+present(COD7VH)) * (present(POMPESR)+present(COD7RR)+present(CHAUFSOL)+present(COD7RS)) +(present(TRATOIVG)+present(COD7VH)) * (present(CIBOIBAIL)+present(COD7SA)+present(CINRJBAIL)+present(COD7SB) +present(POMPESP)+present(COD7RP)+present(POMPESQ)+present(COD7RQ) +present(ENERGIEST)+present(COD7RT)) +(present(CHAUBOISN)+present(COD7RN)) * (present(POMPESR)+present(COD7RR)+present(CHAUFSOL)+present(COD7RS)) +(present(CHAUBOISN)+present(COD7RN)) * (present(CIBOIBAIL)+present(COD7SA)+present(CINRJBAIL)+present(COD7SB) +present(POMPESP)+present(COD7RP)+present(POMPESQ)+present(COD7RQ) +present(ENERGIEST)+present(COD7RT)) +(present(POMPESR)+present(COD7RR)+present(CHAUFSOL)+present(COD7RS)) * (present(CIBOIBAIL)+present(COD7SA)+present(CINRJBAIL)+present(COD7SB) +present(POMPESP)+present(COD7RP)+present(POMPESQ)+present(COD7RQ) +present(ENERGIEST)+present(COD7RT)) ) + 0",
          "linecol": [
            276,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BQTRAV",
          "linecol": [
            276,
            1
          ]
        },
        "linecol": [
          276,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(1-V_REGCO) * arr(  24043 + 2808.5 * min( (NBPT - 1) * 4 , 2 ) * positif( NBPT -1 ) + 2210.5 * ( (NBPT - 1.5) * 4 ) * positif( NBPT - 1.5 ) )",
          "linecol": [
            305,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAF1M",
          "linecol": [
            305,
            1
          ]
        },
        "linecol": [
          305,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(5-V_REGCO) * arr( 29058 + 3082 * min( (NBPT - 1) * 4 , 2 ) * positif( NBPT -1 ) + 2938.5  * min( (NBPT - 1.5) * 4 , 2 ) * positif( NBPT - 1.5 ) + 2210.5  *  ( (NBPT - 2) * 4 ) * positif( NBPT - 2 ) )",
          "linecol": [
            310,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAF1MGR",
          "linecol": [
            310,
            1
          ]
        },
        "linecol": [
          310,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(null(6-V_REGCO)+null(7-V_REGCO)) * arr( 31843 + 3082 * min( (NBPT - 1) * 4 , 4 ) * positif( NBPT -1 ) + 2624.5  * min( (NBPT - 2) * 4 , 2 ) * positif( NBPT - 2 ) + 2210.5  *  ( (NBPT - 2.5) * 4 ) * positif( NBPT - 2.5 ) )",
          "linecol": [
            316,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAF1GM",
          "linecol": [
            316,
            1
          ]
        },
        "linecol": [
          316,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(1-V_REGCO) * arr(  25005 + 2921 * min( (NBPT - 1) * 4 , 2 ) * positif( NBPT -1 ) + 2299 * ( (NBPT - 1.5) * 4 ) * positif( NBPT - 1.5 ) )",
          "linecol": [
            323,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAF2M",
          "linecol": [
            323,
            1
          ]
        },
        "linecol": [
          323,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(5-V_REGCO) * arr( 30220 + 3205.5 * min( (NBPT - 1) * 4 , 2 ) * positif( NBPT -1 ) + 3056  * min( (NBPT - 1.5) * 4 , 2 ) * positif( NBPT - 1.5 ) + 2299  *  ( (NBPT - 2) * 4 ) * positif( NBPT - 2 ) )",
          "linecol": [
            329,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAF2MGR",
          "linecol": [
            329,
            1
          ]
        },
        "linecol": [
          329,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(null(6-V_REGCO)+null(7-V_REGCO)) * arr( 33117 + 3205.5 * min( (NBPT - 1) * 4 , 4 ) * positif( NBPT -1 ) + 2729.5  * min( (NBPT - 2) * 4 , 2 ) * positif( NBPT - 2 ) + 2299  *  ( (NBPT - 2.5) * 4 ) * positif( NBPT - 2.5 ) )",
          "linecol": [
            336,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAF2GM",
          "linecol": [
            336,
            1
          ]
        },
        "linecol": [
          336,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PLAF1M + PLAF1MGR + PLAF1GM",
          "linecol": [
            343,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAF1",
          "linecol": [
            343,
            1
          ]
        },
        "linecol": [
          343,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PLAF2M + PLAF2MGR + PLAF2GM",
          "linecol": [
            344,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PLAF2",
          "linecol": [
            344,
            1
          ]
        },
        "linecol": [
          344,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(positif_ou_nul(PLAF1 - ((V_BTRFRN2+0)*(1-present(RFRN2))+RFRN2)) + (1-positif_ou_nul(PLAF1 - ((V_BTRFRN2+0)*(1-present(RFRN2))+RFRN2))) * positif_ou_nul(PLAF2 - ((V_BTRFRN1+0)*(1-present(RFRN1))+RFRN1))+present(COD7WX))",
          "linecol": [
            346,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RESS",
          "linecol": [
            346,
            1
          ]
        },
        "linecol": [
          346,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(PDEVDUR,COD7SA  + COD7SB  + COD7SC  + COD7WB  + COD7RG  + COD7VH  + COD7RH  + COD7RI + COD7WU  + COD7RJ  + COD7RK  + COD7RL  + COD7RN  + COD7RP  + COD7RR  + COD7RS + COD7RQ  + COD7RT  + COD7TV  + COD7TW  + COD7RV  + COD7RW  + COD7RZ) * positif(positif(BQRESS)*positif(BQTRAV) +positif(BQRESS)*null(BQTRAV)*null(RESS) +positif(BQRESS)*null(BQTRAV)*positif(RESS) +positif(BQRESS)*null(BQTRAV)*positif(RESS)*present(CRECHOBOI) +null(BQRESS)) ",
          "linecol": [
            350,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDEV30",
          "linecol": [
            350,
            1
          ]
        },
        "linecol": [
          350,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(0,PDEVDUR-BDEV30),CIBOIBAIL  + CINRJBAIL  + TRAMURWC  + TRATOIVG  + TRAVITWT + CHAUBOISN  + POMPESP  + POMPESR  + CHAUFSOL  + POMPESQ  + ENERGIEST) * positif(positif(BQRESS)*positif(BQTRAV))",
          "linecol": [
            360,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDEV25",
          "linecol": [
            360,
            1
          ]
        },
        "linecol": [
          360,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(0,PDEVDUR-BDEV30-BDEV25),CRENRJ  + CINRJ  + CIDEP15  + MATISOSI  + MATISOSJ + VOLISO  + PORENT  + DIAGPERF  + RESCHAL) * positif(positif(BQRESS)*positif(BQTRAV))  + min(max(0,PDEVDUR-BDEV30),( CIBOIBAIL  + CINRJBAIL  + CRENRJ  + TRAMURWC  + CINRJ  + TRATOIVG  + CIDEP15  + MATISOSI  + TRAVITWT + MATISOSJ  + VOLISO  + PORENT  + CHAUBOISN  + POMPESP  + POMPESR  + CHAUFSOL  + POMPESQ  + ENERGIEST + DIAGPERF  + RESCHAL) * (1-present(COD7WX)) + present(COD7WX) * COD7WX) *positif(positif(BQRESS)*null(BQTRAV)*positif(RESS)*(1-present(CRECHOBOI)))  + min(max(0,PDEVDUR-BDEV30),(CIBOIBAIL  + CINRJBAIL  + CRENRJ  + TRAMURWC  + CINRJ  + TRATOIVG  + CIDEP15 + MATISOSI  + CHAUBOISN  + POMPESP  + POMPESR  + CHAUFSOL  + POMPESQ  + ENERGIEST + DIAGPERF  + RESCHAL)* (1-present(COD7WX)) + present(COD7WX) * COD7WX) * positif(positif(BQRESS)*null(BQTRAV)*positif(RESS)*present(CRECHOBOI)) ",
          "linecol": [
            364,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDEV15",
          "linecol": [
            364,
            1
          ]
        },
        "linecol": [
          364,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BDEV30 + BDEV25 + BDEV15",
          "linecol": [
            379,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ADEVDUR",
          "linecol": [
            379,
            1
          ]
        },
        "linecol": [
          379,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( BDEV30 * TX30/100 +BDEV25 * TX25/100 +BDEV15 * TX15/100 )  * (1 - positif(RE168 + TAX1649)) * (1 - V_CNR)",
          "linecol": [
            381,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIDEVDUR",
          "linecol": [
            381,
            1
          ]
        },
        "linecol": [
          381,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "ADEVDUR + (V_BTDEVDUR*(1-present(DEPCHOBAS))+DEPCHOBAS)",
          "linecol": [
            386,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEVDURCUM",
          "linecol": [
            386,
            1
          ]
        },
        "linecol": [
          386,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231014",
      "linecol": [
        257,
        7
      ]
    },
    "linecol": [
      257,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                388,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                388,
                23
              ]
            }
          ],
          "linecol": [
            388,
            15
          ]
        }
      ],
      "linecol": [
        388,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RISKTEC",
          "linecol": [
            389,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DTEC",
          "linecol": [
            389,
            1
          ]
        },
        "linecol": [
          389,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(DTEC) * DTEC",
          "linecol": [
            390,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ATEC",
          "linecol": [
            390,
            1
          ]
        },
        "linecol": [
          390,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr (ATEC * TX40/100)",
          "linecol": [
            391,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CITEC",
          "linecol": [
            391,
            1
          ]
        },
        "linecol": [
          391,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231015",
      "linecol": [
        387,
        7
      ]
    },
    "linecol": [
      387,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                393,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                393,
                23
              ]
            }
          ],
          "linecol": [
            393,
            15
          ]
        }
      ],
      "linecol": [
        393,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PRETUD + PRETUDANT",
          "linecol": [
            394,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DPRETUD",
          "linecol": [
            394,
            1
          ]
        },
        "linecol": [
          394,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(min(PRETUD,LIM_PRETUD) + min(PRETUDANT,LIM_PRETUD*CASEPRETUD),0) * (1-V_CNR)",
          "linecol": [
            395,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "APRETUD",
          "linecol": [
            395,
            1
          ]
        },
        "linecol": [
          395,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(APRETUD*TX_PRETUD/100) * (1 - positif(RE168 + TAX1649)) * (1-V_CNR)",
          "linecol": [
            397,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIPRETUD",
          "linecol": [
            397,
            1
          ]
        },
        "linecol": [
          397,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231016",
      "linecol": [
        392,
        7
      ]
    },
    "linecol": [
      392,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                399,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                399,
                23
              ]
            }
          ],
          "linecol": [
            399,
            15
          ]
        }
      ],
      "linecol": [
        399,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=0..7: min (1 , max(0 , V_0Fi + AG_LIMFG - V_ANREV))) + (1 - positif(somme(i=0..7:V_0Fi) + 0)) * V_0CF",
          "linecol": [
            401,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EM7",
          "linecol": [
            401,
            1
          ]
        },
        "linecol": [
          401,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme (i=0..5: min (1 , max(0 , V_0Hi + AG_LIMFG - V_ANREV))) + somme (j=0..3: min (1 , max(0 , V_0Pj + AG_LIMFG - V_ANREV))) + (1 - positif(somme(i=0..5: V_0Hi) + somme(j=0..3: V_0Pj) + 0)) * (V_0CH + V_0DP)",
          "linecol": [
            404,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EM7QAR",
          "linecol": [
            404,
            1
          ]
        },
        "linecol": [
          404,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(RDGARD1,PLAF_REDGARD) + min(RDGARD2,PLAF_REDGARD) + min(RDGARD3,PLAF_REDGARD) + min(RDGARD4,PLAF_REDGARD) + min(RDGARD1QAR,PLAF_REDGARDQAR) + min(RDGARD2QAR,PLAF_REDGARDQAR) + min(RDGARD3QAR,PLAF_REDGARDQAR) + min(RDGARD4QAR,PLAF_REDGARDQAR) ",
          "linecol": [
            408,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BRFG",
          "linecol": [
            408,
            1
          ]
        },
        "linecol": [
          408,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr ( (BRFG) * TX_REDGARD /100 ) * (1 -V_CNR)",
          "linecol": [
            413,
            7
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RFG",
          "linecol": [
            413,
            1
          ]
        },
        "linecol": [
          413,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "somme(i=1..4:RDGARDi)+somme(i=1..4:RDGARDiQAR)",
          "linecol": [
            414,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DGARD",
          "linecol": [
            414,
            1
          ]
        },
        "linecol": [
          414,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(BRFG) * (1-V_CNR)",
          "linecol": [
            415,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AGARD",
          "linecol": [
            415,
            1
          ]
        },
        "linecol": [
          415,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RFG * (1 - positif(RE168 + TAX1649))",
          "linecol": [
            416,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIGARD",
          "linecol": [
            416,
            1
          ]
        },
        "linecol": [
          416,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231017",
      "linecol": [
        398,
        7
      ]
    },
    "linecol": [
      398,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                418,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                418,
                23
              ]
            }
          ],
          "linecol": [
            418,
            15
          ]
        }
      ],
      "linecol": [
        418,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PREHABT + PREHABTN + PREHABTN1 + PREHABT1 + PREHABT2 + PREHABTN2 + PREHABTVT",
          "linecol": [
            420,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PREHAB",
          "linecol": [
            420,
            1
          ]
        },
        "linecol": [
          420,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(( PLAFHABPRIN * (1 + BOOL_0AM) * (1+positif(V_0AP+V_0AF+V_0CG+V_0CI+V_0CR)) + (PLAFHABPRINENF/2) * (V_0CH + V_0DP) + PLAFHABPRINENF * (V_0CR + V_0CF + V_0DJ + V_0DN) ) ,0)",
          "linecol": [
            422,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIHP",
          "linecol": [
            422,
            1
          ]
        },
        "linecol": [
          422,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(BCIHP , PREHABT) * (1 - V_CNR)",
          "linecol": [
            428,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIHABPRIN1",
          "linecol": [
            428,
            1
          ]
        },
        "linecol": [
          428,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(0,BCIHP-BCIHABPRIN1),PREHABT1) * (1 - V_CNR)",
          "linecol": [
            429,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIHABPRIN2",
          "linecol": [
            429,
            1
          ]
        },
        "linecol": [
          429,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(0,BCIHP-BCIHABPRIN1-BCIHABPRIN2),PREHABTN) * (1 - V_CNR)",
          "linecol": [
            430,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIHABPRIN3",
          "linecol": [
            430,
            1
          ]
        },
        "linecol": [
          430,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(0,BCIHP-BCIHABPRIN1-BCIHABPRIN2-BCIHABPRIN3),PREHABTN1) * (1 - V_CNR)",
          "linecol": [
            431,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIHABPRIN4",
          "linecol": [
            431,
            1
          ]
        },
        "linecol": [
          431,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(0,BCIHP-BCIHABPRIN1-BCIHABPRIN2-BCIHABPRIN3-BCIHABPRIN4),PREHABT2) * (1 - V_CNR)",
          "linecol": [
            432,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIHABPRIN5",
          "linecol": [
            432,
            1
          ]
        },
        "linecol": [
          432,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(0,BCIHP-BCIHABPRIN1-BCIHABPRIN2-BCIHABPRIN3-BCIHABPRIN4-BCIHABPRIN5),PREHABTN2) * (1 - V_CNR)",
          "linecol": [
            433,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIHABPRIN6",
          "linecol": [
            433,
            1
          ]
        },
        "linecol": [
          433,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(max(0,BCIHP-BCIHABPRIN1-BCIHABPRIN2-BCIHABPRIN3-BCIHABPRIN4-BCIHABPRIN5-BCIHABPRIN6),PREHABTVT) * (1 - V_CNR)",
          "linecol": [
            434,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIHABPRIN7",
          "linecol": [
            434,
            1
          ]
        },
        "linecol": [
          434,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BCIHABPRIN1 + BCIHABPRIN2 + BCIHABPRIN3 + BCIHABPRIN4 + BCIHABPRIN5 + BCIHABPRIN6 + BCIHABPRIN7",
          "linecol": [
            436,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIHABPRIN",
          "linecol": [
            436,
            1
          ]
        },
        "linecol": [
          436,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr((BCIHABPRIN1 * TX40/100) + (BCIHABPRIN2 * TX40/100) + (BCIHABPRIN3 * TX30/100) + (BCIHABPRIN4 * TX25/100) + (BCIHABPRIN5 * TX20/100) + (BCIHABPRIN6 * TX15/100) + (BCIHABPRIN7 * TX10/100)) * (1 - positif(RE168 + TAX1649)) * (1 - V_CNR)",
          "linecol": [
            438,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIHABPRIN",
          "linecol": [
            438,
            1
          ]
        },
        "linecol": [
          438,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231018",
      "linecol": [
        417,
        7
      ]
    },
    "linecol": [
      417,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                447,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                447,
                23
              ]
            }
          ],
          "linecol": [
            447,
            15
          ]
        }
      ],
      "linecol": [
        447,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "RDFORESTRA + SINISFORET + COD7UA + COD7UB + RDFORESTGES + COD7UI",
          "linecol": [
            449,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BDCIFORET",
          "linecol": [
            449,
            1
          ]
        },
        "linecol": [
          449,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(COD7UA,max(0,PLAF_FOREST1 * (1 + BOOL_0AM)))) * (1-V_CNR)",
          "linecol": [
            450,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIFORETUA",
          "linecol": [
            450,
            1
          ]
        },
        "linecol": [
          450,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(COD7UB,max(0,PLAF_FOREST1 * (1 + BOOL_0AM)-BCIFORETUA))) * (1-V_CNR)",
          "linecol": [
            451,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIFORETUB",
          "linecol": [
            451,
            1
          ]
        },
        "linecol": [
          451,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(RDFORESTRA,PLAF_FOREST1 * (1 + BOOL_0AM)-BCIFORETUA-BCIFORETUB)) * (1-V_CNR)",
          "linecol": [
            452,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIFORETUP",
          "linecol": [
            452,
            1
          ]
        },
        "linecol": [
          452,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(SINISFORET,max(0,PLAF_FOREST1 * (1 + BOOL_0AM)-BCIFORETUA-BCIFORETUB-BCIFORETUP))) * (1-V_CNR)",
          "linecol": [
            453,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIFORETUT",
          "linecol": [
            453,
            1
          ]
        },
        "linecol": [
          453,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(COD7UI,max(0,PLAF_FOREST2 * (1 + BOOL_0AM))))  * (1-V_CNR)",
          "linecol": [
            454,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIFORETUI",
          "linecol": [
            454,
            1
          ]
        },
        "linecol": [
          454,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,min(RDFORESTGES, PLAF_FOREST2 * (1 + BOOL_0AM)-BCIFORETUI)) * (1-V_CNR)",
          "linecol": [
            455,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIFORETUQ",
          "linecol": [
            455,
            1
          ]
        },
        "linecol": [
          455,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BCIFORETUP+BCIFORETUT+BCIFORETUA+BCIFORETUB+BCIFORETUQ+BCIFORETUI",
          "linecol": [
            456,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BCIFORET",
          "linecol": [
            456,
            1
          ]
        },
        "linecol": [
          456,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BCIFORETUP * TX18/100 + BCIFORETUT * TX18/100 + BCIFORETUA * TX25/100 + BCIFORETUB * TX25/100 + BCIFORETUQ * TX18/100 + BCIFORETUI * TX25/100)",
          "linecol": [
            457,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIFORET",
          "linecol": [
            457,
            1
          ]
        },
        "linecol": [
          457,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231020",
      "linecol": [
        446,
        7
      ]
    },
    "linecol": [
      446,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                460,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                460,
                23
              ]
            }
          ],
          "linecol": [
            460,
            15
          ]
        }
      ],
      "linecol": [
        460,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,COD7UA - PLAF_FOREST1 * (1+ BOOL_0AM)) * (1-V_CNR)",
          "linecol": [
            462,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPCIFAD",
          "linecol": [
            462,
            1
          ]
        },
        "linecol": [
          462,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif_ou_nul(COD7UA - PLAF_FOREST1 * (1+ BOOL_0AM)) * COD7UB + (1-positif_ou_nul(COD7UA - PLAF_FOREST1 * (1+ BOOL_0AM))) * max(0,COD7UB - (PLAF_FOREST1 * (1+ BOOL_0AM) - COD7UA))) * (1-V_CNR)",
          "linecol": [
            463,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPCIFADSIN",
          "linecol": [
            463,
            1
          ]
        },
        "linecol": [
          463,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif_ou_nul(COD7UA + COD7UB - PLAF_FOREST1 * (1+ BOOL_0AM)) * RDFORESTRA + (1-positif_ou_nul(COD7UA + COD7UB- PLAF_FOREST1 * (1+ BOOL_0AM))) * max(0,RDFORESTRA - (PLAF_FOREST1 * (1+ BOOL_0AM) - COD7UA-COD7UB))) * (1-V_CNR)",
          "linecol": [
            465,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPCIF",
          "linecol": [
            465,
            1
          ]
        },
        "linecol": [
          465,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif_ou_nul(COD7UA + COD7UB + RDFORESTRA - PLAF_FOREST1 * (1+ BOOL_0AM)) * SINISFORET + (1-positif_ou_nul(COD7UA + COD7UB+ RDFORESTRA- PLAF_FOREST1 * (1+ BOOL_0AM))) * max(0,SINISFORET - (PLAF_FOREST1 * (1+ BOOL_0AM) - COD7UA-COD7UB-RDFORESTRA))) * (1-V_CNR)",
          "linecol": [
            468,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REPCIFSIN",
          "linecol": [
            468,
            1
          ]
        },
        "linecol": [
          468,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30231025",
      "linecol": [
        459,
        7
      ]
    },
    "linecol": [
      459,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                472,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                472,
                23
              ]
            }
          ],
          "linecol": [
            472,
            15
          ]
        }
      ],
      "linecol": [
        472,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( CSGC , arr( IPPNCS * T_CSG/100 ))",
          "linecol": [
            473,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICSG",
          "linecol": [
            473,
            1
          ]
        },
        "linecol": [
          473,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( CSGCAPS , arr( IPPNCS * T_CSG/100 ))",
          "linecol": [
            474,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CICSGAPS",
          "linecol": [
            474,
            1
          ]
        },
        "linecol": [
          474,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( RDSC , arr( (IPPNCS+REVCSXA+REVCSXB+REVCSXC+REVCSXD+REVCSXE+COD8XI+COD8XJ) * T_RDS/100 ))",
          "linecol": [
            475,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRDS",
          "linecol": [
            475,
            1
          ]
        },
        "linecol": [
          475,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( RDSCAPS , arr( (IPPNCS+REVCSXA+REVCSXB+REVCSXC+REVCSXD+REVCSXE) * T_RDS/100 ))",
          "linecol": [
            476,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRDSAPS",
          "linecol": [
            476,
            1
          ]
        },
        "linecol": [
          476,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( PRSC , arr( IPPNCS * T_PREL_SOC/100 ))",
          "linecol": [
            477,
            9
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIPRS",
          "linecol": [
            477,
            1
          ]
        },
        "linecol": [
          477,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( PRSCAPS , arr( IPPNCS * T_PREL_SOC/100 ))",
          "linecol": [
            478,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIPRSAPS",
          "linecol": [
            478,
            1
          ]
        },
        "linecol": [
          478,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( RSE1 , arr( REVCSXA * TX075/100 ))",
          "linecol": [
            480,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSE1",
          "linecol": [
            480,
            1
          ]
        },
        "linecol": [
          480,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BRSE8TV * TXTV/100) * (1 - positif(ANNUL2042))",
          "linecol": [
            482,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE8TV",
          "linecol": [
            482,
            1
          ]
        },
        "linecol": [
          482,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BRSE8SA * TXTV/100) * (1 - positif(ANNUL2042))",
          "linecol": [
            483,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE8SA",
          "linecol": [
            483,
            1
          ]
        },
        "linecol": [
          483,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( RSE8TV , arr( REVCSXC * TX066/100 ))",
          "linecol": [
            484,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSE8TV",
          "linecol": [
            484,
            1
          ]
        },
        "linecol": [
          484,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( RSE8SA , arr(COD8XI * TX066/100 ))",
          "linecol": [
            485,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSE8SA",
          "linecol": [
            485,
            1
          ]
        },
        "linecol": [
          485,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CIRSE8TV + CIRSE8SA",
          "linecol": [
            486,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSE2",
          "linecol": [
            486,
            1
          ]
        },
        "linecol": [
          486,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( RSE3 , arr( REVCSXD * TX062/100 ))",
          "linecol": [
            488,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSE3",
          "linecol": [
            488,
            1
          ]
        },
        "linecol": [
          488,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BRSE8TX * TXTX/100) * (1 - positif(ANNUL2042))",
          "linecol": [
            490,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE8TX",
          "linecol": [
            490,
            1
          ]
        },
        "linecol": [
          490,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(BRSE8SB * TXTX/100) * (1 - positif(ANNUL2042))",
          "linecol": [
            491,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RSE8SB",
          "linecol": [
            491,
            1
          ]
        },
        "linecol": [
          491,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( RSE8TX , arr( REVCSXE * TX038/100 ))",
          "linecol": [
            492,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSE8TX",
          "linecol": [
            492,
            1
          ]
        },
        "linecol": [
          492,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( RSE8SB , arr( COD8XJ * TX038/100 ))",
          "linecol": [
            493,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSE8SB",
          "linecol": [
            493,
            1
          ]
        },
        "linecol": [
          493,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CIRSE8TX + CIRSE8SB",
          "linecol": [
            494,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSE4",
          "linecol": [
            494,
            1
          ]
        },
        "linecol": [
          494,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min( RSE5 , arr( REVCSXB * TX075/100 ))",
          "linecol": [
            496,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSE5",
          "linecol": [
            496,
            1
          ]
        },
        "linecol": [
          496,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "CIRSE1 + CIRSE2 + CIRSE3 + CIRSE4 + CIRSE5",
          "linecol": [
            498,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CIRSETOT",
          "linecol": [
            498,
            1
          ]
        },
        "linecol": [
          498,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "302311",
      "linecol": [
        471,
        7
      ]
    },
    "linecol": [
      471,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                503,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                503,
                23
              ]
            }
          ],
          "linecol": [
            503,
            15
          ]
        }
      ],
      "linecol": [
        503,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(V_0AV+0) * positif(V_0AZ+0) * (V_0AZ+0) + positif(DATRETETR+0) * (DATRETETR+0) * null(V_0AZ+0)",
          "linecol": [
            504,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_DATE_DEB",
          "linecol": [
            504,
            1
          ]
        },
        "linecol": [
          504,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(BOOL_0AM) * positif(V_0AZ+0) * (V_0AZ+0) + positif(DATDEPETR+0) * (DATDEPETR+0) * null(V_0AZ+0)",
          "linecol": [
            507,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_DATE_FIN",
          "linecol": [
            507,
            1
          ]
        },
        "linecol": [
          507,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30400",
      "linecol": [
        502,
        7
      ]
    },
    "linecol": [
      502,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                510,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                510,
                23
              ]
            }
          ],
          "linecol": [
            510,
            15
          ]
        }
      ],
      "linecol": [
        510,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_DATE_DEB + (01010000+V_ANREV) * null(PPE_DATE_DEB+0)",
          "linecol": [
            511,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_DEBJJMMMM",
          "linecol": [
            511,
            1
          ]
        },
        "linecol": [
          511,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( (PPE_DEBJJMMMM - V_ANREV)/10000)",
          "linecol": [
            512,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_DEBJJMM",
          "linecol": [
            512,
            1
          ]
        },
        "linecol": [
          512,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "inf(PPE_DEBJJMM/100)",
          "linecol": [
            513,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_DEBJJ",
          "linecol": [
            513,
            1
          ]
        },
        "linecol": [
          513,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_DEBJJMM -  (PPE_DEBJJ*100)",
          "linecol": [
            514,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_DEBMM",
          "linecol": [
            514,
            1
          ]
        },
        "linecol": [
          514,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_DEBJJ + (PPE_DEBMM - 1 ) * 30",
          "linecol": [
            515,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_DEBRANG",
          "linecol": [
            515,
            1
          ]
        },
        "linecol": [
          515,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30500",
      "linecol": [
        509,
        7
      ]
    },
    "linecol": [
      509,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                518,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                518,
                23
              ]
            }
          ],
          "linecol": [
            518,
            15
          ]
        }
      ],
      "linecol": [
        518,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_DATE_FIN + (30120000+V_ANREV) * null(PPE_DATE_FIN+0)",
          "linecol": [
            519,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_FINJJMMMM",
          "linecol": [
            519,
            1
          ]
        },
        "linecol": [
          519,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr( (PPE_FINJJMMMM - V_ANREV)/10000)",
          "linecol": [
            520,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_FINJJMM",
          "linecol": [
            520,
            1
          ]
        },
        "linecol": [
          520,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "inf(PPE_FINJJMM/100)",
          "linecol": [
            521,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_FINJJ",
          "linecol": [
            521,
            1
          ]
        },
        "linecol": [
          521,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_FINJJMM -  (PPE_FINJJ*100)",
          "linecol": [
            522,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_FINMM",
          "linecol": [
            522,
            1
          ]
        },
        "linecol": [
          522,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_FINJJ + (PPE_FINMM - 1 ) * 30 - 1 * positif (PPE_DATE_FIN)",
          "linecol": [
            523,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_FINRANG",
          "linecol": [
            523,
            1
          ]
        },
        "linecol": [
          523,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30501",
      "linecol": [
        517,
        7
      ]
    },
    "linecol": [
      517,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                527,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                527,
                23
              ]
            }
          ],
          "linecol": [
            527,
            15
          ]
        }
      ],
      "linecol": [
        527,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_DEBRANG",
          "linecol": [
            528,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_DEBUT",
          "linecol": [
            528,
            1
          ]
        },
        "linecol": [
          528,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_FINRANG",
          "linecol": [
            529,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_FIN",
          "linecol": [
            529,
            1
          ]
        },
        "linecol": [
          529,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(1, arr(min(PPENBJAN , PPE_FIN - PPE_DEBUT + 1)))",
          "linecol": [
            530,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPENBJ",
          "linecol": [
            530,
            1
          ]
        },
        "linecol": [
          530,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30503",
      "linecol": [
        526,
        7
      ]
    },
    "linecol": [
      526,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                532,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                532,
                23
              ]
            }
          ],
          "linecol": [
            532,
            15
          ]
        }
      ],
      "linecol": [
        532,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_TX1",
          "linecol": [
            533,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPETX1",
          "linecol": [
            533,
            1
          ]
        },
        "linecol": [
          533,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_TX2",
          "linecol": [
            534,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPETX2",
          "linecol": [
            534,
            1
          ]
        },
        "linecol": [
          534,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_TX3",
          "linecol": [
            535,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPETX3",
          "linecol": [
            535,
            1
          ]
        },
        "linecol": [
          535,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30508",
      "linecol": [
        531,
        7
      ]
    },
    "linecol": [
      531,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                537,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                537,
                23
              ]
            }
          ],
          "linecol": [
            537,
            15
          ]
        }
      ],
      "linecol": [
        537,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(   positif ( TSHALLOV ) + positif ( TSHALLOC ) + positif ( TSHALLO1 ) + positif ( TSHALLO2 ) + positif ( TSHALLO3 ) + positif ( TSHALLO4 ) + positif ( GLD1V ) + positif ( GLD2V ) + positif ( GLD3V ) + positif ( GLD1C ) + positif ( GLD2C ) + positif ( GLD3C ) + positif ( BPCOSAV ) + positif ( BPCOSAC ) + positif ( TSASSUV ) + positif ( TSASSUC ) + positif( CARTSV ) * positif( CARTSNBAV ) + positif( CARTSC ) * positif( CARTSNBAC ) + positif( CARTSP1 ) * positif( CARTSNBAP1 ) + positif( CARTSP2 ) * positif( CARTSNBAP2 ) + positif( CARTSP3 ) * positif( CARTSNBAP3 ) + positif( CARTSP4 ) * positif( CARTSNBAP4 ) + positif ( FEXV ) + positif ( BAFV ) + positif ( BAFPVV ) + positif ( BAEXV ) + positif ( BACREV ) + positif ( 4BACREV ) + positif  (BACDEV * (1 - positif(ART1731BIS)) ) + positif ( BAHEXV ) + positif ( BAHREV ) + positif ( 4BAHREV ) + positif ( BAHDEV * (1 - positif(ART1731BIS) )) + positif ( MIBEXV ) + positif ( MIBVENV ) + positif ( MIBPRESV ) + positif ( MIBPVV ) + positif ( BICEXV ) + positif ( BICNOV ) + positif ( BICDNV * (1 - positif(ART1731BIS) ) ) + positif ( BIHEXV ) + positif ( BIHNOV ) + positif ( BIHDNV * (1 - positif(ART1731BIS) )) + positif ( FEXC ) + positif ( BAFC ) + positif ( BAFPVC ) + positif ( BAEXC ) + positif ( BACREC ) + positif ( 4BACREC ) + positif (BACDEC * (1 - positif(ART1731BIS) ) ) + positif ( BAHEXC ) + positif ( BAHREC ) + positif ( 4BAHREC ) + positif ( BAHDEC * (1 - positif(ART1731BIS) ) ) + positif ( MIBEXC ) + positif ( MIBVENC ) + positif ( MIBPRESC ) + positif ( MIBPVC ) + positif ( BICEXC ) + positif ( BICNOC ) + positif ( BICDNC * (1 - positif(ART1731BIS) ) ) + positif ( BIHEXC ) + positif ( BIHNOC ) + positif ( BIHDNC * (1 - positif(ART1731BIS) )) + positif ( FEXP ) + positif ( BAFP ) + positif ( BAFPVP ) + positif ( BAEXP ) + positif ( BACREP ) + positif ( 4BACREP ) + positif  (BACDEP * (1 - positif(ART1731BIS))) + positif ( BAHEXP ) + positif ( BAHREP ) + positif ( 4BAHREP ) + positif ( BAHDEP * (1 - positif(ART1731BIS) )) + positif ( MIBEXP ) + positif ( MIBVENP ) + positif ( MIBPRESP ) + positif ( BICEXP ) + positif ( MIBPVP ) + positif ( BICNOP ) + positif ( BICDNP * (1 - positif(ART1731BIS) )) + positif ( BIHEXP ) + positif ( BIHNOP ) + positif ( BIHDNP * (1 - positif(ART1731BIS) ) ) + positif ( BNCPROEXV ) + positif ( BNCPROV ) + positif ( BNCPROPVV ) + positif ( BNCEXV ) + positif ( BNCREV ) + positif ( BNCDEV * (1 - positif(ART1731BIS) )) + positif ( BNHEXV ) + positif ( BNHREV ) + positif ( BNHDEV * (1 - positif(ART1731BIS) ) ) + positif ( BNCCRV ) + positif ( BNCPROEXC ) + positif ( BNCPROC ) + positif ( BNCPROPVC ) + positif ( BNCEXC ) + positif ( BNCREC ) + positif ( BNCDEC * (1 - positif(ART1731BIS) )) + positif ( BNHEXC ) + positif ( BNHREC ) + positif ( BNHDEC * (1 - positif(ART1731BIS))) + positif ( BNCCRC ) + positif ( BNCPROEXP ) + positif ( BNCPROP ) + positif ( BNCPROPVP ) + positif ( BNCEXP ) + positif ( BNCREP ) + positif ( BNCDEP * (1 - positif(ART1731BIS) )) + positif ( BNHEXP ) + positif ( BNHREP ) + positif ( BNHDEP * (1 - positif(ART1731BIS) ) ) + positif ( BNCCRP ) + positif ( BIPERPV ) + positif ( BIPERPC ) + positif ( BIPERPP ) + positif ( BAFORESTV ) + positif ( BAFORESTC ) + positif ( BAFORESTP ) + positif ( AUTOBICVV ) + positif ( AUTOBICPV ) + positif ( AUTOBNCV ) + positif ( AUTOBICVC ) + positif ( AUTOBICPC ) + positif ( AUTOBNCC ) + positif ( AUTOBICVP ) + positif ( AUTOBICPP ) + positif ( AUTOBNCP ) + positif ( LOCPROCGAV ) + positif ( LOCPROV ) + positif ( LOCDEFPROCGAV * (1 - positif(ART1731BIS) )) + positif ( LOCDEFPROV * (1 - positif(ART1731BIS) )) + positif ( LOCPROCGAC ) + positif ( LOCPROC ) + positif ( LOCDEFPROCGAC * (1 - positif(ART1731BIS) )) + positif ( LOCDEFPROC * (1 - positif(ART1731BIS) )) + positif ( LOCPROCGAP ) + positif ( LOCPROP ) + positif ( LOCDEFPROCGAP * (1 - positif(ART1731BIS) )) + positif ( LOCDEFPROP * (1 - positif(ART1731BIS) )) + positif ( XHONOAAV ) + positif ( XHONOAAC ) + positif ( XHONOAAP ) + positif ( XHONOV ) + positif ( XHONOC ) + positif ( XHONOP ) + positif ( GLDGRATV ) + positif ( GLDGRATC ) + positif ( CODDAJ ) + positif ( CODEAJ ) + positif ( CODDBJ ) + positif ( CODEBJ ) + positif ( SALEXTV ) + positif ( SALEXTC ) + positif ( SALEXT1 ) + positif ( SALEXT2 ) + positif ( SALEXT3 ) + positif ( SALEXT4 ) )",
          "linecol": [
            538,
            21
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_ACT_COND",
          "linecol": [
            538,
            1
          ]
        },
        "linecol": [
          538,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30510",
      "linecol": [
        536,
        7
      ]
    },
    "linecol": [
      536,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                675,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                675,
                23
              ]
            }
          ],
          "linecol": [
            675,
            15
          ]
        }
      ],
      "linecol": [
        675,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - BOOL_0AM)*(1 - positif (V_0AV)*positif(V_0AZ))",
          "linecol": [
            676,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_SIFC",
          "linecol": [
            676,
            1
          ]
        },
        "linecol": [
          676,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BOOL_0AM  + positif (V_0AV)*positif(V_0AZ)",
          "linecol": [
            679,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_SIFM",
          "linecol": [
            679,
            1
          ]
        },
        "linecol": [
          679,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_BOOL_SIFC * PPELIMC + PPE_BOOL_SIFM * PPELIMM + (NBPT - 1 - PPE_BOOL_SIFM - NBQAR) * 2 * PPELIMPAC + NBQAR * PPELIMPAC * 2",
          "linecol": [
            681,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPESEUILKIR",
          "linecol": [
            681,
            1
          ]
        },
        "linecol": [
          681,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "REVKIRE * PPENBJAN / PPENBJ",
          "linecol": [
            687,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_KIRE",
          "linecol": [
            687,
            1
          ]
        },
        "linecol": [
          687,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - null (IND_TDR)) * positif_ou_nul ( PPESEUILKIR - PPE_KIRE)",
          "linecol": [
            689,
            23
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_KIR_COND",
          "linecol": [
            689,
            1
          ]
        },
        "linecol": [
          689,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30520",
      "linecol": [
        674,
        7
      ]
    },
    "linecol": [
      674,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                692,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                692,
                23
              ]
            }
          ],
          "linecol": [
            692,
            15
          ]
        }
      ],
      "linecol": [
        692,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(1 , positif(TSHALLOV + 0) * null(PPETPV + 0) * null(PPENHV + 0) + positif(SALEXTV + 0) * null(PPETPV + 0) * null(PPEXTV + 0))",
          "linecol": [
            694,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_NADAV",
          "linecol": [
            694,
            1
          ]
        },
        "linecol": [
          694,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(1 , positif(TSHALLOC + 0) * null(PPETPC + 0) * null(PPENHC + 0) + positif(SALEXTC + 0) * null(PPETPC + 0) * null(PPEXTC + 0))",
          "linecol": [
            697,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_NADAC",
          "linecol": [
            697,
            1
          ]
        },
        "linecol": [
          697,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(1 , positif(TSHALLO1 + 0) * null(PPETPP1 + 0) * null(PPENHP1 + 0) + positif(SALEXT1 + 0) * null(PPETPP1 + 0) * null(PPEXT1 + 0))",
          "linecol": [
            700,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_NADA1",
          "linecol": [
            700,
            1
          ]
        },
        "linecol": [
          700,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(1 , positif(TSHALLO2 + 0) * null(PPETPP2 + 0) * null(PPENHP2 + 0) + positif(SALEXT2 + 0) * null(PPETPP2 + 0) * null(PPEXT2 + 0))",
          "linecol": [
            703,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_NADA2",
          "linecol": [
            703,
            1
          ]
        },
        "linecol": [
          703,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(1 , positif(TSHALLO3 + 0) * null(PPETPP3 + 0) * null(PPENHP3 + 0) + positif(SALEXT3 + 0) * null(PPETPP3 + 0) * null(PPEXT3 + 0))",
          "linecol": [
            706,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_NADA3",
          "linecol": [
            706,
            1
          ]
        },
        "linecol": [
          706,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(1 , positif(TSHALLO4 + 0) * null(PPETPP4 + 0) * null(PPENHP4 + 0) + positif(SALEXT4 + 0) * null(PPETPP4 + 0) * null(PPEXT4 + 0))",
          "linecol": [
            709,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_NADA4",
          "linecol": [
            709,
            1
          ]
        },
        "linecol": [
          709,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "min(1 , positif(TSHALLO1 + TSHALLO2 + TSHALLO3 + TSHALLO4 + 0) * null(PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4 + 0) * null(PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + 0) + positif(SALEXT1 + SALEXT2 + SALEXT3 + SALEXT4 + 0) * null(PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4 + 0) * null(PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4 + 0))",
          "linecol": [
            712,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_NADAU",
          "linecol": [
            712,
            1
          ]
        },
        "linecol": [
          712,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      719,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      719,
                      10
                    ]
                  }
                ],
                "linecol": [
                  719,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  719,
                  6
                ]
              },
              "linecol": [
                719,
                6
              ]
            }
          ],
          "linecol": [
            719,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "null(PPETPi + 0) + positif(TSHALLOi + 0) + positif(SALEXTi + 0) + (4 * positif(PPENHi + 0)) + (8 * positif(PPEXTi + 0))",
            "linecol": [
              720,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPENEXOi",
            "linecol": [
              720,
              1
            ]
          },
          "linecol": [
            720,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          719,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        722,
                        11
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        722,
                        8
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      722,
                      8
                    ]
                  }
                ],
                "linecol": [
                  722,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  722,
                  6
                ]
              },
              "linecol": [
                722,
                6
              ]
            }
          ],
          "linecol": [
            722,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "null(PPETPPi + 0) + positif(TSHALLOi + 0) + positif(SALEXTi + 0) + (4 * positif(PPENHPi + 0)) + (8 * positif(PPEXTi + 0))",
            "linecol": [
              723,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPENEXOi",
            "linecol": [
              723,
              1
            ]
          },
          "linecol": [
            723,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          722,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30525",
      "linecol": [
        691,
        7
      ]
    },
    "linecol": [
      691,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                726,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                726,
                23
              ]
            }
          ],
          "linecol": [
            726,
            15
          ]
        }
      ],
      "linecol": [
        726,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TSHALLOV + BPCOSAV + GLD1V + GLD2V + GLD3V + TSASSUV + CARTSV * positif(CARTSNBAV) + CODDAJ + CODEAJ + SALEXTV + GLDGRATV",
          "linecol": [
            729,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_SALAVDEFV",
          "linecol": [
            729,
            1
          ]
        },
        "linecol": [
          729,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TSHALLOC + BPCOSAC + GLD1C + GLD2C + GLD3C + TSASSUC + CARTSC * positif(CARTSNBAC) + CODDBJ + CODEBJ + SALEXTC + GLDGRATC",
          "linecol": [
            734,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_SALAVDEFC",
          "linecol": [
            734,
            1
          ]
        },
        "linecol": [
          734,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TSHALLO1 + CARTSP1 * positif(CARTSNBAP1) + SALEXT1",
          "linecol": [
            739,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_SALAVDEF1",
          "linecol": [
            739,
            1
          ]
        },
        "linecol": [
          739,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TSHALLO2 + CARTSP2 * positif(CARTSNBAP2) + SALEXT2",
          "linecol": [
            740,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_SALAVDEF2",
          "linecol": [
            740,
            1
          ]
        },
        "linecol": [
          740,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TSHALLO3 + CARTSP3 * positif(CARTSNBAP3) + SALEXT3",
          "linecol": [
            741,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_SALAVDEF3",
          "linecol": [
            741,
            1
          ]
        },
        "linecol": [
          741,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "TSHALLO4 + CARTSP4 * positif(CARTSNBAP4) + SALEXT4",
          "linecol": [
            742,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_SALAVDEF4",
          "linecol": [
            742,
            1
          ]
        },
        "linecol": [
          742,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30530",
      "linecol": [
        725,
        7
      ]
    },
    "linecol": [
      725,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                745,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                745,
                23
              ]
            }
          ],
          "linecol": [
            745,
            15
          ]
        }
      ],
      "linecol": [
        745,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      746,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      746,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      746,
                      14
                    ]
                  }
                ],
                "linecol": [
                  746,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  746,
                  6
                ]
              },
              "linecol": [
                746,
                6
              ]
            }
          ],
          "linecol": [
            746,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "( FEXi + BAFi + BAEXi + BACREi + 4BACREi - (BACDEi * (1 - positif(ART1731BIS) )) + BAHEXi + BAHREi + 4BAHREi - (BAHDEi * (1 - positif(ART1731BIS) )) + BICEXi + BICNOi - (BICDNi * (1 - positif(ART1731BIS) )) + BIHEXi + BIHNOi - (BIHDNi * (1 - positif(ART1731BIS) )) + BNCEXi + BNCREi - (BNCDEi * (1 - positif(ART1731BIS) )) + BNHEXi + BNHREi - (BNHDEi * (1 - positif(ART1731BIS) )) + MIBEXi + BNCPROEXi + TMIB_NETVi + TMIB_NETPi + TSPENETPi + BAFPVi + MIBPVi + BNCPROPVi + BAFORESTi + LOCPROi + LOCPROCGAi - (LOCDEFPROCGAi * (1 - positif(ART1731BIS) )) - (LOCDEFPROi * (1 - positif(ART1731BIS) )) + XHONOAAi + XHONOi  )",
            "linecol": [
              748,
              1
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_RPRO1i",
            "linecol": [
              747,
              1
            ]
          },
          "linecol": [
            747,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          746,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      784,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      784,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      784,
                      14
                    ]
                  }
                ],
                "linecol": [
                  784,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  784,
                  6
                ]
              },
              "linecol": [
                784,
                6
              ]
            }
          ],
          "linecol": [
            784,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "present(FEXi) + present(BAFi) + present(BAEXi) + present(BACREi) + present(4BACREi) + present(BACDEi) + present(BAHEXi) + present(BAHREi) + present(4BAHREi) + present(BAHDEi) + present(BICEXi) + present(BICNOi) + present(BICDNi) + present(BIHEXi) + present(BIHNOi) + present(BIHDNi) + present(BNCEXi) + present(BNCREi) + present(BNCDEi) + present(BNHEXi) + present(BNHREi) + present(BNHDEi) + present(MIBEXi) + present(BNCPROEXi) + present(MIBVENi) + present(MIBPRESi) + present(BNCPROi) + present(BAFPVi) + present(MIBPVi) + present(BNCPROPVi) + present(BAFORESTi) + present(AUTOBICVi) + present(AUTOBICPi) + present(AUTOBNCi) + present(LOCPROi) + present(LOCPROCGAi) + present(LOCDEFPROCGAi) + present(LOCDEFPROi) + present(XHONOAAi) + present(XHONOi)",
            "linecol": [
              785,
              16
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_AVRPRO1i",
            "linecol": [
              785,
              1
            ]
          },
          "linecol": [
            785,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          784,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      794,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      794,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "P",
                    "linecol": [
                      794,
                      12
                    ]
                  }
                ],
                "linecol": [
                  794,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  794,
                  6
                ]
              },
              "linecol": [
                794,
                6
              ]
            }
          ],
          "linecol": [
            794,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "positif(PPE_RPRO1i) * arr((1+ PPETXRPRO/100) * PPE_RPRO1i ) +(1-positif(PPE_RPRO1i)) * arr(PPE_RPRO1i * (1- PPETXRPRO/100))",
            "linecol": [
              795,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_RPROi",
            "linecol": [
              795,
              1
            ]
          },
          "linecol": [
            795,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          794,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      798,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      798,
                      10
                    ]
                  }
                ],
                "linecol": [
                  798,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  798,
                  6
                ]
              },
              "linecol": [
                798,
                6
              ]
            }
          ],
          "linecol": [
            798,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "positif(PPE_AVRPRO1i + 0) + positif(SALEXTi + 0) + (4 * positif(PPENJi + PPEACi + 0)) + (8 * positif(PPEXTi + PPETPi + 0))",
            "linecol": [
              799,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPEPEXOi",
            "linecol": [
              799,
              1
            ]
          },
          "linecol": [
            799,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          798,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        801,
                        11
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        801,
                        8
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      801,
                      8
                    ]
                  }
                ],
                "linecol": [
                  801,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  801,
                  6
                ]
              },
              "linecol": [
                801,
                6
              ]
            }
          ],
          "linecol": [
            801,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "positif(PPE_AVRPRO1P + 0) + positif(SALEXTi + 0) + (4 * positif(PPEXTi + PPETPPi + 0))",
            "linecol": [
              802,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPEPEXOi",
            "linecol": [
              802,
              1
            ]
          },
          "linecol": [
            802,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          801,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30540",
      "linecol": [
        744,
        7
      ]
    },
    "linecol": [
      744,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                805,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                805,
                23
              ]
            }
          ],
          "linecol": [
            805,
            15
          ]
        }
      ],
      "linecol": [
        805,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "null(V_0CF + V_0CR + V_0DJ + V_0DN + V_0CH + V_0DP -1)",
          "linecol": [
            808,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_SEULPAC",
          "linecol": [
            808,
            1
          ]
        },
        "linecol": [
          808,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(somme(i=1,2,3,4: PPE_SALAVDEFi))* PPE_BOOL_SEULPAC",
          "linecol": [
            810,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_SALAVDEFU",
          "linecol": [
            810,
            1
          ]
        },
        "linecol": [
          810,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "1 * positif(PPE_SALAVDEF1 ) + 2 * positif(PPE_SALAVDEF2 ) + 3 * positif(PPE_SALAVDEF3 ) + 4 * positif(PPE_SALAVDEF4 )",
          "linecol": [
            811,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_KIKEKU",
          "linecol": [
            811,
            1
          ]
        },
        "linecol": [
          811,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(PPE_SALAVDEFU + PPE_RPROP*(1 - positif(PPE_RPROP))) * PPE_BOOL_SEULPAC",
          "linecol": [
            820,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPESALU",
          "linecol": [
            820,
            1
          ]
        },
        "linecol": [
          820,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      817,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      817,
                      10
                    ]
                  }
                ],
                "linecol": [
                  817,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  817,
                  6
                ]
              },
              "linecol": [
                817,
                6
              ]
            }
          ],
          "linecol": [
            817,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "PPE_SALAVDEFi + PPE_RPROi*(1 - positif(PPE_RPROi))",
            "linecol": [
              818,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPESALi",
            "linecol": [
              818,
              1
            ]
          },
          "linecol": [
            818,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          817,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        824,
                        13
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        824,
                        10
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      824,
                      10
                    ]
                  }
                ],
                "linecol": [
                  824,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  824,
                  6
                ]
              },
              "linecol": [
                824,
                6
              ]
            }
          ],
          "linecol": [
            824,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "PPE_SALAVDEFi * (1 - PPE_BOOL_SEULPAC)",
            "linecol": [
              825,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPESALi",
            "linecol": [
              825,
              1
            ]
          },
          "linecol": [
            825,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          824,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30550",
      "linecol": [
        804,
        7
      ]
    },
    "linecol": [
      804,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                828,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                828,
                23
              ]
            }
          ],
          "linecol": [
            828,
            15
          ]
        }
      ],
      "linecol": [
        828,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0,PPESALU + PPE_RPROP * positif(PPE_RPROP)) * PPE_BOOL_SEULPAC",
          "linecol": [
            837,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_RTAU",
          "linecol": [
            837,
            1
          ]
        },
        "linecol": [
          837,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "max(0, PPE_RPROP ) * (1 - PPE_BOOL_SEULPAC)",
          "linecol": [
            838,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_RTAN",
          "linecol": [
            838,
            1
          ]
        },
        "linecol": [
          838,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      830,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      830,
                      10
                    ]
                  }
                ],
                "linecol": [
                  830,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  830,
                  6
                ]
              },
              "linecol": [
                830,
                6
              ]
            }
          ],
          "linecol": [
            830,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "max(0,PPESALi +  PPE_RPROi * positif(PPE_RPROi))",
            "linecol": [
              831,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_RTAi",
            "linecol": [
              831,
              1
            ]
          },
          "linecol": [
            831,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          830,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        834,
                        12
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        834,
                        9
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      834,
                      9
                    ]
                  }
                ],
                "linecol": [
                  834,
                  9
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  834,
                  6
                ]
              },
              "linecol": [
                834,
                6
              ]
            }
          ],
          "linecol": [
            834,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "PPESALi",
            "linecol": [
              835,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_RTAi",
            "linecol": [
              835,
              1
            ]
          },
          "linecol": [
            835,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          834,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30560",
      "linecol": [
        827,
        7
      ]
    },
    "linecol": [
      827,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                840,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                840,
                23
              ]
            }
          ],
          "linecol": [
            840,
            15
          ]
        }
      ],
      "linecol": [
        840,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif ( (  positif(PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4) * positif(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) + null(PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4 + 0) * null(PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4 + 0) * positif(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) + positif((360 / PPENBJ * ((PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4) * positif(PPE_SALAVDEF1+PPE_SALAVDEF2+PPE_SALAVDEF3+PPE_SALAVDEF4))/1820 + PPENJP * positif(PPE_AVRPRO1P + 0) /360 ) - 1) + positif_ou_nul(((PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4) * positif(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4))-1820) + positif_ou_nul(PPENJP * positif(PPE_AVRPRO1P + 0) - 360) + positif(PPEACP * positif(PPE_AVRPRO1P + 0)) + (1 - positif(PPENJP * positif(PPE_AVRPRO1P + 0))) * positif(PPE_AVRPRO1P + 0)) * PPE_BOOL_SEULPAC )",
          "linecol": [
            861,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_TPU",
          "linecol": [
            861,
            1
          ]
        },
        "linecol": [
          861,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif ( positif_ou_nul ( 360 / PPENBJ * PPENJP * positif(PPE_AVRPRO1P + 0) - 360) + positif(PPEACP * positif(PPE_AVRPRO1P + 0)) + (1 - positif(PPENJP * positif(PPE_AVRPRO1P + 0))) * positif(PPE_AVRPRO1P + 0) )",
          "linecol": [
            886,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_TPN",
          "linecol": [
            886,
            1
          ]
        },
        "linecol": [
          886,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      842,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      842,
                      10
                    ]
                  }
                ],
                "linecol": [
                  842,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  842,
                  6
                ]
              },
              "linecol": [
                842,
                6
              ]
            }
          ],
          "linecol": [
            842,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "PPENHi + PPEXTi",
            "linecol": [
              843,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPENBHi",
            "linecol": [
              843,
              1
            ]
          },
          "linecol": [
            843,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          842,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        845,
                        11
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        845,
                        8
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      845,
                      8
                    ]
                  }
                ],
                "linecol": [
                  845,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  845,
                  6
                ]
              },
              "linecol": [
                845,
                6
              ]
            }
          ],
          "linecol": [
            845,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "PPENHPi + PPEXTi",
            "linecol": [
              846,
              11
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPENBHi",
            "linecol": [
              846,
              1
            ]
          },
          "linecol": [
            846,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          845,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      848,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      848,
                      10
                    ]
                  }
                ],
                "linecol": [
                  848,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  848,
                  6
                ]
              },
              "linecol": [
                848,
                6
              ]
            }
          ],
          "linecol": [
            848,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "positif ( positif(PPETPi + 0) * positif(PPE_SALAVDEFi + 0) + null(PPENHi + PPEXTi + 0) * null(PPETPi + 0) * positif(PPE_SALAVDEFi) + positif(360/PPENBJ * ((PPENHi + PPEXTi) * positif(PPE_SALAVDEFi + 0) /1820 + PPENJi * positif(PPE_AVRPRO1i + 0) /360 ) - 1 ) + positif_ou_nul((PPENHi + PPEXTi) * positif(PPE_SALAVDEFi + 0) - 1820) + positif_ou_nul(PPENJi * positif(PPE_AVRPRO1i + 0) - 360) + positif(PPEACi * positif(PPE_AVRPRO1i + 0) + 0) + (1 - positif(PPENJi * positif(PPE_AVRPRO1i + 0))) * positif(PPE_AVRPRO1i + 0) )",
            "linecol": [
              849,
              16
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_BOOL_TPi",
            "linecol": [
              849,
              1
            ]
          },
          "linecol": [
            849,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          848,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      879,
                      9
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      879,
                      11
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      879,
                      13
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      879,
                      15
                    ]
                  }
                ],
                "linecol": [
                  879,
                  9
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  879,
                  6
                ]
              },
              "linecol": [
                879,
                6
              ]
            }
          ],
          "linecol": [
            879,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "positif (positif(PPETPPi) * positif(PPE_SALAVDEFi + 0) + null(PPENHPi + PPEXTi + 0) * null(PPETPPi + 0)* positif(PPE_SALAVDEFi) + positif_ou_nul(360 / PPENBJ * (PPENHPi + PPEXTi) * positif(PPE_SALAVDEFi + 0) - 1820 ) )",
            "linecol": [
              880,
              16
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_BOOL_TPi",
            "linecol": [
              880,
              1
            ]
          },
          "linecol": [
            880,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          879,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30570",
      "linecol": [
        839,
        7
      ]
    },
    "linecol": [
      839,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                894,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                894,
                23
              ]
            }
          ],
          "linecol": [
            894,
            15
          ]
        }
      ],
      "linecol": [
        894,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_BOOL_TPU * 360 / PPENBJ + (1 - PPE_BOOL_TPU) / ((PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4)/1820 + PPENJP * positif(PPE_AVRPRO1P + 0) / 360) * PPE_BOOL_SEULPAC",
          "linecol": [
            902,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_COEFFU",
          "linecol": [
            902,
            1
          ]
        },
        "linecol": [
          902,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_BOOL_TPN * 360 / PPENBJ + (1 -  PPE_BOOL_TPN) / (PPENJP * positif(PPE_AVRPRO1P + 0) / 360)",
          "linecol": [
            914,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_COEFFN",
          "linecol": [
            914,
            1
          ]
        },
        "linecol": [
          914,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      897,
                      9
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      897,
                      11
                    ]
                  }
                ],
                "linecol": [
                  897,
                  9
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  897,
                  6
                ]
              },
              "linecol": [
                897,
                6
              ]
            }
          ],
          "linecol": [
            897,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "PPE_BOOL_TPi * 360 / PPENBJ + (1 - PPE_BOOL_TPi) / ((PPENHi + PPEXTi) * positif(PPE_SALAVDEFi + 0) /1820 + PPENJi * positif(PPE_AVRPRO1i + 0) /360)",
            "linecol": [
              898,
              14
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_COEFFi",
            "linecol": [
              898,
              1
            ]
          },
          "linecol": [
            898,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          897,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "stop": {
                      "type": "integer",
                      "value": 4,
                      "linecol": [
                        909,
                        12
                      ]
                    },
                    "start": {
                      "type": "integer",
                      "value": 1,
                      "linecol": [
                        909,
                        9
                      ]
                    },
                    "type": "integer_range",
                    "linecol": [
                      909,
                      9
                    ]
                  }
                ],
                "linecol": [
                  909,
                  9
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  909,
                  6
                ]
              },
              "linecol": [
                909,
                6
              ]
            }
          ],
          "linecol": [
            909,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "PPE_BOOL_TPi * 360 / PPENBJ + (1 - PPE_BOOL_TPi) / ((PPENHPi + PPEXTi) * positif(PPE_SALAVDEFi + 0) / 1820)",
            "linecol": [
              910,
              14
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_COEFFi",
            "linecol": [
              910,
              1
            ]
          },
          "linecol": [
            910,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          909,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      919,
                      9
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      919,
                      11
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      919,
                      13
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      919,
                      15
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      919,
                      17
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      919,
                      19
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "U",
                    "linecol": [
                      919,
                      21
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "N",
                    "linecol": [
                      919,
                      23
                    ]
                  }
                ],
                "linecol": [
                  919,
                  9
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  919,
                  6
                ]
              },
              "linecol": [
                919,
                6
              ]
            }
          ],
          "linecol": [
            919,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "arr (  PPE_RTAi * PPE_COEFFi )",
            "linecol": [
              920,
              15
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_RCONTPi",
            "linecol": [
              920,
              1
            ]
          },
          "linecol": [
            920,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          919,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30580",
      "linecol": [
        893,
        7
      ]
    },
    "linecol": [
      893,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                924,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                924,
                23
              ]
            }
          ],
          "linecol": [
            924,
            15
          ]
        }
      ],
      "linecol": [
        924,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      926,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      926,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "U",
                    "linecol": [
                      926,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "N",
                    "linecol": [
                      926,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      926,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      926,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      926,
                      20
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      926,
                      22
                    ]
                  }
                ],
                "linecol": [
                  926,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  926,
                  6
                ]
              },
              "linecol": [
                926,
                6
              ]
            }
          ],
          "linecol": [
            926,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "positif_ou_nul (PPE_RTAi- PPELIMRPB) * (1 - PPE_BOOL_NADAi)",
            "linecol": [
              927,
              17
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_BOOL_MINi",
            "linecol": [
              927,
              1
            ]
          },
          "linecol": [
            927,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          926,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30590",
      "linecol": [
        923,
        7
      ]
    },
    "linecol": [
      923,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                930,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                930,
                23
              ]
            }
          ],
          "linecol": [
            930,
            15
          ]
        }
      ],
      "linecol": [
        930,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "BOOL_0AM * ( positif_ou_nul(PPE_RTAV  - PPELIMRPB) * positif(PPELIMRPB - PPE_RTAC) + positif_ou_nul(PPE_RTAC - PPELIMRPB ) *positif(PPELIMRPB - PPE_RTAV) )",
          "linecol": [
            932,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INDMONO",
          "linecol": [
            932,
            1
          ]
        },
        "linecol": [
          932,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30600",
      "linecol": [
        929,
        7
      ]
    },
    "linecol": [
      929,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                942,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                942,
                23
              ]
            }
          ],
          "linecol": [
            942,
            15
          ]
        }
      ],
      "linecol": [
        942,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPELIMRPH * (1 - BOOL_0AM) + PPELIMRPH * BOOL_0AM * null(INDMONO) * positif_ou_nul(PPE_RCONTPV - PPELIMRPB) * positif_ou_nul(PPE_RCONTPC - PPELIMRPB) + PPELIMRPH2 * INDMONO",
          "linecol": [
            943,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_HAUTE",
          "linecol": [
            943,
            1
          ]
        },
        "linecol": [
          943,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30605",
      "linecol": [
        941,
        7
      ]
    },
    "linecol": [
      941,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                950,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                950,
                23
              ]
            }
          ],
          "linecol": [
            950,
            15
          ]
        }
      ],
      "linecol": [
        950,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      952,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      952,
                      10
                    ]
                  }
                ],
                "linecol": [
                  952,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  952,
                  6
                ]
              },
              "linecol": [
                952,
                6
              ]
            }
          ],
          "linecol": [
            952,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "positif_ou_nul(PPE_HAUTE - PPE_RCONTPi)",
            "linecol": [
              953,
              17
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_BOOL_MAXi",
            "linecol": [
              953,
              1
            ]
          },
          "linecol": [
            953,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          952,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "U",
                    "linecol": [
                      955,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "N",
                    "linecol": [
                      955,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      955,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      955,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      955,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      955,
                      18
                    ]
                  }
                ],
                "linecol": [
                  955,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  955,
                  6
                ]
              },
              "linecol": [
                955,
                6
              ]
            }
          ],
          "linecol": [
            955,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "positif_ou_nul(PPELIMRPH - PPE_RCONTPi)",
            "linecol": [
              956,
              17
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_BOOL_MAXi",
            "linecol": [
              956,
              1
            ]
          },
          "linecol": [
            956,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          955,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30610",
      "linecol": [
        949,
        7
      ]
    },
    "linecol": [
      949,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                959,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                959,
                23
              ]
            }
          ],
          "linecol": [
            959,
            15
          ]
        }
      ],
      "linecol": [
        959,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      961,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      961,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "U",
                    "linecol": [
                      961,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "N",
                    "linecol": [
                      961,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      961,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      961,
                      20
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      961,
                      22
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      961,
                      24
                    ]
                  }
                ],
                "linecol": [
                  961,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  961,
                  6
                ]
              },
              "linecol": [
                961,
                6
              ]
            }
          ],
          "linecol": [
            961,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINi * PPE_BOOL_MAXi * arr(positif_ou_nul(PPELIMSMIC - PPE_RCONTPi) * arr(PPE_RCONTPi * PPETX1/100)/PPE_COEFFi + positif(PPE_RCONTPi - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTPi ) * arr(arr((PPELIMRPH  - PPE_RCONTPi ) * PPETX2 /100)/PPE_COEFFi) + positif(PPE_RCONTPi - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTPi ) * arr(arr((PPELIMRPH2 - PPE_RCONTPi ) * PPETX3 /100)/PPE_COEFFi) )",
            "linecol": [
              962,
              16
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_FORMULEi",
            "linecol": [
              962,
              1
            ]
          },
          "linecol": [
            962,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          961,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30615",
      "linecol": [
        958,
        7
      ]
    },
    "linecol": [
      958,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                980,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                980,
                23
              ]
            }
          ],
          "linecol": [
            980,
            15
          ]
        }
      ],
      "linecol": [
        980,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      983,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      983,
                      12
                    ]
                  }
                ],
                "linecol": [
                  983,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  983,
                  6
                ]
              },
              "linecol": [
                983,
                6
              ]
            }
          ],
          "linecol": [
            983,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "(1 - PPE_BOOL_TPi) * (null(PPENBJ - 360) * PPE_COEFFi + (1 - null(PPENBJ - 360)) * (PPENBJ * 1820/360 / ((PPENHi + PPEXTi) * positif(PPE_SALAVDEFi + 0) + PPENJi * positif(PPE_AVRPRO1i + 0) * 1820/360)) )",
            "linecol": [
              984,
              18
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_COEFFCONDi",
            "linecol": [
              984,
              1
            ]
          },
          "linecol": [
            984,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          983,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "U",
                    "linecol": [
                      992,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "N",
                    "linecol": [
                      992,
                      12
                    ]
                  }
                ],
                "linecol": [
                  992,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  992,
                  6
                ]
              },
              "linecol": [
                992,
                6
              ]
            }
          ],
          "linecol": [
            992,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "(1 - PPE_BOOL_TPi) * (null(PPENBJ - 360) * PPE_COEFFi + (1 - null(PPENBJ - 360)) * (PPENBJ * 1820/360 / ((PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4) + PPENJP * positif(PPE_AVRPRO1P + 0) * 1820/360)) )",
            "linecol": [
              993,
              18
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_COEFFCONDi",
            "linecol": [
              993,
              1
            ]
          },
          "linecol": [
            993,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          992,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      1001,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      1001,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      1001,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      1001,
                      16
                    ]
                  }
                ],
                "linecol": [
                  1001,
                  10
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  1001,
                  6
                ]
              },
              "linecol": [
                1001,
                6
              ]
            }
          ],
          "linecol": [
            1001,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "(1 - PPE_BOOL_TPi) * (null(PPENBJ - 360) * PPE_COEFFi + (1 - null(PPENBJ - 360)) * (PPENBJ * 1820/360 / ((PPENHPi + PPEXTi) * positif(PPE_SALAVDEFi + 0) + PPENJP * positif(PPE_AVRPRO1P + 0) * 1820/360)) )",
            "linecol": [
              1002,
              18
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPE_COEFFCONDi",
            "linecol": [
              1002,
              1
            ]
          },
          "linecol": [
            1002,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          1001,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      1010,
                      9
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      1010,
                      11
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "U",
                    "linecol": [
                      1010,
                      13
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      1010,
                      15
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      1010,
                      17
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      1010,
                      19
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      1010,
                      21
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "N",
                    "linecol": [
                      1010,
                      23
                    ]
                  }
                ],
                "linecol": [
                  1010,
                  9
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  1010,
                  6
                ]
              },
              "linecol": [
                1010,
                6
              ]
            }
          ],
          "linecol": [
            1010,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "PPE_FORMULEi * ( 1 + PPETXMAJ2) * positif_ou_nul(PPE_COEFFCONDi - 2) * (1 - PPE_BOOL_TPi)  +  (arr(PPE_FORMULEi * PPETXMAJ1) + arr(PPE_FORMULEi * (PPE_COEFFi * PPETXMAJ2 ))) * positif (2 - PPE_COEFFCONDi) * positif (PPE_COEFFCONDi  -1 ) * (1 - PPE_BOOL_TPi)  + PPE_FORMULEi  * positif(PPE_BOOL_TPi + positif_ou_nul (1 - PPE_COEFFCONDi))",
            "linecol": [
              1011,
              18
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPENARPRIMEi",
            "linecol": [
              1011,
              1
            ]
          },
          "linecol": [
            1011,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          1010,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30620",
      "linecol": [
        979,
        7
      ]
    },
    "linecol": [
      979,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1024,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1024,
                23
              ]
            }
          ],
          "linecol": [
            1024,
            15
          ]
        }
      ],
      "linecol": [
        1024,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPEPRIMEU + PPEPRIME1 + PPEPRIME2 + PPEPRIME3 + PPEPRIME4 + PPEPRIMEN",
          "linecol": [
            1028,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEPRIMEPAC",
          "linecol": [
            1028,
            1
          ]
        },
        "linecol": [
          1028,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_BOOL_KIR_COND *  PPE_BOOL_ACT_COND *( ( PPE_PRIMETTE * BOOL_0AM * INDMONO *  positif_ou_nul (PPE_RTAV - PPELIMRPB) *  positif_ou_nul(PPELIMRPHI - PPE_RCONTPV) *  (1 - positif(PPE_BOOL_NADAV)) ) ) * ( 1 -  V_CNR)",
          "linecol": [
            1031,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEPRIMETTEV",
          "linecol": [
            1031,
            1
          ]
        },
        "linecol": [
          1031,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_BOOL_KIR_COND *  PPE_BOOL_ACT_COND *( ( PPE_PRIMETTE * BOOL_0AM * INDMONO *  positif_ou_nul(PPELIMRPHI - PPE_RCONTPC) *  positif_ou_nul (PPE_RTAC - PPELIMRPB) *  (1 - positif(PPE_BOOL_NADAC)) ) ) * ( 1 -  V_CNR)",
          "linecol": [
            1043,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEPRIMETTEC",
          "linecol": [
            1043,
            1
          ]
        },
        "linecol": [
          1043,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPEPRIMETTEV + PPEPRIMETTEC",
          "linecol": [
            1054,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEPRIMETTE",
          "linecol": [
            1054,
            1
          ]
        },
        "linecol": [
          1054,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      1025,
                      9
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      1025,
                      11
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "U",
                    "linecol": [
                      1025,
                      13
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      1025,
                      15
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      1025,
                      17
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      1025,
                      19
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      1025,
                      21
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "N",
                    "linecol": [
                      1025,
                      23
                    ]
                  }
                ],
                "linecol": [
                  1025,
                  9
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  1025,
                  6
                ]
              },
              "linecol": [
                1025,
                6
              ]
            }
          ],
          "linecol": [
            1025,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "arr( PPENARPRIMEi)",
            "linecol": [
              1026,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPEPRIMEi",
            "linecol": [
              1026,
              1
            ]
          },
          "linecol": [
            1026,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          1025,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30625",
      "linecol": [
        1023,
        7
      ]
    },
    "linecol": [
      1023,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1060,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1060,
                23
              ]
            }
          ],
          "linecol": [
            1060,
            15
          ]
        }
      ],
      "linecol": [
        1060,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(V_0CF + V_0CH + V_0DJ + V_0CR + 0)",
          "linecol": [
            1062,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BOOLENF",
          "linecol": [
            1062,
            1
          ]
        },
        "linecol": [
          1062,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_0CF + V_0CR + V_0DJ + V_0DN",
          "linecol": [
            1064,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_NB_PAC",
          "linecol": [
            1064,
            1
          ]
        },
        "linecol": [
          1064,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_0CH + V_0DP",
          "linecol": [
            1065,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_NB_PAC_QAR",
          "linecol": [
            1065,
            1
          ]
        },
        "linecol": [
          1065,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_NB_PAC + PPE_NB_PAC_QAR",
          "linecol": [
            1066,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TOTPAC",
          "linecol": [
            1066,
            1
          ]
        },
        "linecol": [
          1066,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "( somme(i=1,2,3,4,U,N: positif(PPEPRIMEi)) + somme(i=1,2,3,4,U,N: positif_ou_nul(PPE_RTAi - PPELIMRPB) * positif(PPE_RCONTPi - PPELIMRPH) ) )",
          "linecol": [
            1070,
            16
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_NBNONELI",
          "linecol": [
            1070,
            1
          ]
        },
        "linecol": [
          1070,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_NB_PAC + PPE_NB_PAC_QAR - PPE_NBNONELI",
          "linecol": [
            1080,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_NBELIGI",
          "linecol": [
            1080,
            1
          ]
        },
        "linecol": [
          1080,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "V_0BT * positif(2 - V_0AV - BOOLENF)",
          "linecol": [
            1083,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_BT",
          "linecol": [
            1083,
            1
          ]
        },
        "linecol": [
          1083,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - PPE_BOOL_BT) * positif (  positif_ou_nul (PPELIMRPH - PPE_RCONTPV) *positif_ou_nul (PPE_RTAV - PPELIMRPB) *(1 - positif(PPE_BOOL_NADAV)) + positif_ou_nul (PPELIMRPH - PPE_RCONTPC) *positif_ou_nul (PPE_RTAC - PPELIMRPB) *(1 - positif(PPE_BOOL_NADAC)) ) ",
          "linecol": [
            1085,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_MAJO",
          "linecol": [
            1085,
            1
          ]
        },
        "linecol": [
          1085,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul (PPE_NB_PAC - PPE_NBELIGI) *PPE_NBELIGI + (1 - positif_ou_nul (PPE_NB_PAC - PPE_NBELIGI)) *  PPE_NB_PAC",
          "linecol": [
            1095,
            17
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_NBMAJO",
          "linecol": [
            1095,
            1
          ]
        },
        "linecol": [
          1095,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul (PPE_NB_PAC - PPE_NBELIGI) * 0 + (1 - positif_ou_nul (PPE_NB_PAC - PPE_NBELIGI)) * ( PPE_NBELIGI - PPE_NB_PAC )",
          "linecol": [
            1099,
            20
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_NBMAJOQAR",
          "linecol": [
            1099,
            1
          ]
        },
        "linecol": [
          1099,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_BOOL_MAJO * positif( PPE_NBELIGI ) * ( PPE_NBMAJO * PPEMONMAJO + PPE_NBMAJOQAR * PPEMONMAJO / 2 )",
          "linecol": [
            1107,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_MAJO",
          "linecol": [
            1107,
            1
          ]
        },
        "linecol": [
          1107,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30800",
      "linecol": [
        1059,
        7
      ]
    },
    "linecol": [
      1059,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1114,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1114,
                23
              ]
            }
          ],
          "linecol": [
            1114,
            15
          ]
        }
      ],
      "linecol": [
        1114,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(1 - PPE_BOOL_MAJO ) *  (1 - PPE_BOOL_MAJOBT) * positif( PPE_NB_PAC + PPE_NB_PAC_QAR - PPE_NBNONELI) * INDMONO *( ( positif( PPE_BOOL_BT + BOOL_0AM ) *  positif_ou_nul (PPE_RTAV - PPELIMRPB) *  positif_ou_nul (PPELIMRPH2 - PPE_RCONTPV) *  (1 - positif(PPE_BOOL_NADAV)) ) + (  positif(  BOOL_0AM ) *  positif_ou_nul (PPE_RTAC - PPELIMRPB) *  positif_ou_nul (PPELIMRPH2 - PPE_RCONTPC) *  (1 - positif(PPE_BOOL_NADAC)) ) )",
          "linecol": [
            1117,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_MONO",
          "linecol": [
            1117,
            1
          ]
        },
        "linecol": [
          1117,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_BOOL_MONO * ( 1 + PPE_BOOL_BT) *( positif( PPE_NBMAJO) * PPEMONMAJO + null( PPE_NBMAJO)*positif(PPE_NBMAJOQAR) * PPEMONMAJO / 2 ) ",
          "linecol": [
            1132,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_MONO",
          "linecol": [
            1132,
            1
          ]
        },
        "linecol": [
          1132,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30810",
      "linecol": [
        1113,
        7
      ]
    },
    "linecol": [
      1113,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1141,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1141,
                23
              ]
            }
          ],
          "linecol": [
            1141,
            15
          ]
        }
      ],
      "linecol": [
        1141,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif (  positif_ou_nul (PPELIMRPH - PPE_RCONTPV) *positif_ou_nul (PPE_RTAV - PPELIMRPB) *(1 - positif(PPE_BOOL_NADAV)) ) * PPE_BOOL_BT",
          "linecol": [
            1144,
            19
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_BOOL_MAJOBT",
          "linecol": [
            1144,
            1
          ]
        },
        "linecol": [
          1144,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_BOOL_MAJOBT * positif( PPE_NBMAJO) * (( PPE_NBMAJO + 1) * PPEMONMAJO + PPE_NBMAJOQAR * PPEMONMAJO / 2 ) +   PPE_BOOL_MAJOBT * null( PPE_NBMAJO + 0)*positif(PPE_NBMAJOQAR) * (  positif(PPE_NBMAJOQAR-1) *  PPE_NBMAJOQAR * PPEMONMAJO / 2 + PPEMONMAJO ) +  positif_ou_nul (PPELIMRPH2 - PPE_RCONTPV) * positif_ou_nul (PPE_RTAV - PPELIMRPB) * (1 - PPE_BOOL_MAJOBT) * (1 - positif(PPE_BOOL_NADAV)) * PPE_BOOL_BT * ( positif( PPE_NB_PAC) * 2 * PPEMONMAJO + positif( PPE_NB_PAC_QAR ) * null ( PPE_NB_PAC + 0 ) * PPEMONMAJO ) ",
          "linecol": [
            1150,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPE_MABT",
          "linecol": [
            1150,
            1
          ]
        },
        "linecol": [
          1150,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30820",
      "linecol": [
        1140,
        7
      ]
    },
    "linecol": [
      1140,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1172,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1172,
                23
              ]
            }
          ],
          "linecol": [
            1172,
            15
          ]
        }
      ],
      "linecol": [
        1172,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * arr ( PPE_MONO + PPE_MAJO + PPE_MABT ) * ( 1 -  V_CNR)",
          "linecol": [
            1173,
            18
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEMAJORETTE",
          "linecol": [
            1173,
            1
          ]
        },
        "linecol": [
          1173,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30830",
      "linecol": [
        1171,
        7
      ]
    },
    "linecol": [
      1171,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1179,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1179,
                23
              ]
            }
          ],
          "linecol": [
            1179,
            15
          ]
        }
      ],
      "linecol": [
        1179,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif ( somme(i=V,C,U,1,2,3,4,N:PPENARPRIMEi) +PPEPRIMETTE +PPEMAJORETTE +0   +somme(i=V,C,U,1,2,3,4,N :( 1 - positif(PPELIMRPH - PPE_RCONTPi - 10)) *  PPE_BOOL_KIR_COND *  PPE_BOOL_ACT_COND *  PPE_BOOL_MINi *  PPE_BOOL_MAXi) +somme(i=V,C,U,1,2,3,4,N :( 1 - positif(PPELIMRPH2 - PPE_RCONTPi - 10)) *  PPE_BOOL_KIR_COND *  PPE_BOOL_ACT_COND *  PPE_BOOL_MINi *  PPE_BOOL_MAXi)  )  * max(0,arr( (somme(i=V,C,U,1,2,3,4,N :PPEPRIMEi) +PPEPRIMETTE +PPEMAJORETTE ) ) ) * positif_ou_nul(arr( (somme(i=V,C,U,1,2,3,4,N :PPEPRIMEi) +PPEPRIMETTE +PPEMAJORETTE - PPELIMTOT                  )) ) * (1 - positif(V_PPEISF + PPEISFPIR + PPEREVPRO)) * (1 - positif(RE168 + TAX1649)) * (1 - null(7 - PPENEXOV)) * (1 - null(11 - PPENEXOV)) * (1 - null(7 - PPENEXOC)) * (1 - null(11 - PPENEXOC)) * (1 - null(7 - PPENEXO1)) * (1 - null(11 - PPENEXO1)) * (1 - null(7 - PPENEXO2)) * (1 - null(11 - PPENEXO2)) * (1 - null(7 - PPENEXO3)) * (1 - null(11 - PPENEXO3)) * (1 - null(7 - PPENEXO4)) * (1 - null(11 - PPENEXO4)) * (1 - null(2 - PPEPEXOV)) * (1 - null(2 - PPEPEXOC)) * (1 - null(2 - PPEPEXO1)) * (1 - null(2 - PPEPEXO2)) * (1 - null(2 - PPEPEXO3)) * (1 - null(2 - PPEPEXO4)) * (1 - V_CNR)",
          "linecol": [
            1181,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPETOT",
          "linecol": [
            1181,
            1
          ]
        },
        "linecol": [
          1181,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPETOT",
          "linecol": [
            1226,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPETOT2",
          "linecol": [
            1226,
            1
          ]
        },
        "linecol": [
          1226,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "arr(PPETOT * 81 / 100) * positif_ou_nul(arr(PPETOT * 81 / 100) - PPELIMTOT) * null(7 - V_REGCO)",
          "linecol": [
            1228,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPETOTMAY",
          "linecol": [
            1228,
            1
          ]
        },
        "linecol": [
          1228,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PPETOT * (1 - null(7 - V_REGCO)) + PPETOTMAY",
          "linecol": [
            1230,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPETOTX",
          "linecol": [
            1230,
            1
          ]
        },
        "linecol": [
          1230,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30900",
      "linecol": [
        1178,
        7
      ]
    },
    "linecol": [
      1178,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1233,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1233,
                21
              ]
            }
          ],
          "linecol": [
            1233,
            15
          ]
        }
      ],
      "linecol": [
        1233,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IRE) * positif(IREST) * ( (1 - null(2 - V_REGCO))  * ( ( null(IRE - PPETOTX + PPERSA) * 1                                              * 1 + (1 - positif(PPETOTX-PPERSA))                                                 * 2 + null(IRE) * (1 - positif(PPETOTX-PPERSA))                                     * 3 + positif(PPETOTX-PPERSA) * positif(IRE-PPETOTX+PPERSA)                          * 4 ) ) + 2 * null(2 - V_REGCO) ) ",
          "linecol": [
            1234,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPENATREST",
          "linecol": [
            1234,
            1
          ]
        },
        "linecol": [
          1234,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(PPENATREST) * max(0,min(IREST , PPETOTX-PPERSA))",
          "linecol": [
            1248,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPERESTA",
          "linecol": [
            1248,
            1
          ]
        },
        "linecol": [
          1248,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(PPETOTX-PPERSA) * (positif(IINET - PPETOTX + PPERSA - ICREREVET) + positif( PPETOTX - PPERSA - PPERESTA))",
          "linecol": [
            1250,
            14
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPENATIMPA",
          "linecol": [
            1250,
            1
          ]
        },
        "linecol": [
          1250,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(PPENATIMPA) * positif_ou_nul(PPERESTA) * (PPETOTX - PPERSA - PPERESTA)",
          "linecol": [
            1252,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEIMPA",
          "linecol": [
            1252,
            1
          ]
        },
        "linecol": [
          1252,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "(positif(IREST - V_ANTRE + V_ANTIR) + positif(V_ANTRE - IINET)) * positif(IRE) * ( (1 - null(2 - V_REGCO))  * ( ( null(IRE - PPETOTX + PPERSA) * 1                                              * 1 + (1 - positif(PPETOTX-PPERSA))                                                 * 2 + null(IRE) * (1 - positif(PPETOTX-PPERSA))                                     * 3 + positif(PPETOTX-PPERSA) * positif(IRE-PPETOTX+PPERSA)                          * 4 ) ) + 2 * null(2 - V_REGCO) ) ",
          "linecol": [
            1254,
            15
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPENATREST2",
          "linecol": [
            1254,
            1
          ]
        },
        "linecol": [
          1254,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IRE) * positif(IRESTITIR) * max(0,min(PPETOTX-PPERSA , IRESTITIR))",
          "linecol": [
            1268,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEREST2A",
          "linecol": [
            1268,
            1
          ]
        },
        "linecol": [
          1268,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(PPEREST2A) * (PPETOTX - PPERSA - PPEREST2A)",
          "linecol": [
            1270,
            12
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PPEIMP2A",
          "linecol": [
            1270,
            1
          ]
        },
        "linecol": [
          1270,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30910",
      "linecol": [
        1232,
        7
      ]
    },
    "linecol": [
      1232,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1275,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1275,
                23
              ]
            }
          ],
          "linecol": [
            1275,
            15
          ]
        }
      ],
      "linecol": [
        1275,
        1
      ]
    },
    "variables": [
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      1277,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      1277,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      1277,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      1277,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      1277,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      1277,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "N",
                    "linecol": [
                      1277,
                      20
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "U",
                    "linecol": [
                      1277,
                      22
                    ]
                  }
                ],
                "linecol": [
                  1277,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  1277,
                  6
                ]
              },
              "linecol": [
                1277,
                6
              ]
            }
          ],
          "linecol": [
            1277,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "arr(1 / PPE_COEFFi * 100)",
            "linecol": [
              1278,
              13
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPETEMPSi",
            "linecol": [
              1278,
              1
            ]
          },
          "linecol": [
            1278,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          1277,
          1
        ]
      },
      {
        "loop_variables": {
          "type": "loop_variables",
          "value": [
            {
              "domain": {
                "type": "loop_variable_domain",
                "value": [
                  {
                    "type": "symbol",
                    "name": "V",
                    "linecol": [
                      1283,
                      8
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "C",
                    "linecol": [
                      1283,
                      10
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "1",
                    "linecol": [
                      1283,
                      12
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "2",
                    "linecol": [
                      1283,
                      14
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "3",
                    "linecol": [
                      1283,
                      16
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "4",
                    "linecol": [
                      1283,
                      18
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "N",
                    "linecol": [
                      1283,
                      20
                    ]
                  },
                  {
                    "type": "symbol",
                    "name": "U",
                    "linecol": [
                      1283,
                      22
                    ]
                  }
                ],
                "linecol": [
                  1283,
                  8
                ]
              },
              "type": "loop_variable",
              "name": {
                "type": "symbol",
                "name": "i",
                "linecol": [
                  1283,
                  6
                ]
              },
              "linecol": [
                1283,
                6
              ]
            }
          ],
          "linecol": [
            1283,
            6
          ]
        },
        "variable_definition": {
          "expression": {
            "type": "variable_definition_expression",
            "value": "arr(PPE_COEFFCONDi * 100 )",
            "linecol": [
              1284,
              12
            ]
          },
          "type": "variable_definition",
          "name": {
            "type": "symbol",
            "name": "PPECOEFFi",
            "linecol": [
              1284,
              1
            ]
          },
          "linecol": [
            1284,
            1
          ]
        },
        "type": "pour_variable_definition",
        "linecol": [
          1283,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "30912",
      "linecol": [
        1274,
        7
      ]
    },
    "linecol": [
      1274,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1286,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1286,
                22
              ]
            }
          ],
          "linecol": [
            1286,
            15
          ]
        }
      ],
      "linecol": [
        1286,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "PRESINTER",
          "linecol": [
            1288,
            13
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CRESINTER",
          "linecol": [
            1288,
            1
          ]
        },
        "linecol": [
          1288,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "989",
      "linecol": [
        1285,
        7
      ]
    },
    "linecol": [
      1285,
      1
    ]
  },
  {
    "application": {
      "type": "applications_reference",
      "names": [
        {
          "type": "symbol_enumeration",
          "value": [
            {
              "type": "symbol",
              "name": "iliad",
              "linecol": [
                1291,
                15
              ]
            },
            {
              "type": "symbol",
              "name": "batch",
              "linecol": [
                1291,
                22
              ]
            }
          ],
          "linecol": [
            1291,
            15
          ]
        }
      ],
      "linecol": [
        1291,
        1
      ]
    },
    "variables": [
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(IRE) * positif(IRESTITIR)",
          "linecol": [
            1293,
            8
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "REST",
          "linecol": [
            1293,
            1
          ]
        },
        "linecol": [
          1293,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(AUTOVERSLIB , IRESTITIR-(PPETOTX-PPERSA)))",
          "linecol": [
            1295,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIBREST",
          "linecol": [
            1295,
            1
          ]
        },
        "linecol": [
          1295,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(LIBREST) * (AUTOVERSLIB - LIBREST)",
          "linecol": [
            1297,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LIBIMP",
          "linecol": [
            1297,
            1
          ]
        },
        "linecol": [
          1297,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CILOYIMP , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB))",
          "linecol": [
            1299,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LOIREST",
          "linecol": [
            1299,
            1
          ]
        },
        "linecol": [
          1299,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(LOIREST) * (CILOYIMP - LOIREST)",
          "linecol": [
            1301,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "LOIIMP",
          "linecol": [
            1301,
            1
          ]
        },
        "linecol": [
          1301,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CRERESTAU , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP))",
          "linecol": [
            1303,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAUREST",
          "linecol": [
            1303,
            1
          ]
        },
        "linecol": [
          1303,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(TAUREST) * (CRERESTAU - TAUREST)",
          "linecol": [
            1305,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TAUIMP",
          "linecol": [
            1305,
            1
          ]
        },
        "linecol": [
          1305,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CICONGAGRI , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU))",
          "linecol": [
            1307,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AGRREST",
          "linecol": [
            1307,
            1
          ]
        },
        "linecol": [
          1307,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(AGRREST) * (CICONGAGRI - AGRREST)",
          "linecol": [
            1309,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AGRIMP",
          "linecol": [
            1309,
            1
          ]
        },
        "linecol": [
          1309,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CREARTS , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI))",
          "linecol": [
            1311,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ARTREST",
          "linecol": [
            1311,
            1
          ]
        },
        "linecol": [
          1311,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(ARTREST) * (CREARTS - ARTREST)",
          "linecol": [
            1313,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ARTIMP",
          "linecol": [
            1313,
            1
          ]
        },
        "linecol": [
          1313,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CREINTERESSE , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS))",
          "linecol": [
            1315,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INTREST",
          "linecol": [
            1315,
            1
          ]
        },
        "linecol": [
          1315,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(INTREST) * (CREINTERESSE - INTREST)",
          "linecol": [
            1317,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "INTIMP",
          "linecol": [
            1317,
            1
          ]
        },
        "linecol": [
          1317,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CREFORMCHENT , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE))",
          "linecol": [
            1319,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "FORREST",
          "linecol": [
            1319,
            1
          ]
        },
        "linecol": [
          1319,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(FORREST) * (CREFORMCHENT - FORREST)",
          "linecol": [
            1321,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "FORIMP",
          "linecol": [
            1321,
            1
          ]
        },
        "linecol": [
          1321,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CRESINTER , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT))",
          "linecol": [
            1323,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PSIREST",
          "linecol": [
            1323,
            1
          ]
        },
        "linecol": [
          1323,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(PSIREST) * (CRESINTER - PSIREST)",
          "linecol": [
            1325,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PSIIMP",
          "linecol": [
            1325,
            1
          ]
        },
        "linecol": [
          1325,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CREPROSP , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER))",
          "linecol": [
            1327,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PROREST",
          "linecol": [
            1327,
            1
          ]
        },
        "linecol": [
          1327,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(PROREST) * (CREPROSP - PROREST)",
          "linecol": [
            1330,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PROIMP",
          "linecol": [
            1330,
            1
          ]
        },
        "linecol": [
          1330,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CREAGRIBIO , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP))",
          "linecol": [
            1332,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BIOREST",
          "linecol": [
            1332,
            1
          ]
        },
        "linecol": [
          1332,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(BIOREST) * (CREAGRIBIO - BIOREST)",
          "linecol": [
            1335,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BIOIMP",
          "linecol": [
            1335,
            1
          ]
        },
        "linecol": [
          1335,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CREAPP , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO))",
          "linecol": [
            1337,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "APPREST",
          "linecol": [
            1337,
            1
          ]
        },
        "linecol": [
          1337,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(APPREST) * (CREAPP - APPREST)",
          "linecol": [
            1340,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "APPIMP",
          "linecol": [
            1340,
            1
          ]
        },
        "linecol": [
          1340,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CREFAM , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP))",
          "linecol": [
            1342,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "FAMREST",
          "linecol": [
            1342,
            1
          ]
        },
        "linecol": [
          1342,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(FAMREST) * (CREFAM - FAMREST)",
          "linecol": [
            1345,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "FAMIMP",
          "linecol": [
            1345,
            1
          ]
        },
        "linecol": [
          1345,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CIHABPRIN , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM))",
          "linecol": [
            1347,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HABREST",
          "linecol": [
            1347,
            1
          ]
        },
        "linecol": [
          1347,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(HABREST) * (CIHABPRIN - HABREST)",
          "linecol": [
            1350,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "HABIMP",
          "linecol": [
            1350,
            1
          ]
        },
        "linecol": [
          1350,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CIFORET , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN))",
          "linecol": [
            1352,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ROFREST",
          "linecol": [
            1352,
            1
          ]
        },
        "linecol": [
          1352,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(ROFREST) * (CIFORET - ROFREST)",
          "linecol": [
            1355,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ROFIMP",
          "linecol": [
            1355,
            1
          ]
        },
        "linecol": [
          1355,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CIADCRE , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET))",
          "linecol": [
            1357,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SALREST",
          "linecol": [
            1357,
            1
          ]
        },
        "linecol": [
          1357,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(SALREST) * (CIADCRE - SALREST)",
          "linecol": [
            1360,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SALIMP",
          "linecol": [
            1360,
            1
          ]
        },
        "linecol": [
          1360,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CIPRETUD , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE))",
          "linecol": [
            1362,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PREREST",
          "linecol": [
            1362,
            1
          ]
        },
        "linecol": [
          1362,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(PREREST) * (CIPRETUD - PREREST)",
          "linecol": [
            1365,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "PREIMP",
          "linecol": [
            1365,
            1
          ]
        },
        "linecol": [
          1365,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CISYND , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD))",
          "linecol": [
            1367,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SYNREST",
          "linecol": [
            1367,
            1
          ]
        },
        "linecol": [
          1367,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(SYNREST) * (CISYND - SYNREST)",
          "linecol": [
            1370,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "SYNIMP",
          "linecol": [
            1370,
            1
          ]
        },
        "linecol": [
          1370,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CIGARD , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND))",
          "linecol": [
            1372,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GARREST",
          "linecol": [
            1372,
            1
          ]
        },
        "linecol": [
          1372,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(GARREST) * (CIGARD - GARREST)",
          "linecol": [
            1375,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "GARIMP",
          "linecol": [
            1375,
            1
          ]
        },
        "linecol": [
          1375,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CICA , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD))",
          "linecol": [
            1377,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BAIREST",
          "linecol": [
            1377,
            1
          ]
        },
        "linecol": [
          1377,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(BAIREST) * (CICA - BAIREST)",
          "linecol": [
            1380,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "BAIIMP",
          "linecol": [
            1380,
            1
          ]
        },
        "linecol": [
          1380,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(IPELUS , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA))",
          "linecol": [
            1382,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ELUREST",
          "linecol": [
            1382,
            1
          ]
        },
        "linecol": [
          1382,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(ELUREST) * (IPELUS - ELUREST)",
          "linecol": [
            1385,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ELUIMP",
          "linecol": [
            1385,
            1
          ]
        },
        "linecol": [
          1385,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CITEC , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS))",
          "linecol": [
            1387,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TECREST",
          "linecol": [
            1387,
            1
          ]
        },
        "linecol": [
          1387,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(TECREST) * (CITEC - TECREST)",
          "linecol": [
            1390,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "TECIMP",
          "linecol": [
            1390,
            1
          ]
        },
        "linecol": [
          1390,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CIDEVDUR , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS -CITEC))",
          "linecol": [
            1392,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEPREST",
          "linecol": [
            1392,
            1
          ]
        },
        "linecol": [
          1392,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(DEPREST) * (CIDEVDUR - DEPREST)",
          "linecol": [
            1396,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "DEPIMP",
          "linecol": [
            1396,
            1
          ]
        },
        "linecol": [
          1396,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CIGE , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS -CITEC-CIDEVDUR))",
          "linecol": [
            1398,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AIDREST",
          "linecol": [
            1398,
            1
          ]
        },
        "linecol": [
          1398,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(AIDREST) * (CIGE - AIDREST)",
          "linecol": [
            1402,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "AIDIMP",
          "linecol": [
            1402,
            1
          ]
        },
        "linecol": [
          1402,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(I2DH , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS -CITEC-CIDEVDUR-CIGE))",
          "linecol": [
            1404,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ASSREST",
          "linecol": [
            1404,
            1
          ]
        },
        "linecol": [
          1404,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(ASSREST) * (I2DH - ASSREST)",
          "linecol": [
            1408,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "ASSIMP",
          "linecol": [
            1408,
            1
          ]
        },
        "linecol": [
          1408,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CI2CK , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS -CITEC-CIDEVDUR-CIGE-I2DH))",
          "linecol": [
            1410,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "2CKREST",
          "linecol": [
            1410,
            1
          ]
        },
        "linecol": [
          1410,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(2CKREST) * (CI2CK - 2CKREST)",
          "linecol": [
            1414,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "2CKIMP",
          "linecol": [
            1414,
            1
          ]
        },
        "linecol": [
          1414,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(COD8TL , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS -CITEC-CIDEVDUR-CIGE-I2DH-CI2CK))",
          "linecol": [
            1416,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EMPREST",
          "linecol": [
            1416,
            1
          ]
        },
        "linecol": [
          1416,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(EMPREST) * (COD8TL - EMPREST)",
          "linecol": [
            1420,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EMPIMP",
          "linecol": [
            1420,
            1
          ]
        },
        "linecol": [
          1420,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CIDIREPARGNE , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS -CITEC-CIDEVDUR-CIGE-I2DH-CI2CK-COD8TL))",
          "linecol": [
            1422,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EPAREST",
          "linecol": [
            1422,
            1
          ]
        },
        "linecol": [
          1422,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(EPAREST) * (CIDIREPARGNE - EPAREST)",
          "linecol": [
            1426,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EPAIMP",
          "linecol": [
            1426,
            1
          ]
        },
        "linecol": [
          1426,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(IPRECH , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS -CITEC-CIDEVDUR-CIGE-I2DH-CI2CK-COD8TL-CIDIREPARGNE))",
          "linecol": [
            1429,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RECREST",
          "linecol": [
            1429,
            1
          ]
        },
        "linecol": [
          1429,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(RECREST) * (IPRECH - RECREST)",
          "linecol": [
            1433,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "RECIMP",
          "linecol": [
            1433,
            1
          ]
        },
        "linecol": [
          1433,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CIEXCEDENT , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS -CITEC-CIDEVDUR-CIGE-I2DH-CI2CK-COD8TL-CIDIREPARGNE-IPRECH))",
          "linecol": [
            1435,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EXCREST",
          "linecol": [
            1435,
            1
          ]
        },
        "linecol": [
          1435,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(EXCREST) * (CIEXCEDENT - EXCREST)",
          "linecol": [
            1439,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "EXCIMP",
          "linecol": [
            1439,
            1
          ]
        },
        "linecol": [
          1439,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif(REST) * max(0,min(CICORSENOW , IRESTITIR-(PPETOTX-PPERSA)-AUTOVERSLIB-CILOYIMP-CRERESTAU-CICONGAGRI-CREARTS-CREINTERESSE-CREFORMCHENT -CRESINTER-CREPROSP-CREAGRIBIO-CREAPP-CREFAM-CIHABPRIN-CIFORET-CIADCRE-CIPRETUD-CISYND-CIGARD-CICA-IPELUS -CITEC-CIDEVDUR-CIGE-I2DH-CI2CK-COD8TL-CIDIREPARGNE-IPRECH-CIEXCEDENT))",
          "linecol": [
            1441,
            11
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CORREST",
          "linecol": [
            1441,
            1
          ]
        },
        "linecol": [
          1441,
          1
        ]
      },
      {
        "expression": {
          "type": "variable_definition_expression",
          "value": "positif_ou_nul(CORREST) * (CICORSENOW - CORREST)",
          "linecol": [
            1445,
            10
          ]
        },
        "type": "variable_definition",
        "name": {
          "type": "symbol",
          "name": "CORIMP",
          "linecol": [
            1445,
            1
          ]
        },
        "linecol": [
          1445,
          1
        ]
      }
    ],
    "type": "regle_declaration",
    "name": {
      "type": "symbol",
      "name": "990",
      "linecol": [
        1290,
        7
      ]
    },
    "linecol": [
      1290,
      1
    ]
  }
]
