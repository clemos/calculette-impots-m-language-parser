comment = r'\#.*'

symbol = r'\w+'
symbol_enumeration = symbol ("," symbol)*
float = r'\d+\.\d+'
integer = r'\d+'
string = '"' r'[^"]*' '"'
integer_range = integer ".." integer

application_declaration = "application" symbol ";"
applications_reference = "application" ":" symbol_enumeration
enchaineur_declaration = "enchaineur" symbol applications_reference ";"

alias = "alias" symbol
attribute = symbol "=" integer
tableau = "tableau[" integer "]"
type = "type" ("BOOLEEN" / "DATE_AAAA" / "DATE_JJMMAAAA" / "DATE_MM" / "ENTIER" / "REEL")
variable_calculee_qualifiers = ("base" / "restituee")*
variable_calculee_declaration = symbol ":" tableau? "calculee" variable_calculee_qualifiers ":" string type? ";"
variable_const_declaration = symbol ":" "const" "=" float ";"
variable_saisie_declaration = symbol ":" "saisie" ("contexte" / "famille" / "penalite" / "revenu")+ attribute* "restituee"? alias ":" string type? ";"
variable_declaration = (variable_calculee_declaration / variable_const_declaration / variable_saisie_declaration)

variable_definition_expression = r'[^;]+'
brackets = "[" symbol "]"
variable_definition = symbol brackets? "=" variable_definition_expression ";"
symbol_or_integer_range = (integer_range / symbol)
loop_variable_domain = symbol_or_integer_range ("," symbol_or_integer_range)*
loop_variable = symbol "=" loop_variable_domain
loop_variables = loop_variable (";" loop_variable)*
pour_variable_definition = "pour" loop_variables ":" variable_definition
regle_enchaineur = "enchaineur" ":" symbol ";"
regle_declaration = "regle" symbol+ ":" applications_reference ";" regle_enchaineur? (variable_definition / pour_variable_definition)+

verif_declaration_condition_expression = r'((?!alors).|\n)+'
verif_declaration_erreurs = "erreur" symbol*
verif_declaration_condition = ("si" verif_declaration_condition_expression "alors" verif_declaration_erreurs ";")
verif_declaration = "verif" symbol+ ":" applications_reference ";" verif_declaration_condition+

erreur_type = ("anomalie" / "discordance" / "informative")
erreur_declaration = symbol ":" erreur_type ":" string ":" string ":" string ":" string ":" string ";"

root = (comment / application_declaration / enchaineur_declaration / variable_declaration / regle_declaration / verif_declaration / erreur_declaration)+ EOF
